{"version":3,"sources":["_references.ts","app.config.ts","app.constants.ts","MorfApp.bundle.js","app.run.ts","models/models.ts","services/cordovaService.ts","services/nettskjemaService.ts","services/dataService.ts","components/resizewindow/resize.ts","tasks/task1/controller.ts","app.ts","models/models-new.ts","services/serverService.ts","components/videoplayer/videoplayer.ts","tasks/task2/controller.ts","tasks/task3/controller.ts","tasks/task5/controller.ts","views/mainpanel/mainpanel.ts","views/testpanel/testpanel.ts"],"names":[],"mappings":"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","file":"MorfApp.bundle.js","sourcesContent":["/// <reference path=\"../typings/index.d.ts\"/>","/// <reference path=\"_references.ts\"/>\n\nmodule MorfologiApp {\n    'use strict';\n\n    /**\n     * Application-wide overall configuration\n     * @param $stateProvider  Used for ionic internal routing.g /reward\n     * @param $urlRouterProvider  Used for defining default route.\n     * @param $httpProvider  Used for registering an interceptor (TokenInterceptor).\n     */\n    export function configApp($stateProvider: ng.ui.IStateProvider, $urlRouterProvider: ng.ui.IUrlRouterProvider,\n                              $httpProvider: ng.IHttpProvider, $controllerProvider: ng.IControllerProvider,\n                              $sceDelegateProvider: ng.ISCEDelegateProvider,\n                              $translateProvider: angular.translate.ITranslateProvider ) {\n\n        //define routing\n        $stateProvider\n            .state('main', {\n                name: 'main',\n                url: '/main',\n                templateUrl: './js/views/mainpanel/mainpanel.html'\n            })\n            .state('tasks', {\n                name: 'test',\n                url: '/test',\n                templateUrl: './js/views/testpanel/testpanel.html'\n            });\n\n        $urlRouterProvider.otherwise('/main');\n        $httpProvider.defaults.withCredentials = true;\n        $sceDelegateProvider.resourceUrlWhitelist([\n            'self',\n            'https://nettskjema.uio.no/**',\n            'cdvfile://localhost/documents/**',\n            'file:///var/**'\n        ]);\n\n\n        // Translation\n        $translateProvider.useSanitizeValueStrategy('escaped');\n        $translateProvider.useStaticFilesLoader({\n            prefix: './languages/',\n            suffix: '.json'\n        });\n\n        var lang = null;\n        if (navigator['languages']) {\n            lang = navigator['languages'][0];\n        } else {\n            lang = navigator.language || navigator.userLanguage;\n        }\n\n        if (lang.indexOf('nn') > -1 || lang.indexOf('nb') > -1) {\n            $translateProvider.preferredLanguage('nb');\n            sessionStorage['lang'] = 'nb';\n        } else {\n            $translateProvider.preferredLanguage('en');\n            sessionStorage['lang'] = 'en';\n        }\n\n        // Force to norwegian - remove if using multiple languages\n        $translateProvider.preferredLanguage('nb');\n\n    }\n\n    configApp.$inject = [\"$stateProvider\", \"$urlRouterProvider\", \"$httpProvider\",\n            \"$controllerProvider\", \"$sceDelegateProvider\", \"$translateProvider\"];\n\n}\n","/// <reference path='_references.ts'/>\n\nmodule MorfologiApp {\n    'use strict';\n\n    export interface IMorfologiConstants {\n        constants: {};\n    }\n\n    export class MorfologiConstants {\n        public static get constants() {\n\n            // Release number should be updated accordingly on new app releases  e.g.  isp_setup_r1.json, isp_storage_r1_sample.json\n            return {\n                SETUP_FILE_PATH: \"content/\",\n                SETUP_FILE_NAME: \"isp_setup_\",   // add 'training_' to use training setup file\n                STORAGE_FILE_NAME: \"isp_storage\",\n                RELEASE_NUMBER: \"r1\",               // release number is referenced for both setup and storage files\n                SKIP_DAY_PASSWORD: \"frosk\",\n                FORMAL_TEST_DATE: new Date('September 18, 2016 23:59:59'),\n                SAMPLE_TEST_NAME: 'sample',\n                FORMAL_TEST_NAME: 'formal',\n                RECORDING_LIFESPAN: 2592000000,  // 1000 * 60 * 60 * 24 * 30    =  30 days in milliseconds\n                SHOW_CHEATS: true\n            };\n        };\n    }\n}\n","/// <reference path=\"../typings/index.d.ts\"/> \n\n/// <reference path=\"_references.ts\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    'use strict';\n    /**\n     * Application-wide overall configuration\n     * @param $stateProvider  Used for ionic internal routing.g /reward\n     * @param $urlRouterProvider  Used for defining default route.\n     * @param $httpProvider  Used for registering an interceptor (TokenInterceptor).\n     */\n    function configApp($stateProvider, $urlRouterProvider, $httpProvider, $controllerProvider, $sceDelegateProvider, $translateProvider) {\n        //define routing\n        $stateProvider\n            .state('main', {\n            name: 'main',\n            url: '/main',\n            templateUrl: './js/views/mainpanel/mainpanel.html'\n        })\n            .state('tasks', {\n            name: 'test',\n            url: '/test',\n            templateUrl: './js/views/testpanel/testpanel.html'\n        });\n        $urlRouterProvider.otherwise('/main');\n        $httpProvider.defaults.withCredentials = true;\n        $sceDelegateProvider.resourceUrlWhitelist([\n            'self',\n            'https://nettskjema.uio.no/**',\n            'cdvfile://localhost/documents/**',\n            'file:///var/**'\n        ]);\n        // Translation\n        $translateProvider.useSanitizeValueStrategy('escaped');\n        $translateProvider.useStaticFilesLoader({\n            prefix: './languages/',\n            suffix: '.json'\n        });\n        var lang = null;\n        if (navigator['languages']) {\n            lang = navigator['languages'][0];\n        }\n        else {\n            lang = navigator.language || navigator.userLanguage;\n        }\n        if (lang.indexOf('nn') > -1 || lang.indexOf('nb') > -1) {\n            $translateProvider.preferredLanguage('nb');\n            sessionStorage['lang'] = 'nb';\n        }\n        else {\n            $translateProvider.preferredLanguage('en');\n            sessionStorage['lang'] = 'en';\n        }\n        // Force to norwegian - remove if using multiple languages\n        $translateProvider.preferredLanguage('nb');\n    }\n    MorfologiApp.configApp = configApp;\n    configApp.$inject = [\"$stateProvider\", \"$urlRouterProvider\", \"$httpProvider\",\n        \"$controllerProvider\", \"$sceDelegateProvider\", \"$translateProvider\"];\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path='_references.ts'/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    'use strict';\n    var MorfologiConstants = (function () {\n        function MorfologiConstants() {\n        }\n        Object.defineProperty(MorfologiConstants, \"constants\", {\n            get: function () {\n                // Release number should be updated accordingly on new app releases  e.g.  isp_setup_r1.json, isp_storage_r1_sample.json\n                return {\n                    SETUP_FILE_PATH: \"content/\",\n                    SETUP_FILE_NAME: \"isp_setup_\",\n                    STORAGE_FILE_NAME: \"isp_storage\",\n                    RELEASE_NUMBER: \"r1\",\n                    SKIP_DAY_PASSWORD: \"frosk\",\n                    FORMAL_TEST_DATE: new Date('September 18, 2016 23:59:59'),\n                    SAMPLE_TEST_NAME: 'sample',\n                    FORMAL_TEST_NAME: 'formal',\n                    RECORDING_LIFESPAN: 2592000000,\n                    SHOW_CHEATS: true\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return MorfologiConstants;\n    }());\n    MorfologiApp.MorfologiConstants = MorfologiConstants;\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"_references.ts\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    'use strict';\n    /**\n     * Application-wide overall run function\n     * @param $window  Used for configuring cordova plugins options.\n     * @param $location  Re-route if storage is reloaded\n     * @param $state  Used to reload the state\n     * @param dataService Call to storage loading check\n     */\n    function runApp($window, $location) {\n    }\n    MorfologiApp.runApp = runApp;\n    runApp.$inject = [\"$window\", \"$location\", 'DataService'];\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../_references.ts\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    \"use strict\";\n    var Audio = (function () {\n        function Audio() {\n        }\n        Audio.prototype.deserialise = function (input) {\n            for (var key in input) {\n                if (input.hasOwnProperty(key)) {\n                    this[key] = input[key];\n                }\n            }\n            return this;\n        };\n        Audio.prototype.getKey = function (key) {\n            if (this.hasOwnProperty(key)) {\n                return this[key];\n            }\n        };\n        return Audio;\n    }());\n    var Video = (function () {\n        function Video() {\n        }\n        Video.prototype.deserialise = function (input) {\n            for (var key in input) {\n                if (input.hasOwnProperty(key)) {\n                    this[key] = input[key];\n                }\n            }\n            return this;\n        };\n        Video.prototype.getKey = function (key) {\n            if (this.hasOwnProperty(key)) {\n                return this[key];\n            }\n        };\n        return Video;\n    }());\n    var Image = (function () {\n        function Image() {\n        }\n        Image.prototype.deserialise = function (input) {\n            for (var key in input) {\n                if (input.hasOwnProperty(key)) {\n                    this[key] = input[key];\n                }\n            }\n            return this;\n        };\n        Image.prototype.getKey = function (key) {\n            if (this.hasOwnProperty(key)) {\n                return this[key];\n            }\n        };\n        return Image;\n    }());\n    var Common = (function () {\n        function Common() {\n            this.audio = new Audio();\n            this.video = new Video();\n            this.image = new Image();\n        }\n        return Common;\n    }());\n    MorfologiApp.Common = Common;\n    var Reward = (function () {\n        function Reward(week, day, type) {\n            this.type = type;\n            this.dayIndex = day;\n            this.weekIndex = week;\n            this.width = 50;\n            this.height = 50;\n        }\n        return Reward;\n    }());\n    MorfologiApp.Reward = Reward;\n    var Achievement = (function () {\n        // e.g. found in the form /common/images/rewards/week-<weekIndex>/<dayIndex>.gif\n        function Achievement() {\n            this.avatar = -1;\n            this.weekIndex = -1;\n            this.dayIndex = -1;\n            this.taskIndex = -1;\n            this.rewards = [];\n        }\n        //  Old completion functions\n        /*\n                completeCurrentWeek() {\n                    this.weekIndex++;\n                    this.dayIndex = this.taskIndex = -1;\n                }\n        \n                completeCurrentDay() {\n                    if (this.dayIndex < 2) {\n                        this.dayIndex++;\n                    } else {\n                        this.dayIndex = -1;\n                    }\n                    this.taskIndex = -1;\n                }\n        \n                completeCurrentTask() {\n                    this.taskIndex++;\n                    if (this.taskIndex > 6) {\n                        this.taskIndex = -1;\n                    }\n                }\n        */\n        Achievement.prototype.hasCollectedReward = function (week, day) {\n            for (var r = 0; r < this.rewards.length; r++) {\n                if (this.rewards[r].weekIndex === week && this.rewards[r].dayIndex === day) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        Achievement.prototype.completeTask = function (weekIndex, dayIndex, taskIndex) {\n            if (weekIndex > this.weekIndex && dayIndex > this.dayIndex && taskIndex > this.taskIndex) {\n                this.taskIndex = taskIndex;\n            }\n        };\n        Achievement.prototype.completeDay = function (weekIndex, dayIndex) {\n            if (weekIndex > this.weekIndex && dayIndex > this.dayIndex) {\n                this.dayIndex = dayIndex;\n                this.taskIndex = -1;\n            }\n        };\n        Achievement.prototype.completeWeek = function (weekIndex) {\n            if (weekIndex > this.weekIndex) {\n                this.weekIndex = weekIndex;\n                this.dayIndex = this.taskIndex = -1;\n            }\n        };\n        return Achievement;\n    }());\n    MorfologiApp.Achievement = Achievement;\n    var Overlay = (function () {\n        function Overlay() {\n            this.id = -1;\n            this.type = 'png';\n            this.sequence = -1;\n            this.start = { x: 0, y: 0, w: 0, h: 0 };\n            this.transition = { x: 0, y: 0, scale: 1, duration: 1 };\n            this.map = { x: 0, y: 0, w: 0, h: 0 };\n            this.pointer = { x: 0, y: 0, retain: true };\n            this.opacity = 1;\n            this.visible_before = false;\n            this.visible_after = false;\n            this.auto_start = false;\n            this.auto_return = false;\n            this.allow_return = true;\n            this.timeout = 0;\n            this.delay = 0;\n            this.active = false;\n            this.completed = false;\n        }\n        Overlay.prototype.setItem = function (key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined') {\n                this[key] = value;\n            }\n        };\n        return Overlay;\n    }());\n    MorfologiApp.Overlay = Overlay;\n    var Overlays = (function () {\n        function Overlays() {\n            this.display_delay = 0;\n            this.zoomable_images = [];\n            this.appearing_images = [];\n            this.playable_audio = [];\n            this.focus_images = [];\n        }\n        return Overlays;\n    }());\n    MorfologiApp.Overlays = Overlays;\n    var Book = (function () {\n        function Book() {\n            this.reference = '';\n            this.label_en = '';\n            this.thumbnail = -1;\n            this.record_audio = false;\n            this.backgrounds = [];\n            this.completed = false;\n            this.overlays = {};\n        }\n        Book.prototype.setItem = function (key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined') {\n                this[key] = value;\n            }\n        };\n        return Book;\n    }());\n    MorfologiApp.Book = Book;\n    var Task = (function () {\n        function Task() {\n            this.type = '100';\n            this.record_audio = false;\n            this.completed = false;\n            this.play_introduction = true;\n        }\n        return Task;\n    }());\n    MorfologiApp.Task = Task;\n    var Day = (function () {\n        function Day() {\n            this.completed = false;\n            this.tasks = [];\n        }\n        return Day;\n    }());\n    var Week = (function () {\n        function Week() {\n            this.completed = false;\n            this.days = [];\n        }\n        return Week;\n    }());\n    MorfologiApp.Week = Week;\n    var Setup = (function () {\n        function Setup() {\n            this.books = [];\n            this.weeks = [];\n        }\n        Setup.prototype.deserialise = function (input) {\n            var commonKey = 'common', imageKey = 'image', audioKey = 'audio', videoKey = 'video';\n            var booksKey = 'books', referenceKey = 'reference', backgroundKey = 'backgrounds', overlaysKey = 'overlays';\n            var labelEnKey = 'label_en', labelNoKey = 'label_no', thumbnailKey = 'thumbnail', revisionKey = 'revision';\n            var idKey = 'id', sequenceKey = 'sequence', descriptionKey = 'description', delayKey = 'delay';\n            var startKey = 'start', transitionKey = 'transition', xKey = 'x', yKey = 'y', wKey = 'w', hKey = 'h';\n            var opacityKey = 'opacity', visibleBeforeKey = 'visible_before', visibleAfterKey = 'visible_after';\n            var autoReturnKey = 'auto_return', typeKey = 'type', timeoutKey = 'timeout', autoStartKey = 'auto_start';\n            var allowReturnKey = 'allow_return', scaleKey = 'scale', durationKey = 'duration', mapKey = 'map';\n            var weeksKey = 'weeks', wordEnKey = 'word_en', wordNoKey = 'word_no', bookIndexKey = 'book_index';\n            var daysKey = 'days', tasksKey = 'tasks', recordAudioKey = 'record_audio', focusKey = 'focus';\n            var playIntroKey = 'play_introduction', activeKey = 'active', structureKey = 'structure';\n            var pointerKey = 'pointer', retainKey = 'retain', displayDelayKey = 'display_delay';\n            this.common = new Common();\n            this.common.image.deserialise(input[commonKey][imageKey]);\n            this.common.audio.deserialise(input[commonKey][audioKey]);\n            this.common.video.deserialise(input[commonKey][videoKey]);\n            this.common.revision = input[commonKey][revisionKey];\n            for (var b = 0; b < input[booksKey].length; b++) {\n                var book = new Book();\n                book.setItem(referenceKey, input[booksKey][b][referenceKey]);\n                book.setItem(labelEnKey, input[booksKey][b][labelEnKey]);\n                book.setItem(labelNoKey, input[booksKey][b][labelNoKey]);\n                book.setItem(thumbnailKey, input[booksKey][b][thumbnailKey]);\n                book.setItem(recordAudioKey, input[booksKey][b][recordAudioKey]);\n                book.setItem(backgroundKey, input[booksKey][b][backgroundKey]);\n                for (var o in input[booksKey][b][overlaysKey]) {\n                    if (input[booksKey][b][overlaysKey].hasOwnProperty(o)) {\n                        var newOverlays = new Overlays();\n                        for (var oType in input[booksKey][b][overlaysKey][o]) {\n                            if (input[booksKey][b][overlaysKey][o].hasOwnProperty(oType) && newOverlays.hasOwnProperty(oType)) {\n                                if (oType === displayDelayKey) {\n                                    newOverlays[displayDelayKey] = input[booksKey][b][overlaysKey][o][oType];\n                                }\n                                else {\n                                    for (var oi = 0; oi < input[booksKey][b][overlaysKey][o][oType].length; oi++) {\n                                        var inputRef = input[booksKey][b][overlaysKey][o][oType][oi];\n                                        var overlay_item = new Overlay();\n                                        overlay_item.setItem(idKey, inputRef[idKey]);\n                                        overlay_item.setItem(typeKey, inputRef[typeKey]);\n                                        overlay_item.setItem(sequenceKey, inputRef[sequenceKey]);\n                                        overlay_item.setItem(descriptionKey, inputRef[descriptionKey]);\n                                        if (typeof inputRef[startKey] !== 'undefined') {\n                                            overlay_item.setItem(startKey, {\n                                                x: inputRef[startKey][xKey],\n                                                y: inputRef[startKey][yKey],\n                                                w: inputRef[startKey][wKey],\n                                                h: inputRef[startKey][hKey]\n                                            });\n                                        }\n                                        if (typeof inputRef[transitionKey] !== 'undefined') {\n                                            overlay_item.setItem(transitionKey, {\n                                                x: inputRef[transitionKey][xKey],\n                                                y: inputRef[transitionKey][yKey],\n                                                scale: inputRef[transitionKey][scaleKey],\n                                                duration: inputRef[transitionKey][durationKey]\n                                            });\n                                        }\n                                        if (typeof inputRef[mapKey] !== 'undefined') {\n                                            overlay_item.setItem(mapKey, {\n                                                x: inputRef[mapKey][xKey],\n                                                y: inputRef[mapKey][yKey],\n                                                w: inputRef[mapKey][wKey],\n                                                h: inputRef[mapKey][hKey]\n                                            });\n                                        }\n                                        if (typeof inputRef[pointerKey] !== 'undefined') {\n                                            overlay_item.setItem(pointerKey, {\n                                                x: inputRef[pointerKey][xKey],\n                                                y: inputRef[pointerKey][yKey],\n                                                retain: inputRef[pointerKey][retainKey]\n                                            });\n                                        }\n                                        overlay_item.setItem(opacityKey, inputRef[opacityKey]);\n                                        overlay_item.setItem(visibleBeforeKey, inputRef[visibleBeforeKey]);\n                                        overlay_item.setItem(visibleAfterKey, inputRef[visibleAfterKey]);\n                                        overlay_item.setItem(autoReturnKey, inputRef[autoReturnKey]);\n                                        overlay_item.setItem(autoStartKey, inputRef[autoStartKey]);\n                                        overlay_item.setItem(allowReturnKey, inputRef[allowReturnKey]);\n                                        overlay_item.setItem(delayKey, inputRef[delayKey]);\n                                        overlay_item.setItem(timeoutKey, inputRef[timeoutKey]);\n                                        // 'active' and 'completed' attribute are for internal use only\n                                        newOverlays[oType].push(overlay_item);\n                                    }\n                                }\n                            }\n                        }\n                        book[overlaysKey][o] = newOverlays;\n                    }\n                }\n                this.books.push(book);\n            }\n            for (var w = 0; w < input[weeksKey].length; w++) {\n                var week = new Week();\n                week[wordEnKey] = input[weeksKey][w][wordEnKey];\n                week[wordNoKey] = input[weeksKey][w][wordNoKey];\n                week[bookIndexKey] = input[weeksKey][w][bookIndexKey];\n                for (var d = 0; d < input[weeksKey][w][daysKey].length; d++) {\n                    var day = new Day();\n                    for (var t = 0; t < input[weeksKey][w][daysKey][d][tasksKey].length; t++) {\n                        var task = new Task();\n                        task[typeKey] = input[weeksKey][w][daysKey][d][tasksKey][t][typeKey];\n                        task[recordAudioKey] = input[weeksKey][w][daysKey][d][tasksKey][t][recordAudioKey];\n                        task[playIntroKey] = input[weeksKey][w][daysKey][d][tasksKey][t][playIntroKey];\n                        // Defines a task specific structure for the layout, 'Image Focus' and file names / types etc.\n                        if (typeof input[weeksKey][w][daysKey][d][tasksKey][t][structureKey] !== 'undefined') {\n                            task[structureKey] = input[weeksKey][w][daysKey][d][tasksKey][t][structureKey];\n                        }\n                        day[tasksKey].push(task);\n                    }\n                    week[daysKey].push(day);\n                }\n                this.weeks.push(week);\n            }\n            return this;\n        };\n        /**\n         * Mark the specified Task as complete\n         *\n         * @param w\n         * @param d\n         * @param t\n         */\n        Setup.prototype.markTaskAsCompleted = function (w, d, t) {\n            this.weeks[w].days[d].tasks[t].completed = true;\n        };\n        /**\n         * Mark the specified Day as complete\n         *\n         * @param w\n         * @param d\n         */\n        Setup.prototype.markDayAsCompleted = function (w, d) {\n            this.weeks[w].days[d].completed = true;\n        };\n        /**\n         * Mark the specified Week as complete\n         *\n         * @param w\n         */\n        Setup.prototype.markWeekAsCompleted = function (w) {\n            this.weeks[w].completed = true;\n        };\n        /**\n         * Mark the specified Book as complete\n         *\n         * @param book_index\n         */\n        Setup.prototype.markBookAsCompleted = function (week) {\n            // Not all weeks have books\n            if (this.weeks[week].book_index !== -1) {\n                this.books[this.weeks[week].book_index].completed = true;\n            }\n        };\n        return Setup;\n    }());\n    MorfologiApp.Setup = Setup;\n    var UsagePostData = (function () {\n        function UsagePostData(user, week_index, word_en, word_no, day_index, task_index, book_reference, completed_on, skipped, accessed, duration, audio_file, usage_record) {\n            this.user = user;\n            this.word_en = word_en;\n            this.word_no = word_no;\n            this.week = week_index;\n            this.day = day_index;\n            this.task = task_index;\n            this.book = book_reference;\n            this.completed_on = completed_on;\n            this.day_skipped = skipped;\n            this.accessed = accessed;\n            this.duration = duration;\n            this.audio_file = audio_file;\n            this.usage_record = usage_record;\n        }\n        UsagePostData.prototype.asFormDataWithAttachment = function (file, UUID) {\n            var fd = new FormData();\n            fd.append('answersAsMap[557095].textAnswer', this.user);\n            fd.append('answersAsMap[558089].textAnswer', this.week);\n            fd.append('answersAsMap[558090].textAnswer', this.word_en);\n            fd.append('answersAsMap[558093].textAnswer', this.word_no);\n            fd.append('answersAsMap[558091].textAnswer', this.day);\n            fd.append('answersAsMap[558092].textAnswer', this.task);\n            fd.append('answersAsMap[559630].textAnswer', this.book);\n            if (this.completed_on !== null) {\n                fd.append('answersAsMap[560777].textAnswer', this.asNettskjemaDateFormat(this.completed_on));\n            }\n            else {\n                fd.append('answersAsMap[560777].textAnswer', '');\n            }\n            fd.append('answersAsMap[559416].textAnswer', this.day_skipped);\n            fd.append('answersAsMap[557046].textAnswer', this.asNettskjemaDateFormat(this.accessed));\n            fd.append('answersAsMap[557047].textAnswer', this.duration);\n            if (file !== null) {\n                var blob = new Blob([file], { type: \"audio/x-m4a\" });\n                fd.append('answersAsMap[559418].attachment.upload', blob, this.audio_file);\n            }\n            fd.append('answersAsMap[576155].textAnswer', UUID);\n            return fd;\n        };\n        UsagePostData.prototype.markAsSynced = function () {\n            this.usage_record.synced = true;\n        };\n        UsagePostData.prototype.asNettskjemaDateFormat = function (d) {\n            return d.getDate() + '.' + (d.getMonth() + 1) + '.' + d.getFullYear() + ' ' +\n                d.getHours() + ':' + d.getMinutes();\n        };\n        return UsagePostData;\n    }());\n    MorfologiApp.UsagePostData = UsagePostData;\n    var UsageStorage = (function () {\n        function UsageStorage() {\n            this.duration = 0;\n            this.synced = false;\n            this.audio_file = '';\n        }\n        UsageStorage.prototype.deserialise = function (input) {\n            var accessedKey = 'accessed', durationKey = 'duration', syncedKey = 'synced', audioKey = 'audio_file';\n            this.accessed = new Date(input[accessedKey]);\n            this.duration = input[durationKey];\n            this.audio_file = input[audioKey];\n            this.synced = input[syncedKey];\n            return this;\n        };\n        return UsageStorage;\n    }());\n    MorfologiApp.UsageStorage = UsageStorage;\n    var BookStorage = (function () {\n        function BookStorage() {\n            this.completed_on = null;\n            this.usage = [];\n            this.currentUsage = null;\n        }\n        BookStorage.prototype.setItem = function (key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined' && value !== null) {\n                this[key] = value;\n            }\n        };\n        return BookStorage;\n    }());\n    var TaskStorage = (function () {\n        function TaskStorage() {\n            this.completed_on = null;\n            this.usage = [];\n            this.currentUsage = null;\n        }\n        TaskStorage.prototype.setItem = function (key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined' && value !== null) {\n                this[key] = value;\n            }\n        };\n        return TaskStorage;\n    }());\n    var DayStorage = (function () {\n        function DayStorage() {\n            this.completed_on = null;\n            this.skipped = false;\n            this.tasks = [];\n            this.book_read = false;\n        }\n        DayStorage.prototype.setItem = function (key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined' && value !== null) {\n                this[key] = value;\n            }\n        };\n        return DayStorage;\n    }());\n    var WeekStorage = (function () {\n        function WeekStorage() {\n            this.completed_on = null;\n            this.days = [];\n        }\n        WeekStorage.prototype.setItem = function (key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined' && value !== null) {\n                this[key] = value;\n            }\n        };\n        return WeekStorage;\n    }());\n    MorfologiApp.WeekStorage = WeekStorage;\n    var Storage = (function () {\n        function Storage() {\n            this.weeks = [];\n            this.achievement = new Achievement();\n        }\n        /**\n         * Create tracking objects to match the current Setup\n         *\n         * @param setup\n         * @param username\n         */\n        Storage.prototype.initialise = function (setup, username) {\n            var _this = this;\n            var commonKey = 'common', revisionKey = 'revision';\n            var weeksKey = 'weeks', wordEnKey = 'word_en', wordNoKey = 'word_no', bookKey = 'book', booksKey = 'books';\n            var daysKey = 'days', tasksKey = 'tasks', bookIndexKey = 'book_index', referenceKey = 'reference';\n            this.username = username;\n            this.revision = setup[commonKey][revisionKey];\n            setup[weeksKey].forEach(function (w) {\n                var newWeek = new WeekStorage();\n                newWeek[wordEnKey] = w[wordEnKey];\n                newWeek[wordNoKey] = w[wordNoKey];\n                var bookIndex = w[bookIndexKey];\n                newWeek[bookKey] = new BookStorage();\n                if (bookIndex !== -1) {\n                    newWeek[bookKey][referenceKey] = setup[booksKey][bookIndex][referenceKey];\n                }\n                else {\n                    newWeek[bookKey][referenceKey] = 'consolidation';\n                }\n                w[daysKey].forEach(function (d) {\n                    var newDay = new DayStorage();\n                    d[tasksKey].forEach(function (t) {\n                        var newTask = new TaskStorage();\n                        newDay[tasksKey].push(newTask);\n                    });\n                    newWeek[daysKey].push(newDay);\n                });\n                _this.weeks.push(newWeek);\n            });\n            return this;\n        };\n        Storage.prototype.deserialise = function (input) {\n            var usageKey = 'usage', usernameKey = 'username', completedOnKey = 'completed_on', revisionKey = 'revision';\n            var achievementKey = 'achievement', avatarKey = 'avatar', taskIndexKey = 'taskIndex', dayIndexKey = 'dayIndex', weekIndexKey = 'weekIndex';\n            var weeksKey = 'weeks', wordEnKey = 'word_en', wordNoKey = 'word_no', bookKey = 'book', labelKey = 'label_en';\n            var daysKey = 'days', tasksKey = 'tasks', referenceKey = 'reference', bookReadKey = 'book_read';\n            var rewardsKey = 'rewards', rewardIdKey = 'id', rewardTypeKey = 'type', rewardXKey = 'xpos', rewardYKey = 'ypos';\n            this.username = input[usernameKey];\n            this.revision = input[revisionKey];\n            this.achievement = new Achievement();\n            this.achievement[avatarKey] = input[achievementKey][avatarKey];\n            this.achievement[taskIndexKey] = input[achievementKey][taskIndexKey];\n            this.achievement[dayIndexKey] = input[achievementKey][dayIndexKey];\n            this.achievement[weekIndexKey] = input[achievementKey][weekIndexKey];\n            // Bug fix one time only..\n            if (this.achievement[weekIndexKey] === 0 && this.achievement[dayIndexKey] >= 2) {\n                this.achievement[dayIndexKey] = 1;\n            }\n            else if (this.achievement[weekIndexKey] === 1 && this.achievement[dayIndexKey] >= 2) {\n                this.achievement[dayIndexKey] = 0;\n            }\n            //\n            for (var r = 0; r < input[achievementKey][rewardsKey].length; r++) {\n                var reward = new Reward(input[achievementKey][rewardsKey][r][weekIndexKey], input[achievementKey][rewardsKey][r][dayIndexKey], input[achievementKey][rewardsKey][r][rewardTypeKey]);\n                reward[rewardXKey] = input[achievementKey][rewardsKey][r][rewardXKey];\n                reward[rewardYKey] = input[achievementKey][rewardsKey][r][rewardYKey];\n                this.achievement[rewardsKey].push(reward);\n            }\n            for (var w = 0; w < input[weeksKey].length; w++) {\n                var week = new WeekStorage();\n                if (input[weeksKey][w][completedOnKey] !== null) {\n                    week[completedOnKey] = new Date(input[weeksKey][w][completedOnKey]);\n                }\n                week[wordEnKey] = input[weeksKey][w][wordEnKey];\n                week[wordNoKey] = input[weeksKey][w][wordNoKey];\n                var book = new BookStorage();\n                if (input[weeksKey][w][bookKey][completedOnKey] !== null) {\n                    book[completedOnKey] = new Date(input[weeksKey][w][bookKey][completedOnKey]);\n                }\n                for (var bu = 0; bu < input[weeksKey][w][bookKey][usageKey].length; bu++) {\n                    book[usageKey].push(new UsageStorage()\n                        .deserialise(input[weeksKey][w][bookKey][usageKey][bu]));\n                }\n                book[referenceKey] = input[weeksKey][w][bookKey][referenceKey];\n                week[bookKey] = book;\n                for (var d = 0; d < input[weeksKey][w][daysKey].length; d++) {\n                    var day = new DayStorage();\n                    if (input[weeksKey][w][daysKey][d][completedOnKey] !== null) {\n                        day[completedOnKey] = new Date(input[weeksKey][w][daysKey][d][completedOnKey]);\n                    }\n                    day[bookReadKey] = input[weeksKey][w][daysKey][d][bookReadKey];\n                    for (var t = 0; t < input[weeksKey][w][daysKey][d][tasksKey].length; t++) {\n                        var task = new TaskStorage();\n                        if (input[weeksKey][w][daysKey][d][tasksKey][t][completedOnKey] !== null) {\n                            task[completedOnKey] = new Date(input[weeksKey][w][daysKey][d][tasksKey][t][completedOnKey]);\n                        }\n                        for (var u = 0; u < input[weeksKey][w][daysKey][d][tasksKey][t][usageKey].length; u++) {\n                            task[usageKey].push(new UsageStorage()\n                                .deserialise(input[weeksKey][w][daysKey][d][tasksKey][t][usageKey][u]));\n                        }\n                        day[tasksKey].push(task);\n                    }\n                    week[daysKey].push(day);\n                }\n                this.weeks.push(week);\n            }\n            return this;\n        };\n        /**\n         * get a list of all tracking files previously created\n         */\n        Storage.prototype.getTrackingFileList = function () {\n            var list = [];\n            this.weeks.forEach(function (week) {\n                week.days.forEach(function (day) {\n                    day.tasks.forEach(function (task) {\n                        task.usage.forEach(function (usage) {\n                            if (usage.audio_file !== '') {\n                                list.push(usage.audio_file);\n                            }\n                        });\n                    });\n                });\n            });\n            return list;\n        };\n        /**\n         * Flattens the data structure appropriate for posting to Nettskjema\n         */\n        Storage.prototype.asPostableUsageData = function () {\n            var postArray = [];\n            for (var w = 0; w < this.weeks.length; w++) {\n                // Task usage\n                for (var d = 0; d < this.weeks[w].days.length; d++) {\n                    for (var t = 0; t < this.weeks[w].days[d].tasks.length; t++) {\n                        for (var u = 0; u < this.weeks[w].days[d].tasks[t].usage.length; u++) {\n                            if (!this.weeks[w].days[d].tasks[t].usage[u].synced) {\n                                postArray.push(new UsagePostData(this.username, w, this.weeks[w].word_en, this.weeks[w].word_no, d, t, '-', this.weeks[w].days[d].tasks[t].completed_on, this.weeks[w].days[d].skipped, this.weeks[w].days[d].tasks[t].usage[u].accessed, this.weeks[w].days[d].tasks[t].usage[u].duration, this.weeks[w].days[d].tasks[t].usage[u].audio_file, this.weeks[w].days[d].tasks[t].usage[u]));\n                            }\n                        }\n                    }\n                }\n                // Book usage\n                for (var bu = 0; bu < this.weeks[w].book.usage.length; bu++) {\n                    if (!this.weeks[w].book.usage[bu].synced) {\n                        postArray.push(new UsagePostData(this.username, w, this.weeks[w].word_en, this.weeks[w].word_no, -1, -1, this.weeks[w].book.reference, this.weeks[w].book.completed_on, false, this.weeks[w].book.usage[bu].accessed, this.weeks[w].book.usage[bu].duration, this.weeks[w].book.usage[bu].audio_file, this.weeks[w].book.usage[bu]));\n                    }\n                }\n            }\n            return postArray;\n        };\n        /**\n         * Add a new Usage to a Task with access datestamp and duration\n         *\n         * @param w\n         * @param d\n         * @param t\n         * @param accessed\n         * @param duration\n         * @param audio_file\n         */\n        Storage.prototype.addTaskUsage = function (w, d, t, accessed, duration, audio_file) {\n            var usageStorage = new UsageStorage();\n            usageStorage.accessed = accessed;\n            usageStorage.duration = duration;\n            usageStorage.audio_file = audio_file;\n            this.weeks[w].days[d].tasks[t].usage.push(usageStorage);\n            this.weeks[w].days[d].tasks[t].currentUsage = usageStorage;\n        };\n        /**\n         * Add a new Usage to a Book with access datestamp and duration\n         *\n         * @param w\n         * @param accessed\n         * @param duration\n         * @param audio_file\n         */\n        Storage.prototype.addBookUsage = function (w, accessed, duration, audio_file) {\n            var usageStorage = new UsageStorage();\n            usageStorage.accessed = accessed;\n            usageStorage.duration = duration;\n            usageStorage.audio_file = audio_file;\n            this.weeks[w].book.usage.push(usageStorage);\n            this.weeks[w].book.currentUsage = usageStorage;\n        };\n        /**\n         * Mark the specified TaskStorage as complete\n         *\n         * @param w\n         * @param d\n         * @param t\n         */\n        Storage.prototype.markTaskAsCompleted = function (w, d, t) {\n            if (this.weeks[w].days[d].tasks[t].completed_on == null) {\n                this.weeks[w].days[d].tasks[t].completed_on = new Date();\n            }\n        };\n        /**\n         * Mark the specified Day as complete\n         *\n         * @param w\n         * @param d\n         */\n        Storage.prototype.markDayAsCompleted = function (w, d) {\n            if (this.weeks[w].days[d].completed_on == null) {\n                this.weeks[w].days[d].completed_on = new Date();\n            }\n        };\n        /**\n         * Mark the specified Week as complete\n         *\n         * @param w\n         */\n        Storage.prototype.markWeekAsCompleted = function (w) {\n            if (this.weeks[w].completed_on == null) {\n                this.weeks[w].completed_on = new Date();\n            }\n        };\n        /**\n         * Mark the specified BookStorage as complete\n         *\n         * @param w\n         */\n        Storage.prototype.markBookAsCompleted = function (w) {\n            if (this.weeks[w].book.completed_on == null) {\n                this.weeks[w].book.completed_on = new Date();\n            }\n        };\n        /**\n         * Mark the specified day as 'skipped'\n         *\n         * @param w\n         * @param d\n         */\n        Storage.prototype.markDayAsSkipped = function (w, d) {\n            this.weeks[w].days[d].skipped = true;\n        };\n        /**\n         * Mark all of the current set as 'synced' after a successful POST to Nettskjema\n         */\n        Storage.prototype.markAllAsSynced = function () {\n            for (var w = 0; w < this.weeks.length; w++) {\n                for (var d = 0; d < this.weeks[w].days.length; d++) {\n                    for (var t = 0; t < this.weeks[w].days[d].tasks.length; t++) {\n                        for (var u = 0; u < this.weeks[w].days[d].tasks[t].usage.length; u++) {\n                            this.weeks[w].days[d].tasks[t].usage[u].synced = true;\n                        }\n                    }\n                }\n                for (var bu = 0; bu < this.weeks[w].book.usage.length; bu++) {\n                    this.weeks[w].book.usage[bu].synced = true;\n                }\n            }\n        };\n        return Storage;\n    }());\n    MorfologiApp.Storage = Storage;\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../_references.ts\"/>\n/// <reference path=\"../models/models.ts\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Services;\n    (function (Services) {\n        \"use strict\";\n        var CordovaService = (function () {\n            function CordovaService($window, $timeout) {\n                this.$window = $window;\n                this.$timeout = $timeout;\n                this.recordingAttempts = 0;\n                // If using a desktop browser, we will set up storage in memory for testing purposes\n                this.desktopBrowserTesting = !$window.cordova;\n                this.desktopBrowserStorage = null;\n                this.recordingTimer = 0;\n                if (!this.desktopBrowserTesting) {\n                    this.createTrackingDirectory();\n                }\n            }\n            CordovaService.prototype.getUUID = function () {\n                return '';\n            };\n            CordovaService.prototype.setStorageFilename = function (name) {\n            };\n            /**\n             * Check for the existance of the Storage, if not initialise it and call writeStorage\n             *\n             * @param setupModel\n             * @param username\n             * @param sFunc\n             * @param eFunc\n             */\n            CordovaService.prototype.storageExists = function (setupModel, username, sFunc, eFunc) {\n            };\n            CordovaService.prototype.getStorage = function (sFunc, eFunc) {\n            };\n            CordovaService.prototype.writeStorage = function (storageModel, sFunc, eFunc, backup) {\n            };\n            CordovaService.prototype.writeStorageBackup = function (jsonifiedStorage, sFunc, eFunc) {\n            };\n            CordovaService.prototype.getFreeDiskSpace = function (sFunc, eFunc) {\n            };\n            CordovaService.prototype.clearStorage = function () {\n            };\n            CordovaService.prototype.captureVideo = function (sFunc, eFunc, filename) {\n            };\n            CordovaService.prototype.startTrackingRecording = function (filename) {\n            };\n            CordovaService.prototype.stopTrackingRecording = function (filename) {\n            };\n            // Retrieve a Tracking audio file for use as 'blob' to send to Nettskjema\n            CordovaService.prototype.getTrackingAudioFile = function (filename, sFunc, eFunc) {\n            };\n            CordovaService.prototype.checkFile = function (filename, sFunc, eFunc) {\n            };\n            CordovaService.prototype.deleteOldAudioFiles = function (mediaList, trackingList, lifespan) {\n            };\n            CordovaService.prototype.removeFile = function (path, filename, sFunc, eFunc) {\n            };\n            CordovaService.prototype.createTrackingDirectory = function () {\n            };\n            CordovaService.prototype.startCaptureAudio = function (taskFilename, sFunc, eFunc) {\n            };\n            CordovaService.prototype.stopCaptureAudio = function (taskFilename, currentUsage, newTrackingAudioFilename, sFunc, eFunc) {\n            };\n            CordovaService.prototype.getDeviceID = function () {\n                return '';\n            };\n            CordovaService.prototype.getAppVersion = function (callback) {\n            };\n            CordovaService.$inject = ['$window', '$timeout'];\n            return CordovaService;\n        }());\n        Services.CordovaService = CordovaService;\n    })(Services = MorfologiApp.Services || (MorfologiApp.Services = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../_references.ts\"/>\n/// <reference path=\"../app.constants.ts\"/>\n/// <reference path=\"../models/models.ts\"/>\n/// <reference path=\"./cordovaService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Services;\n    (function (Services) {\n        \"use strict\";\n        var NettskjemaService = (function () {\n            function NettskjemaService($http, cordovaService) {\n                this.$http = $http;\n                this.cordovaService = cordovaService;\n                this.token = '';\n                this.UUID = cordovaService.getDeviceID();\n            }\n            NettskjemaService.prototype.setNettskjemaToken = function (token) {\n                this.token = token;\n            };\n            NettskjemaService.prototype.postTrackingDataItem = function (item, sFunc, eFunc) {\n                var _this = this;\n                var postItem = function (item, audio_file) {\n                    var form_data = item.asFormDataWithAttachment(audio_file, _this.UUID);\n                    _this.$http.post('https://nettskjema.uio.no/answer/deliver.json?formId=74195', form_data, {\n                        transformRequest: angular.identity,\n                        headers: {\n                            'Content-Type': undefined,\n                            'NETTSKJEMA_CSRF_PREVENTION': _this.token\n                        }\n                    }).then(function (success) {\n                        var data = success.data;\n                        if (success.status !== 200 || data.indexOf('success') === -1 || data.indexOf('failure') > -1) {\n                            eFunc(data);\n                        }\n                        else {\n                            item.markAsSynced();\n                            sFunc(data);\n                        }\n                    }, function () {\n                        eFunc('Error sending usage data to server - no status response');\n                    });\n                };\n                if (item.audio_file !== '') {\n                    this.cordovaService.getTrackingAudioFile(item.audio_file, function (audio_file) {\n                        postItem(item, audio_file);\n                    }, function (error) {\n                        console.log(error);\n                    });\n                }\n                else {\n                    postItem(item, null);\n                }\n            };\n            NettskjemaService.$inject = ['$http', 'CordovaService'];\n            return NettskjemaService;\n        }());\n        Services.NettskjemaService = NettskjemaService;\n    })(Services = MorfologiApp.Services || (MorfologiApp.Services = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../_references\"/>\n/// <reference path=\"../app.constants.ts\"/>\n/// <reference path=\"../models/models\"/>\n/// <reference path=\"./nettskjemaService\"/>\n/// <reference path=\"./cordovaService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Services;\n    (function (Services) {\n        \"use strict\";\n        var DataService = (function () {\n            function DataService($http, $window, $timeout, nettsckjemaService, cordovaService, constants) {\n                var _this = this;\n                this.$http = $http;\n                this.$window = $window;\n                this.$timeout = $timeout;\n                this.nettsckjemaService = nettsckjemaService;\n                this.cordovaService = cordovaService;\n                this.constants = constants;\n                this.currentLanguage = \"en\";\n                this.username = '';\n                this.selectedWeekIndex = 0;\n                this.selectedBookIndex = 0;\n                this.selectedDayIndex = 0;\n                this.selectedTaskIndex = 0;\n                this.setupComplete = false;\n                this.deviceReady = false;\n                this.status = {\n                    online: navigator.onLine || false,\n                    posting_data: false,\n                    unsynced_data: false,\n                    disk_space: NaN\n                };\n                // *** AUTO SENDING IS INTENDED TO BE SET TO true IN PRODUCTION\n                this.settings = {\n                    automatic_send_data: true,\n                    storage_mode: 'sample'\n                };\n                this.$window.addEventListener(\"offline\", function () {\n                    _this.status.online = false;\n                }, false);\n                this.$window.addEventListener(\"online\", function () {\n                    if (!_this.status.online) {\n                        _this.status.online = true;\n                        _this.automaticallySendData();\n                    }\n                }, false);\n                this.desktopBrowserTesting = !$window.cordova;\n                this.activateTaskStartCallback = null;\n                this.activateTaskEndCallback = null;\n            }\n            DataService.prototype.getDeviceReady = function () {\n                return this.deviceReady;\n            };\n            DataService.prototype.setDeviceReady = function (setMe) {\n                this.deviceReady = setMe;\n            };\n            DataService.prototype.getFormalStartDate = function () {\n                return this.constants.constants['FORMAL_TEST_DATE'];\n            };\n            DataService.prototype.getShowCheats = function () {\n                return this.constants.constants['SHOW_CHEATS'];\n            };\n            DataService.prototype.getStatus = function () {\n                return this.status;\n            };\n            DataService.prototype.getDesktopBrowserTesting = function () {\n                return this.desktopBrowserTesting;\n            };\n            // Takes the 'achievement' to the next day, but marks day as skipped.\n            // The day to skip is considered as the avatar's current location\n            DataService.prototype.skipToday = function (password) {\n                var passKey = 'SKIP_DAY_PASSWORD';\n                if (this.constants.constants[passKey] === password) {\n                    var uncompletedWeekIndex = this.storageModel.achievement.weekIndex + 1;\n                    var uncompletedDayIndex = this.storageModel.achievement.dayIndex + 1;\n                    this.storageModel.markDayAsSkipped(uncompletedWeekIndex, uncompletedDayIndex);\n                    if (uncompletedDayIndex === 2) {\n                        this.setupModel.markWeekAsCompleted(uncompletedWeekIndex);\n                        this.storageModel.markWeekAsCompleted(uncompletedWeekIndex);\n                        this.storageModel.achievement.completeWeek(uncompletedWeekIndex);\n                    }\n                    else {\n                        this.storageModel.achievement.completeDay(uncompletedWeekIndex, uncompletedDayIndex);\n                    }\n                }\n            };\n            DataService.prototype.getSettings = function () {\n                return this.settings;\n            };\n            DataService.prototype.automaticallySendData = function () {\n                if (this.settings.automatic_send_data) {\n                    this.attemptToPostUsageData();\n                }\n            };\n            // Make an attempt to post any new usage data to Nettskjema\n            DataService.prototype.attemptToPostUsageData = function () {\n                var _this = this;\n                // If we receive a token, and are running on tablet, it is safe to assume we can then post to Nettskjema\n                if (this.desktopBrowserTesting) {\n                    return;\n                }\n                this.$http.get('http://nettskjema.uio.no/ping.html')\n                    .then(function (success) {\n                    console.log('Connected to Nettskjema');\n                    _this.nettsckjemaService.setNettskjemaToken(success.data.toString());\n                    if (_this.status.unsynced_data && !_this.status.posting_data) {\n                        _this.postUsageData();\n                    }\n                }, function (error) {\n                    _this.status.online = false;\n                    console.log('Unable to connect to Nettskjema');\n                });\n            };\n            // Load in the setup file to manage tasks and picturebooks\n            DataService.prototype.requestSetupModel = function (successCallback) {\n                var _this = this;\n                var setupPathKey = 'SETUP_FILE_PATH', setupFilenameKey = 'SETUP_FILE_NAME', setupRevisionKey = 'RELEASE_NUMBER';\n                return this.$http.get(this.constants.constants[setupPathKey] + this.constants.constants[setupFilenameKey] +\n                    this.constants.constants[setupRevisionKey] + '.json')\n                    .then(function (res) {\n                    _this.setupModel = new MorfologiApp.Setup().deserialise(res.data);\n                    if (successCallback !== null) {\n                        successCallback(res.data);\n                    }\n                });\n            };\n            // Load in the current saved status from local tablet storage\n            DataService.prototype.requestSavedState = function (sFunc) {\n                var _this = this;\n                this.cordovaService.storageExists(this.setupModel, this.username, function () {\n                    _this.cordovaService.getStorage(function (model) {\n                        _this.storageModel = model;\n                        if (sFunc !== null) {\n                            sFunc(model);\n                        }\n                    }, function (error) {\n                        // If there was a terminal error reading from the storage file, try to create a new one\n                        if (typeof error !== 'undefined' && error !== null && error === 'create_new_storage') {\n                            _this.cordovaService.writeStorage(new MorfologiApp.Storage().initialise(_this.setupModel, _this.username), function () {\n                                console.log('Created fresh storage after read fail');\n                                _this.cordovaService.getStorage(function (model) {\n                                    _this.storageModel = model;\n                                    if (sFunc !== null) {\n                                        sFunc(model);\n                                    }\n                                }, null);\n                            }, null, false);\n                        }\n                        console.log('Error getting storage');\n                    });\n                }, function () {\n                    console.log('Error checking storage exists');\n                });\n            };\n            DataService.prototype.getStorageMode = function () {\n                return this.settings.storage_mode;\n            };\n            // If before the 'formal date' set in Constants we use 'sample' storage. After this date, we use 'formal' storage\n            DataService.prototype.checkStorageAndSetup = function (successCallback) {\n                console.log('Checking storage...');\n                var storageFilenameKey = 'STORAGE_FILE_NAME', revisionKey = 'RELEASE_NUMBER';\n                var formalNameKey = 'FORMAL_TEST_NAME', sampleNameKey = 'SAMPLE_TEST_NAME', formalDateKey = 'FORMAL_TEST_DATE';\n                var formalDate = this.constants.constants[formalDateKey];\n                var dateNow = new Date();\n                var newMode = this.constants.constants[sampleNameKey];\n                if (dateNow.getTime() > formalDate.getTime()) {\n                    newMode = this.constants.constants[formalNameKey];\n                }\n                console.log('Using storage: ' + newMode);\n                // Called from a 'resume' and storage state has changed, or this is the first launch\n                if ((this.setupComplete && this.settings.storage_mode !== newMode) || !this.setupComplete) {\n                    this.setupComplete = false;\n                    this.settings.storage_mode = newMode;\n                    // If switching from 'sample' to 'formal' we must copy the same identifier\n                    var identifier = '';\n                    if (typeof this.storageModel !== 'undefined' && this.storageModel !== null) {\n                        identifier = this.storageModel.username;\n                    }\n                    var filename = this.constants.constants[storageFilenameKey] + '_' +\n                        this.constants.constants[revisionKey] + '_' + newMode + '.json';\n                    this.cordovaService.setStorageFilename(filename);\n                    this.setup(function (return_to_home) {\n                        // Due to teachers entering student names during training period (this is not allowed)\n                        // we are not copying the identifier across. Instead it must be asked for again.\n                        /*\n                        if (identifier !== '') {\n                            this.storageModel.username = identifier;\n                        }\n                        */\n                        successCallback(return_to_home);\n                    });\n                }\n                else {\n                    successCallback(false);\n                }\n            };\n            // Save the current status to local tablet storage\n            DataService.prototype.writeStorage = function (sFunc, eFunc, backup) {\n                if (this.deviceReady) {\n                    this.cordovaService.writeStorage(this.storageModel, function () {\n                        console.log('Saved to storage file');\n                        if (sFunc !== null) {\n                            sFunc();\n                        }\n                    }, function () {\n                        console.log('Error writing storage');\n                    }, backup);\n                }\n                else {\n                    eFunc('Device not ready');\n                }\n            };\n            DataService.prototype.setup = function (successCallback) {\n                var _this = this;\n                if (!this.setupComplete) {\n                    console.log('Loading setup...');\n                    this.requestSetupModel(function () {\n                        console.log('Loading storage...');\n                        _this.requestSavedState(function () {\n                            console.log('Marking completions...');\n                            _this.markSetupCompletions();\n                            // console.log('Deleting old recordings...');\n                            // this.deleteOldRecordings();\n                            _this.setupComplete = true;\n                            if (successCallback !== null) {\n                                successCallback(true);\n                            }\n                        });\n                    });\n                }\n                else if (successCallback !== null) {\n                    successCallback(false);\n                }\n            };\n            /**\n             * For each setup task, if completed in the storage, mark them in memory\n             */\n            DataService.prototype.markSetupCompletions = function () {\n                var _this = this;\n                this.storageModel.weeks.forEach(function (week, weekIndex) {\n                    if (week.completed_on !== null) {\n                        _this.setupModel.weeks[weekIndex].completed = true;\n                    }\n                    week.days.forEach(function (day, dayIndex) {\n                        if (day.completed_on !== null) {\n                            _this.setupModel.weeks[weekIndex].days[dayIndex].completed = true;\n                        }\n                        day.tasks.forEach(function (task, taskIndex) {\n                            if (task.completed_on !== null) {\n                                _this.setupModel.weeks[weekIndex].days[dayIndex].tasks[taskIndex].completed = true;\n                            }\n                        });\n                    });\n                });\n            };\n            DataService.prototype.setAvatar = function (avatarIndex) {\n                this.storageModel.achievement.avatar = avatarIndex;\n            };\n            DataService.prototype.getUsername = function () {\n                return this.storageModel.username;\n            };\n            DataService.prototype.setUsername = function (username) {\n                this.storageModel.username = username;\n            };\n            DataService.prototype.getResizableDivSize = function () {\n                return this.resizableDivSize;\n            };\n            DataService.prototype.setResizableDivSize = function (newSize) {\n                this.resizableDivSize = newSize;\n            };\n            DataService.prototype.getLanguage = function () {\n                return this.currentLanguage;\n            };\n            ;\n            DataService.prototype.setLanguage = function (type) {\n                this.currentLanguage = type;\n            };\n            ;\n            // Books\n            DataService.prototype.getBookList = function (successCallback, errorCallback) {\n                var booklistKey = 'books';\n                if (typeof this.setupModel === 'undefined') {\n                    this.requestSetupModel(function (data) {\n                        successCallback(data[booklistKey]);\n                    });\n                }\n                else {\n                    successCallback(this.setupModel[booklistKey]);\n                }\n            };\n            DataService.prototype.getBook = function () {\n                return this.setupModel.books[this.setupModel.weeks[this.selectedWeekIndex].book_index];\n            };\n            // Tasks\n            DataService.prototype.getWeeks = function () {\n                var weeksKey = 'weeks';\n                return this.setupModel[weeksKey];\n            };\n            DataService.prototype.getWeek = function () {\n                return this.selectedWeekIndex;\n            };\n            DataService.prototype.getDay = function () {\n                return this.selectedDayIndex;\n            };\n            DataService.prototype.getTaskIndex = function () {\n                return this.selectedTaskIndex;\n            };\n            DataService.prototype.getTasks = function () {\n                return this.setupModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex]\n                    .tasks;\n            };\n            DataService.prototype.getTask = function () {\n                return this.setupModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex]\n                    .tasks[this.selectedTaskIndex];\n            };\n            DataService.prototype.getWord = function () {\n                var wordKey = 'word_en';\n                return this.setupModel.weeks[this.selectedWeekIndex][wordKey];\n            };\n            DataService.prototype.getWordForConsolidationDay = function () {\n                var wordKey = 'word_en', dayKey = 'days', tasksKey = 'tasks', structureKey = 'structure', weeksKey = 'weeks', weekKey = 'week';\n                var weekIndex = this.setupModel[weeksKey][this.selectedWeekIndex][dayKey][this.selectedDayIndex][tasksKey][this.selectedTaskIndex][structureKey][weekKey];\n                return this.setupModel.weeks[weekIndex][wordKey];\n            };\n            DataService.prototype.getAchievement = function () {\n                return this.storageModel.achievement;\n            };\n            DataService.prototype.setWeek = function (weekIndex) {\n                this.selectedWeekIndex = weekIndex;\n                this.selectedBookIndex = this.setupModel.weeks[weekIndex].book_index;\n            };\n            DataService.prototype.setDay = function (dateIndex) {\n                this.selectedDayIndex = dateIndex;\n            };\n            DataService.prototype.startBook = function () {\n                this.storageModel.addBookUsage(this.selectedWeekIndex, new Date(), 0, '');\n                this.status.unsynced_data = true;\n                if (this.setupModel.books[this.selectedBookIndex].record_audio) {\n                    this.startTrackingRecording('book');\n                }\n            };\n            DataService.prototype.setTask = function (taskIndex) {\n                this.activateTaskStartCallback = null;\n                this.activateTaskEndCallback = null;\n                this.selectedTaskIndex = taskIndex;\n                this.storageModel.addTaskUsage(this.selectedWeekIndex, this.selectedDayIndex, this.selectedTaskIndex, new Date(), 0, '');\n                this.status.unsynced_data = true;\n                if (this.setupModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].record_audio) {\n                    this.startTrackingRecording('task');\n                }\n            };\n            DataService.prototype.getBookReadToday = function () {\n                return this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].book_read;\n            };\n            DataService.prototype.setBookReadToday = function () {\n                this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].book_read = true;\n            };\n            // Do not set record_audio for Day 3 Task 5 or 6, as those tasks record the child's voice instead\n            DataService.prototype.completeCurrentUsageRecord = function (type) {\n                var currentUsage;\n                // Complete recording if running\n                if (type === 'task') {\n                    currentUsage = this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].currentUsage;\n                    if (currentUsage !== null) {\n                        var startedOn = moment(currentUsage.accessed);\n                        var finishedOn = moment();\n                        currentUsage.duration = moment.duration(finishedOn.diff(startedOn)).asSeconds();\n                        if (this.setupModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].record_audio) {\n                            this.cordovaService.stopTrackingRecording(currentUsage.audio_file);\n                        }\n                        this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].currentUsage = null;\n                    }\n                }\n                else if (type === 'book') {\n                    currentUsage = this.storageModel.weeks[this.selectedWeekIndex].book.currentUsage;\n                    if (currentUsage !== null) {\n                        var startedOn = moment(currentUsage.accessed);\n                        var finishedOn = moment();\n                        currentUsage.duration = moment.duration(finishedOn.diff(startedOn)).asSeconds();\n                        if (this.setupModel.books[this.selectedBookIndex].record_audio) {\n                            this.cordovaService.stopTrackingRecording(currentUsage.audio_file);\n                        }\n                        this.storageModel.weeks[this.selectedWeekIndex].book.currentUsage = null;\n                    }\n                }\n            };\n            DataService.prototype.completeSelectedBook = function () {\n                var book = this.selectedBookIndex, week = this.selectedWeekIndex;\n                this.setBookReadToday();\n                // save state to Setup and Storage\n                if (typeof this.setupModel.books[book] !== 'undefined' && !this.setupModel.books[book].completed) {\n                    this.setupModel.markBookAsCompleted(week);\n                    this.storageModel.markBookAsCompleted(week);\n                }\n                // Complete the outstanding usage record\n                this.completeCurrentUsageRecord('book');\n            };\n            DataService.prototype.completeSelectedTask = function () {\n                var week = this.selectedWeekIndex, day = this.selectedDayIndex, task = this.selectedTaskIndex;\n                // save state to Setup and Storage\n                this.setupModel.markTaskAsCompleted(week, day, task);\n                this.storageModel.markTaskAsCompleted(week, day, task);\n                this.storageModel.achievement.completeTask(week, day, task);\n            };\n            DataService.prototype.completeSelectedDay = function () {\n                var week = this.selectedWeekIndex, day = this.selectedDayIndex;\n                if (this.setupModel.weeks[this.selectedWeekIndex].book_index !== -1) {\n                    this.setupModel.markBookAsCompleted(week);\n                    this.storageModel.markBookAsCompleted(week);\n                }\n                this.setupModel.markDayAsCompleted(week, day);\n                this.storageModel.markDayAsCompleted(week, day);\n                this.storageModel.achievement.completeDay(week, day);\n                if (day === 2) {\n                    this.completeSelectedWeek();\n                }\n            };\n            DataService.prototype.completeSelectedWeek = function () {\n                this.setupModel.markWeekAsCompleted(this.selectedWeekIndex);\n                this.storageModel.markWeekAsCompleted(this.selectedWeekIndex);\n                this.storageModel.achievement.completeWeek(this.selectedWeekIndex);\n            };\n            /*\n            getUUID(): string {\n                return this.cordovaService.getUUID();\n            }\n            */\n            DataService.prototype.getCommon = function () {\n                var commonKey = 'common';\n                return this.setupModel[commonKey];\n            };\n            DataService.prototype.removeStorage = function () {\n                this.cordovaService.clearStorage();\n            };\n            /*\n            getVideoMedia(source): Media {\n                return this.cordovaService.getVideoFile(source);\n            }\n            */\n            // Audio recording for tracking purposes\n            // Do not set record_audio for Day 3 Task 5 or 6, as those tasks record the child's voice instead\n            DataService.prototype.startTrackingRecording = function (type) {\n                if (this.desktopBrowserTesting) {\n                    return;\n                }\n                var currentUsage;\n                // Check disk space first\n                if (this.status.disk_space < 100) {\n                    return;\n                }\n                else if (type === 'task') {\n                    currentUsage = this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].currentUsage;\n                    var d = currentUsage.accessed;\n                    currentUsage.audio_file = 'w' + (this.selectedWeekIndex + 1) + '_d' + (this.selectedDayIndex + 1) +\n                        '_t' + (this.selectedTaskIndex + 1) + '-' + d.getFullYear() + '_' + (d.getMonth() + 1) + '_' + d.getDate() +\n                        '-' + d.getHours() + '_' + d.getMinutes() + '_' + d.getSeconds() + '.m4a';\n                }\n                else if (type === 'book') {\n                    currentUsage = this.storageModel.weeks[this.selectedWeekIndex].book.currentUsage;\n                    var d = currentUsage.accessed;\n                    currentUsage.audio_file = 'w' + (this.selectedWeekIndex + 1) + '_b' + (this.selectedBookIndex + 1) +\n                        '-' + d.getFullYear() + '_' + (d.getMonth() + 1) + '_' + d.getDate() +\n                        '-' + d.getHours() + '_' + d.getMinutes() + '_' + d.getSeconds() + '.m4a';\n                }\n                this.cordovaService.startTrackingRecording(currentUsage.audio_file);\n            };\n            DataService.prototype.getTaskUsage = function () {\n                return this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex]\n                    .tasks[this.selectedTaskIndex].usage;\n            };\n            DataService.prototype.postUsageData = function () {\n                var _this = this;\n                this.status.posting_data = true;\n                var postData = this.storageModel.asPostableUsageData();\n                var postRemainingData = function () {\n                    if (postData.length > 0) {\n                        _this.nettsckjemaService.postTrackingDataItem(postData.pop(), function (data) {\n                            console.log('Successful Nettskjema submission: ' + data);\n                            postRemainingData();\n                        }, function (data) {\n                            console.log('Error during Nettskjema submission: ' + data);\n                        });\n                    }\n                    else {\n                        _this.status.posting_data = false;\n                        _this.status.unsynced_data = false;\n                    }\n                };\n                postRemainingData();\n            };\n            DataService.prototype.setupAudioIntroduction = function (url) {\n                var _this = this;\n                if (typeof this.introductionAudio !== 'undefined') {\n                    this.introductionAudio.pause();\n                }\n                this.$timeout(function () {\n                    _this.introductionAudio = new Audio(url);\n                    _this.introductionAudio.load();\n                    _this.introductionAudio.addEventListener('ended', function () {\n                        _this.disableInteractionCallback(false, true);\n                        if (_this.activateTaskEndCallback !== null) {\n                            _this.activateTaskEndCallback();\n                        }\n                    });\n                }, 0);\n            };\n            DataService.prototype.playAudioIntroduction = function (delay) {\n                var _this = this;\n                if (this.desktopBrowserTesting) {\n                    delay = 10;\n                }\n                if (delay > 0) {\n                    this.disableInteractionCallback(true, true);\n                }\n                this.$timeout(function () {\n                    if (_this.activateTaskStartCallback !== null) {\n                        _this.activateTaskStartCallback();\n                    }\n                    try {\n                        _this.introductionAudio.play();\n                    }\n                    catch (error) {\n                        console.log('No introduction audio source found');\n                        _this.disableInteractionCallback(false, true);\n                        if (_this.activateTaskEndCallback !== null) {\n                            _this.activateTaskEndCallback();\n                        }\n                    }\n                }, delay);\n            };\n            DataService.prototype.deleteOldRecordings = function () {\n                var mediaFiles = [];\n                var weekTotal = this.setupModel.weeks.length;\n                var w = 0;\n                while (w < weekTotal) {\n                    // Each week has thre 'user made' recordings - two audio and one video\n                    mediaFiles.push('week' + (w + 1) + '-task6-' + this.constants.constants['FORMAL_TEST_NAME'] + '-audio.m4a');\n                    mediaFiles.push('week' + (w + 1) + '-task5-' + this.constants.constants['FORMAL_TEST_NAME'] + '-audio.m4a');\n                    mediaFiles.push('week' + w + '-' + this.constants.constants['FORMAL_TEST_NAME'] + '-video.MOV');\n                }\n                this.cordovaService.deleteOldAudioFiles(mediaFiles, this.storageModel.getTrackingFileList(), this.constants.constants['RECORDING_LIFESPAN']);\n            };\n            DataService.prototype.setDisableInteractionCallback = function (callback) {\n                this.disableInteractionCallback = callback;\n            };\n            DataService.prototype.setInteractionEndActivateTaskCallback = function (callback) {\n                this.activateTaskEndCallback = callback;\n            };\n            DataService.prototype.clearInteractionEndActivateTaskCallback = function () {\n                this.activateTaskEndCallback = null;\n            };\n            DataService.prototype.setInteractionStartActivateTaskCallback = function (callback) {\n                this.activateTaskStartCallback = callback;\n            };\n            DataService.prototype.externalCallDisableInteractionCallback = function (setMe, showSpeaker) {\n                if (this.disableInteractionCallback !== null) {\n                    this.disableInteractionCallback(setMe, showSpeaker);\n                }\n            };\n            DataService.prototype.shuffleArray = function (array) {\n                var newArray = angular.copy(array);\n                var currentIndex = newArray.length, temporaryValue, randomIndex;\n                // While there remain elements to shuffle...\n                while (0 !== currentIndex) {\n                    // Pick a remaining element...\n                    randomIndex = Math.floor(Math.random() * currentIndex);\n                    currentIndex -= 1;\n                    // And swap it with the current element.\n                    temporaryValue = newArray[currentIndex];\n                    newArray[currentIndex] = newArray[randomIndex];\n                    newArray[randomIndex] = temporaryValue;\n                }\n                return newArray;\n            };\n            DataService.prototype.captureVideo = function (sFunc, eFunc) {\n                var filename = 'week' + this.selectedWeekIndex + '-' + this.settings.storage_mode + '-video.MOV';\n                this.cordovaService.captureVideo(sFunc, eFunc, filename);\n            };\n            // Day 3 task 5 & 6 audio recording of the child's voice\n            DataService.prototype.startCaptureAudio = function () {\n                var taskFilename = 'week' + (this.selectedWeekIndex + 1) + '-task' + (this.selectedTaskIndex + 1) + '-' + this.settings.storage_mode + '-audio.m4a';\n                this.cordovaService.startCaptureAudio(taskFilename, function () {\n                    console.log('Begin recording voice..');\n                }, function (error) {\n                    console.log('Error recording voice..' + error);\n                });\n            };\n            // For Day 3 Task 5 & 6 a new recording always overwrites previous for this week, but one audio for each UsageStorage is copied.\n            DataService.prototype.stopCaptureAudio = function (sFunc, eFunc) {\n                var currentUsage = this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].currentUsage;\n                var d = currentUsage.accessed;\n                var newTrackingAudioFilename = 'w' + (this.selectedWeekIndex + 1) + '_d' + (this.selectedDayIndex + 1) +\n                    '_t' + (this.selectedTaskIndex + 1) + '-' + d.getFullYear() + '_' + (d.getMonth() + 1) + '_' + d.getDate() +\n                    '-' + d.getHours() + '_' + d.getMinutes() + '_' + d.getSeconds() + '.m4a';\n                var taskFilename = 'week' + (this.selectedWeekIndex + 1) + '-task' + (this.selectedTaskIndex + 1) + '-' + this.settings.storage_mode + '-audio.m4a';\n                this.cordovaService.stopCaptureAudio(taskFilename, currentUsage, newTrackingAudioFilename, function (success) {\n                    console.log('Finished recording voice..');\n                    sFunc(success);\n                }, function (error) {\n                    eFunc(error);\n                });\n            };\n            DataService.prototype.checkFile = function (filename, sFunc, eFunc) {\n                if (this.desktopBrowserTesting) {\n                    eFunc('');\n                }\n                else {\n                    this.cordovaService.checkFile(filename, sFunc, eFunc);\n                }\n            };\n            DataService.prototype.getAppVersion = function (callback) {\n                this.cordovaService.getAppVersion(callback);\n            };\n            DataService.$inject = ['$http', '$window', '$timeout', 'CordovaService', 'NettskjemaService', 'MorfologiConstants'];\n            return DataService;\n        }());\n        Services.DataService = DataService;\n    })(Services = MorfologiApp.Services || (MorfologiApp.Services = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../_references.ts\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Directives;\n    (function (Directives) {\n        \"use strict\";\n        var ResizeController = (function () {\n            function ResizeController(dataService, $window) {\n                this.dataService = dataService;\n                this.$window = $window;\n            }\n            ;\n            ResizeController.$inject = ['DataService', '$window'];\n            return ResizeController;\n        }());\n        function linker(scope, element, ctrl) {\n            var w = angular.element(ctrl.$window);\n            scope.getWindowDimensions = function () {\n                return {\n                    'VIEW_HEIGHT': element.prop('offsetHeight'),\n                    'VIEW_WIDTH': element.prop('offsetWidth')\n                };\n            };\n            scope.$watch(scope.getWindowDimensions, function (newValue) {\n                ctrl.dataService.setResizableDivSize(newValue);\n            }, true);\n            w.bind('resize', function () {\n                scope.$apply();\n            });\n            ctrl.dataService.setResizableDivSize(scope.getWindowDimensions());\n        }\n        function ispResize() {\n            return {\n                restrict: 'A',\n                controller: ResizeController,\n                link: linker\n            };\n        }\n        Directives.ispResize = ispResize;\n    })(Directives = MorfologiApp.Directives || (MorfologiApp.Directives = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var Task1Controller = (function () {\n            function Task1Controller($scope, $timeout, dataService) {\n                var _this = this;\n                this.$scope = $scope;\n                this.$timeout = $timeout;\n                this.dataService = dataService;\n                this.word = $scope['wpC'].word;\n                this.task = dataService.getTask();\n                this.showingPanel = 'choice';\n                this.showForwardArrow = false;\n                this.playingSequence = false;\n                this.round = 0;\n                this.repeats = 1;\n                this.opacity = 0;\n                this.itemA = { file: '', audio: '', correct: true, highlight: false };\n                this.itemB = { file: '', audio: '', correct: false, highlight: false };\n                this.randomiseItems();\n                $timeout(function () {\n                    _this.opacity = 1;\n                }, 1000);\n                // This should be run at the end of the constructor\n                var handle = this;\n                dataService.setInteractionEndActivateTaskCallback(function () {\n                    _this.activateTask(handle);\n                });\n                dataService.setupAudioIntroduction('content/' + this.word + '/articulation/day2/instruction.mp3');\n                dataService.playAudioIntroduction(3000);\n            }\n            Task1Controller.prototype.randomiseItems = function () {\n                var firstItem = Math.random() > 0.5 ? 'itemA' : 'itemB';\n                var secondItem = firstItem === 'itemA' ? 'itemB' : 'itemA';\n                var firstImage = Math.random() > 0.5 ? 'correct.jpg' : 'incorrect.jpg';\n                var secondImage = firstImage === 'correct.jpg' ? 'incorrect.jpg' : 'correct.jpg';\n                var firstAudio = firstImage === 'correct.jpg' ? 'correct.mp3' : 'incorrect.mp3';\n                var secondAudio = firstImage === 'correct.jpg' ? 'incorrect.mp3' : 'correct.mp3';\n                var firstCorrect = firstAudio === 'correct.mp3';\n                var secondCorrect = !firstCorrect;\n                this[firstItem] = {\n                    file: 'content/' + this.word + '/articulation/day2/' + firstImage,\n                    audio: 'content/' + this.word + '/articulation/day2/' + firstAudio,\n                    correct: firstCorrect,\n                    highlight: false\n                };\n                this[secondItem] = {\n                    file: 'content/' + this.word + '/articulation/day2/' + secondImage,\n                    audio: 'content/' + this.word + '/articulation/day2/' + secondAudio,\n                    correct: secondCorrect,\n                    highlight: false\n                };\n            };\n            Task1Controller.prototype.activateTask = function (handle) {\n                var _this = this;\n                this.dataService.externalCallDisableInteractionCallback(true, false);\n                this.playingSequence = true;\n                this.opacity = 1;\n                handle.$timeout(function () {\n                    var audio = new Audio(handle.itemA['audio']);\n                    audio.play();\n                    handle.itemA['highlight'] = true;\n                    handle.$timeout(function () {\n                        handle.itemA['highlight'] = false;\n                    }, 1000);\n                    handle.$timeout(function () {\n                        var audio = new Audio(handle.itemB['audio']);\n                        audio.play();\n                        handle.itemB['highlight'] = true;\n                        handle.$timeout(function () {\n                            handle.itemB['highlight'] = false;\n                            _this.playingSequence = false;\n                            _this.dataService.externalCallDisableInteractionCallback(false, false);\n                        }, 1000);\n                    }, 2000);\n                }, 1500);\n            };\n            Task1Controller.prototype.clickEarA = function () {\n                var audio = new Audio(this.itemA['audio']);\n                audio.play();\n            };\n            Task1Controller.prototype.clickEarB = function () {\n                var audio = new Audio(this.itemB['audio']);\n                audio.play();\n            };\n            Task1Controller.prototype.clickItemA = function () {\n                var _this = this;\n                this.itemA.highlight = true;\n                this.itemB.highlight = false;\n                if (this.itemA['correct']) {\n                    if (this.round === this.repeats) {\n                        this.$scope['wpC'].taskFinished();\n                    }\n                    else {\n                        this.$scope['wpC'].setAndShowOnetimeInternalForwardArrowCallback(function () {\n                            _this.clickForwardArrow();\n                        });\n                    }\n                }\n                else {\n                    var rand = Math.floor(Math.random() * 4);\n                    var audio = new Audio('content/common/audio/tryagain' + rand + '.mp3');\n                    audio.play();\n                    this.$timeout(function () {\n                        _this.itemA.highlight = false;\n                    }, 2000);\n                }\n            };\n            Task1Controller.prototype.clickItemB = function () {\n                var _this = this;\n                this.itemB.highlight = true;\n                this.itemA.highlight = false;\n                if (this.itemB['correct']) {\n                    if (this.round === this.repeats) {\n                        this.$scope['wpC'].taskFinished();\n                    }\n                    else {\n                        this.$scope['wpC'].setAndShowOnetimeInternalForwardArrowCallback(function () {\n                            _this.clickForwardArrow();\n                        });\n                    }\n                }\n                else {\n                    var rand = Math.floor(Math.random() * 4);\n                    var audio = new Audio('content/common/audio/tryagain' + rand + '.mp3');\n                    audio.play();\n                    this.$timeout(function () {\n                        _this.itemB.highlight = false;\n                    }, 2000);\n                }\n            };\n            Task1Controller.prototype.clickForwardArrow = function () {\n                var _this = this;\n                this.opacity = 0;\n                this.round++;\n                this.itemA.highlight = false;\n                this.itemB.highlight = false;\n                this.showForwardArrow = false;\n                this.$timeout(function () {\n                    _this.randomiseItems();\n                    _this.activateTask(_this);\n                }, 1000);\n            };\n            Task1Controller.$inject = ['$scope', '$timeout', 'DataService'];\n            return Task1Controller;\n        }());\n        Controllers.Task1Controller = Task1Controller;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"_references\"/>\n/// <reference path=\"./app.config.ts\"/>\n/// <reference path=\"./app.constants.ts\"/>\n/// <reference path=\"./app.run.ts\"/>\n/// <reference path=\"components/resizewindow/resize\"/>\n/// <reference path=\"tasks/task1/controller\"/>\n/**\n * Morfologi core application module.\n * @preferred\n */\nvar MorfologiApp;\n(function (MorfologiApp) {\n    'use strict';\n    /**\n     * Array of dependencies to be injected in the application \"dependencies\".\n     */\n    var dependencies = [\n        'ui.router',\n        'pascalprecht.translate',\n        'ngDraggable',\n        'angular-flippy'\n    ];\n    angular.module('MorfologiApp', dependencies)\n        .constant('MorfologiConstants', MorfologiApp.MorfologiConstants)\n        .service(MorfologiApp.Services)\n        .directive(MorfologiApp.Directives)\n        .controller(MorfologiApp.Controllers)\n        .config(MorfologiApp.configApp)\n        .run(MorfologiApp.runApp);\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../_references.ts\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    \"use strict\";\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../_references.ts\"/>\n/// <reference path=\"../models/models\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Services;\n    (function (Services) {\n        \"use strict\";\n        var ServerService = (function () {\n            function ServerService($window, $cordovaDevice, $cordovaFile, $cordovaCapture, $cordovaMedia, $cordovaAppVersion, $timeout) {\n                this.$window = $window;\n                this.$cordovaDevice = $cordovaDevice;\n                this.$cordovaFile = $cordovaFile;\n                this.$cordovaCapture = $cordovaCapture;\n                this.$cordovaMedia = $cordovaMedia;\n                this.$cordovaAppVersion = $cordovaAppVersion;\n                this.$timeout = $timeout;\n                this.recordingAttempts = 0;\n                // If using a desktop browser, we will set up storage in memory for testing purposes\n                this.desktopBrowserTesting = !$window.cordova;\n                this.desktopBrowserStorage = null;\n                this.recordingTimer = 0;\n                if (!this.desktopBrowserTesting) {\n                    this.createTrackingDirectory();\n                }\n            }\n            ServerService.prototype.getUUID = function () {\n                if (this.$window.cordova !== undefined) {\n                    return this.$cordovaDevice.getUUID();\n                }\n                else {\n                    return 'No mobile device';\n                }\n            };\n            ServerService.prototype.setStorageFilename = function (name) {\n                this.storageFileName = name;\n            };\n            /**\n             * Check for the existance of the Storage, if not initialise it and call writeStorage\n             *\n             * @param setupModel\n             * @param username\n             * @param sFunc\n             * @param eFunc\n             */\n            ServerService.prototype.storageExists = function (setupModel, username, sFunc, eFunc) {\n                var _this = this;\n                if (this.desktopBrowserTesting) {\n                    if (this.desktopBrowserStorage === null || (this.desktopBrowserStorage.hasOwnProperty('pseudoFilename')\n                        && this.desktopBrowserStorage['pseudoFilename'] !== this.storageFileName)) {\n                        var newStorage = new MorfologiApp.Storage().initialise(setupModel, username);\n                        this.writeStorage(newStorage, sFunc, eFunc, false);\n                    }\n                    else {\n                        if (sFunc !== null) {\n                            sFunc();\n                        }\n                    }\n                }\n                else {\n                    this.$cordovaFile.checkFile(cordova.file.documentsDirectory, this.storageFileName)\n                        .then(function () {\n                        if (sFunc !== null) {\n                            sFunc();\n                        }\n                    }, function () {\n                        _this.writeStorage(new MorfologiApp.Storage().initialise(setupModel, username), sFunc, eFunc, false);\n                    });\n                }\n            };\n            ServerService.prototype.getStorage = function (sFunc, eFunc) {\n                var _this = this;\n                if (this.desktopBrowserTesting) {\n                    sFunc(this.desktopBrowserStorage);\n                }\n                else {\n                    this.$cordovaFile.readAsText(cordova.file.documentsDirectory, this.storageFileName)\n                        .then(function (success) {\n                        // Sometimes the cordova writefile routine appends rather than overwites, need to check for this problem..\n                        var cleanedData, endIndex, deJson, newStorage;\n                        endIndex = success.lastIndexOf('\\{\"weeks\"\\:\\[');\n                        if (endIndex !== 0) {\n                            console.log('Data was corrupted - index was: ' + endIndex);\n                            cleanedData = success.substr(0, endIndex);\n                        }\n                        else {\n                            console.log('Data is clean to read');\n                            cleanedData = success;\n                        }\n                        // Attempt to deserialise the data.  JSON.parse() used by angular.fromJson throwds a syntax error on failure\n                        try {\n                            deJson = angular.fromJson(cleanedData);\n                        }\n                        catch (e) {\n                            // If read fails, attempt to read the backup file instead\n                            console.log('Regular storage could not be read, trying backup file..');\n                            _this.$cordovaFile.readAsText(cordova.file.documentsDirectory, 'storageBackup.json')\n                                .then(function (success) {\n                                // Sometimes the cordova writefile routine appends rather than overwites, need to check for this problem..\n                                var cleanedData, endIndex, deJson, newStorage;\n                                endIndex = success.lastIndexOf('\\{\"weeks\"\\:\\[');\n                                if (endIndex !== 0) {\n                                    console.log('Data was corrupted - index was: ' + endIndex);\n                                    cleanedData = success.substr(0, endIndex);\n                                }\n                                else {\n                                    console.log('Data is clean to read');\n                                    cleanedData = success;\n                                }\n                                try {\n                                    deJson = angular.fromJson(cleanedData);\n                                }\n                                catch (e) {\n                                    // If we arrive here, the read of data file failed completely. Create a new one.\n                                    console.log('Backup storage could not be read. Renaming old storage..');\n                                    _this.$cordovaFile.moveFile(cordova.file.documentsDirectory, _this.storageFileName, cordova.file.documentsDirectory, _this.storageFileName.slice(0, -5) + '-stashed-' + Date.now() + '.json')\n                                        .then(function () {\n                                        // The return to DataService with this error will cause a new data file to be created\n                                        eFunc('create_new_storage');\n                                    }, function () {\n                                        console.log('Rename old storage file error!');\n                                    });\n                                }\n                                finally {\n                                    if (typeof deJson !== 'undefined' && deJson != null) {\n                                        newStorage = new MorfologiApp.Storage().deserialise(deJson);\n                                        console.log('Storage recovered from backup');\n                                        if (sFunc !== null) {\n                                            sFunc(newStorage);\n                                        }\n                                    }\n                                }\n                                if (sFunc !== null) {\n                                    sFunc(newStorage);\n                                }\n                            }, function () {\n                                console.log('Error reading backup storage file using readAsText');\n                            });\n                        }\n                        finally {\n                            if (typeof deJson !== 'undefined' && deJson != null) {\n                                newStorage = new MorfologiApp.Storage().deserialise(deJson);\n                                console.log('Storage loaded');\n                                if (sFunc !== null) {\n                                    sFunc(newStorage);\n                                }\n                            }\n                        }\n                    }, function () {\n                        console.log('Error reading main storage file using readAsText');\n                    });\n                }\n            };\n            ServerService.prototype.writeStorage = function (storageModel, sFunc, eFunc, backup) {\n                var _this = this;\n                if (this.desktopBrowserTesting) {\n                    this.desktopBrowserStorage = storageModel;\n                    this.desktopBrowserStorage['pseudoFilename'] = this.storageFileName;\n                    if (sFunc !== null) {\n                        sFunc();\n                    }\n                }\n                else {\n                    var jsonified = angular.toJson(storageModel);\n                    this.$cordovaFile.createFile(cordova.file.documentsDirectory, this.storageFileName, true)\n                        .then(function () {\n                        // TESTING!\n                        //var jsonifiedBad = jsonified + 'blah blah' + '\\{\"weeks\"\\:\\[';\n                        _this.$cordovaFile.writeFile(cordova.file.documentsDirectory, _this.storageFileName, jsonified, true)\n                            .then(function () {\n                            if (backup) {\n                                _this.writeStorageBackup(jsonified, sFunc, eFunc);\n                            }\n                            else if (sFunc !== null) {\n                                sFunc();\n                            }\n                        }, function () {\n                            console.log('Unable to write storage file');\n                            eFunc();\n                        });\n                    }, function () {\n                        console.log('Unable to create storage file');\n                    });\n                }\n            };\n            ServerService.prototype.writeStorageBackup = function (jsonifiedStorage, sFunc, eFunc) {\n                var _this = this;\n                if (this.desktopBrowserTesting) {\n                    if (sFunc !== null) {\n                        sFunc();\n                    }\n                }\n                else {\n                    this.$cordovaFile.createFile(cordova.file.documentsDirectory, 'storageBackup.json', true)\n                        .then(function () {\n                        _this.$cordovaFile.writeFile(cordova.file.documentsDirectory, 'storageBackup.json', jsonifiedStorage, true)\n                            .then(function () {\n                            console.log('Wrote storage backup file');\n                            if (sFunc !== null) {\n                                sFunc();\n                            }\n                        }, function () {\n                            console.log('Unable to write backup storage file');\n                            eFunc();\n                        });\n                    }, function () {\n                        console.log('Unable to create backup storage file');\n                    });\n                }\n            };\n            ServerService.prototype.getFreeDiskSpace = function (sFunc, eFunc) {\n                if (this.desktopBrowserTesting) {\n                    sFunc('no tablet device!');\n                }\n                else {\n                    this.$cordovaFile.getFreeDiskSpace()\n                        .then(function (success) {\n                        sFunc(success);\n                    }, function (error) {\n                        eFunc(error);\n                    });\n                }\n            };\n            ServerService.prototype.clearStorage = function () {\n                this.$cordovaFile.removeFile(cordova.file.documentsDirectory, this.storageFileName)\n                    .then(function () {\n                    console.log('Storage file deleted');\n                }, function () {\n                    console.log('Unable to write storage file');\n                });\n            };\n            ServerService.prototype.captureVideo = function (sFunc, eFunc, filename) {\n                var _this = this;\n                var options = { limit: 1, duration: 60 };\n                console.log('Capturing video...');\n                this.$cordovaCapture.captureVideo(options).then(function (videoData) {\n                    var tmpFileDir = 'file:///' + videoData[0].fullPath.substring(0, videoData[0].fullPath.lastIndexOf('/'));\n                    _this.$cordovaFile.moveFile(tmpFileDir, videoData[0].name, cordova.file.documentsDirectory, filename)\n                        .then(function (success) {\n                        console.log('Finished capturing video. Moved video.');\n                        sFunc(success['nativeURL']);\n                    });\n                }, function (error) {\n                    console.log('Video capture error: ' + error);\n                    eFunc(error);\n                });\n            };\n            ServerService.prototype.startTrackingRecording = function (filename) {\n                var _this = this;\n                if (this.desktopBrowserTesting) {\n                    return;\n                }\n                if (this.recordingTimer === 0) {\n                    this.recordingAttempts = 0;\n                    // https://github.com/remoorejr/cordova-plugin-media-with-compression\n                    var options = {\n                        SampleRate: 16000,\n                        NumberOfChannels: 1,\n                        duration: 60\n                    };\n                    this.audioFile = new Media(\"documents://tracking/\" + filename, function () {\n                        console.log('Recording tracking audio...');\n                    }, function (error) {\n                        console.log('Record tracking audio error: ' + error.code);\n                    });\n                    this.recordingTimer = Date.now();\n                    this.audioFile.startRecordWithCompression(options);\n                }\n                else if (this.recordingAttempts < 3) {\n                    this.recordingAttempts++;\n                    this.$timeout(function () {\n                        _this.startTrackingRecording(filename);\n                    }, 1000);\n                }\n                else {\n                    this.recordingAttempts = 0;\n                    console.log('Attempted record failed 3 times. Stopping.');\n                }\n            };\n            ServerService.prototype.stopTrackingRecording = function (filename) {\n                if (this.desktopBrowserTesting) {\n                    return;\n                }\n                if (typeof this.audioFile !== 'undefined' && this.audioFile !== null) {\n                    this.audioFile.stopRecord();\n                    this.audioFile.release();\n                    console.log('Finished recording tracking audio.');\n                    if (Date.now() - this.recordingTimer < 3000) {\n                        this.removeFile(cordova.file.documentsDirectory + 'tracking/', filename, function () {\n                            console.log('Too short tracking audio file removed');\n                        }, function () {\n                            console.log('Error removing short tracking audio file');\n                        });\n                    }\n                    this.recordingTimer = 0;\n                }\n                //this.audioFile = null;\n            };\n            // Retrieve a Tracking audio file for use as 'blob' to send to Nettskjema\n            ServerService.prototype.getTrackingAudioFile = function (filename, sFunc, eFunc) {\n                if (this.desktopBrowserTesting) {\n                    eFunc();\n                }\n                else {\n                    this.$cordovaFile.readAsArrayBuffer(cordova.file.documentsDirectory + 'tracking/', filename)\n                        .then(function (success) {\n                        if (sFunc !== null) {\n                            sFunc(success);\n                        }\n                    }, function () {\n                        if (eFunc !== null) {\n                            eFunc('Error reading MP3 file: ' + filename);\n                        }\n                    });\n                }\n            };\n            /*\n            getVideoFile(source: string): Media {\n                return this.$cordovaMedia.newMedia(source);\n            }\n            */\n            ServerService.prototype.checkFile = function (filename, sFunc, eFunc) {\n                this.$cordovaFile.checkFile(cordova.file.documentsDirectory, filename)\n                    .then(function (file) {\n                    sFunc(file);\n                }, function (error) {\n                    eFunc(error);\n                });\n            };\n            ServerService.prototype.deleteOldAudioFiles = function (mediaList, trackingList, lifespan) {\n                var index = 0;\n                /*\n                            function checkAndRemove() {\n                                this.$window.resolveLocalFileSystemURL(cordova.file.documentsDirectory + mediaList[index], (fileEntry) => {\n                                    var fileModificationDate = new Date(file.lastModifiedDate);\n                                }, (error) => {\n                                    console.log('Filesystem error: ' + error);\n                                });\n                            }\n                \n                            mediaList.forEach((media) => {\n                                this.$window.resolveLocalFileSystemURL(cordova.file.documentsDirectory + media, gotFile, fail);\n                            });\n                            this.$window.resolveLocalFileSystemURL(cordova.file.documentsDirectory + '/tracking/' + \"www/index.html\", gotFile, fail);\n                */\n            };\n            ServerService.prototype.removeFile = function (path, filename, sFunc, eFunc) {\n                this.$cordovaFile.removeFile(path, filename)\n                    .then(function () {\n                    sFunc();\n                }, function () {\n                    eFunc();\n                });\n            };\n            ServerService.prototype.createTrackingDirectory = function () {\n                this.$cordovaFile.createDir(cordova.file.documentsDirectory, \"tracking\", false)\n                    .then(function () {\n                    console.log('Created new tracking directory');\n                }, function (error) {\n                    // Directory already exists\n                    console.log('Tracking directory exists' + error);\n                });\n            };\n            ServerService.prototype.startCaptureAudio = function (taskFilename, sFunc, eFunc) {\n                if (this.desktopBrowserTesting) {\n                    return;\n                }\n                else {\n                    // https://github.com/remoorejr/cordova-plugin-media-with-compression\n                    var options = {\n                        SampleRate: 32000,\n                        NumberOfChannels: 1,\n                        duration: 60\n                    };\n                    this.day3AudioFile = new Media(\"documents://\" + taskFilename, function () {\n                        console.log('Recording Task audio...');\n                        sFunc();\n                    }, function (error) {\n                        console.log('Record Task audio error: ' + error.code);\n                        eFunc();\n                    });\n                    this.day3RecordingTimer = Date.now();\n                    this.day3AudioFile.startRecordWithCompression(options);\n                }\n            };\n            ServerService.prototype.stopCaptureAudio = function (taskFilename, currentUsage, newTrackingAudioFilename, sFunc, eFunc) {\n                var _this = this;\n                if (this.desktopBrowserTesting) {\n                    return;\n                }\n                if (typeof this.day3AudioFile !== 'undefined' && this.day3AudioFile !== null) {\n                    this.day3AudioFile.stopRecord();\n                    this.day3AudioFile.release();\n                    if (currentUsage.audio_file !== '') {\n                        this.removeFile(cordova.file.documentsDirectory + 'tracking/', currentUsage.audio_file, function () {\n                            console.log('Older audio recording removed for this Tracking');\n                            currentUsage.audio_file = '';\n                        }, function (error) {\n                            eFunc(error);\n                        });\n                    }\n                    if (Date.now() - this.day3RecordingTimer < 1000) {\n                        this.removeFile(cordova.file.documentsDirectory, taskFilename, function () {\n                            console.log('Too short Tracking audio file removed');\n                            sFunc(null);\n                        }, function (error) {\n                            eFunc(error);\n                        });\n                    }\n                    else {\n                        this.$cordovaFile.copyFile(cordova.file.documentsDirectory, taskFilename, cordova.file.documentsDirectory + 'tracking/', newTrackingAudioFilename)\n                            .then(function () {\n                            currentUsage.audio_file = newTrackingAudioFilename;\n                            _this.checkFile(taskFilename, sFunc, eFunc);\n                        }, function (error) {\n                            console.log('Copy Tracking audio error' + error);\n                        });\n                    }\n                }\n                else {\n                    currentUsage.audio_file = '';\n                    this.checkFile(taskFilename, sFunc, eFunc);\n                }\n            };\n            ServerService.prototype.getDeviceID = function () {\n                if (this.desktopBrowserTesting) {\n                    return 'desktop device';\n                }\n                else {\n                    return this.$cordovaDevice.getUUID();\n                }\n            };\n            ServerService.prototype.getAppVersion = function (callback) {\n                if (this.desktopBrowserTesting) {\n                    callback('desktop');\n                }\n                else {\n                    this.$cordovaAppVersion.getVersionNumber()\n                        .then(function (version) {\n                        callback(version);\n                    });\n                }\n            };\n            ServerService.$inject = ['$window', '$timeout'];\n            return ServerService;\n        }());\n        Services.ServerService = ServerService;\n    })(Services = MorfologiApp.Services || (MorfologiApp.Services = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../_references.ts\"/>\n/// <reference path=\"../../services/dataService\"/>\n/**\n * On click, plays a video\n * On end, activates the next task\n *\n * Use this directive in the form:\n * <div isp-video-player></div>\n */\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Directives;\n    (function (Directives) {\n        \"use strict\";\n        var VideoPlayerController = (function () {\n            function VideoPlayerController(isolatedScope, $sce) {\n                var _this = this;\n                this.isolatedScope = isolatedScope;\n                this.$sce = $sce;\n                this.posterUrl = \"\";\n                this.videoUrl = \"\";\n                this.playing = false;\n                this.playImage = '1';\n                this.videoUrl = this.$sce.getTrustedResourceUrl(this.isolatedScope.ispVideoUrl);\n                this.posterUrl = this.isolatedScope.ispPosterUrl;\n                if (typeof this.isolatedScope.ispType !== 'undefined' && this.isolatedScope.ispType != null) {\n                    if (this.isolatedScope.ispType === 'task8') {\n                        this.playImage = '2';\n                    }\n                    else if (this.isolatedScope.ispType === 'none') {\n                        this.playImage = '';\n                    }\n                    else {\n                        this.playImage = '1';\n                    }\n                }\n                isolatedScope.$watch(function () { return isolatedScope.ispActive['playing']; }, function (newValue) {\n                    if (newValue === true) {\n                        if (isolatedScope.ispActive['playing'] === true) {\n                            _this.playVideo();\n                        }\n                    }\n                });\n            }\n            ;\n            VideoPlayerController.prototype.playVideo = function () {\n                if (this.isolatedScope.ispActive['active']) {\n                    this.playing = true;\n                    this.video.load();\n                    this.video.play();\n                    this.isolatedScope.ispOnPlay();\n                }\n            };\n            VideoPlayerController.$inject = ['$scope', '$sce'];\n            return VideoPlayerController;\n        }());\n        function linker(isolatedScope, element, attributes, ctrl) {\n            var c = element.children();\n            ctrl.video = c[0];\n            ctrl.video.autoplay = false;\n            ctrl.video.addEventListener('ended', function () {\n                ctrl.playing = false;\n                isolatedScope.ispActive['playing'] = false;\n                isolatedScope.ispOnCompleted();\n                isolatedScope.$digest();\n            });\n        }\n        //directive declaration\n        function ispVideoPlayer() {\n            return {\n                restrict: 'A',\n                controller: VideoPlayerController,\n                controllerAs: 'vpC',\n                replace: true,\n                templateUrl: 'js/components/videoplayer/videoplayer.html',\n                scope: {\n                    ispVideoUrl: '@',\n                    ispPosterUrl: '@',\n                    ispOnCompleted: '&',\n                    ispActive: '=',\n                    ispOnPlay: '&',\n                    ispType: '@'\n                },\n                link: linker\n            };\n        }\n        Directives.ispVideoPlayer = ispVideoPlayer;\n        //Html5 video fix\n        function html5videofix() {\n            return {\n                restrict: 'A',\n                link: function (isolatedScope, element, attr) {\n                    attr.$set('src', attr['vsrc']);\n                    attr.$set('poster', attr['psrc']);\n                    attr.$set('autoplay', false);\n                    attr.$set('webkit-playsinline', '');\n                    attr.$set('playsinline', '');\n                }\n            };\n        }\n        Directives.html5videofix = html5videofix;\n    })(Directives = MorfologiApp.Directives || (MorfologiApp.Directives = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var Task2Controller = (function () {\n            function Task2Controller($scope, $timeout, dataService) {\n                this.$scope = $scope;\n                this.$timeout = $timeout;\n                this.dataService = dataService;\n                this.word = dataService.getWord();\n                this.dayWord = dataService.getWordForConsolidationDay();\n                this.dayIndex = dataService.getDay();\n                this.stage = 'stageOne';\n                this.correctCounter = 0;\n                var correctToShuffle = [];\n                var incorrectToShuffle = [];\n                for (var i = 1; i < 25; i++) {\n                    var item = {\n                        image: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.jpg',\n                        audio: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.mp3',\n                        correct: true,\n                        highlighted: false\n                    };\n                    correctToShuffle.push(item);\n                }\n                for (var i = 1; i < 7; i++) {\n                    var item = {\n                        image: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.jpg',\n                        audio: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.mp3',\n                        correct: false,\n                        highlighted: false\n                    };\n                    incorrectToShuffle.push(item);\n                }\n                var stageTwoCorrect = correctToShuffle.splice(12, 12);\n                var stageTwoIncorrect = incorrectToShuffle.splice(3, 3);\n                this.stageOne = dataService.shuffleArray(correctToShuffle.concat(incorrectToShuffle));\n                this.stageTwo = dataService.shuffleArray(stageTwoCorrect.concat(stageTwoIncorrect));\n                // This should be run at the end of the constructor\n                /*\n                var handle = this;\n                dataService.setInteractionEndActivateTaskCallback(() => {\n                    this.activateTask(handle);\n                });\n                */\n                dataService.setupAudioIntroduction('content/' + this.word + '/task1/instruction-' + this.dayWord + '.mp3');\n                dataService.playAudioIntroduction(3000);\n            }\n            Task2Controller.prototype.activateTask = function (handle) {\n            };\n            Task2Controller.prototype.clickItem = function (item) {\n                var _this = this;\n                this.$timeout(function () {\n                    new Audio(item['audio']).play();\n                }, 250);\n                if (item['highlighted']) {\n                    return;\n                }\n                item['highlighted'] = true;\n                if (!item.correct) {\n                    this.$timeout(function () {\n                        item['highlighted'] = false;\n                    }, 2000);\n                }\n                else {\n                    this.correctCounter++;\n                }\n                if (this.correctCounter === 12) {\n                    if (this.stage === 'stageOne') {\n                        this.$scope['wpC'].setAndShowOnetimeInternalForwardArrowCallback(function () {\n                            _this.startStageTwo();\n                        });\n                    }\n                    else {\n                        this.$scope['wpC'].taskFinished();\n                    }\n                }\n            };\n            Task2Controller.prototype.startStageTwo = function () {\n                this.stage = 'stageTwo';\n                this.correctCounter = 0;\n                new Audio('content/' + this.word + '/task1/instruction-' + this.dayWord + '.mp3').play();\n            };\n            Task2Controller.$inject = ['$scope', '$timeout', 'DataService'];\n            return Task2Controller;\n        }());\n        Controllers.Task2Controller = Task2Controller;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var Task3Controller = (function () {\n            function Task3Controller($scope, $timeout, dataService) {\n                var _this = this;\n                this.$scope = $scope;\n                this.$timeout = $timeout;\n                this.dataService = dataService;\n                this.iHeight = 111;\n                this.iWidth = 148;\n                this.onDropComplete = function (item) {\n                    var _this = this;\n                    new Audio(item['audio']).play();\n                    if (item['correct']) {\n                        var iWidth = 80, iHeight = 60, leftOffset = 90, topOffset = 122, shiftFactor = 1.5;\n                        this.droppedObjects.push(item);\n                        var itemIndex = this['draggableObjects' + this.round].indexOf(item);\n                        this['draggableObjects' + this.round].splice(itemIndex, 1);\n                        var i = this.droppedObjects.length - 1;\n                        item['style'] = {\n                            'position': 'absolute',\n                            'top': topOffset + i * shiftFactor + 'px',\n                            'left': leftOffset - i * shiftFactor + 'px',\n                            'width': iWidth + (2 * i * shiftFactor) + 'px',\n                            'height': iHeight + (2 * i * shiftFactor) + 'px',\n                            'transform': 'none'\n                        };\n                        if (this.droppedObjects.length === 24) {\n                            this.bounce = true;\n                            this.$timeout(function () {\n                                _this.page = 3;\n                            }, 2000);\n                        }\n                        else if (this.droppedObjects.length === 8 || this.droppedObjects.length === 16) {\n                            this.bounce = true;\n                            this.$timeout(function () {\n                                _this.bounce = false;\n                                _this.page = 1;\n                                _this.playMainIntro();\n                            }, 2000);\n                        }\n                    }\n                };\n                this.word = dataService.getWord();\n                this.dayWord = dataService.getWordForConsolidationDay();\n                this.dayIndex = dataService.getDay();\n                this.page = 1;\n                this.round = 0;\n                this.bounce = false;\n                this.familyCharacter = '';\n                this.droppedObjects = [];\n                this.draggableObjects1 = [];\n                this.draggableObjects2 = [];\n                this.draggableObjects3 = [];\n                this.vanIsClosed = false;\n                this.activatePointer = false;\n                this.kangarooData = [\n                    {\n                        body: {\n                            width: '500px',\n                            bottom: '100px',\n                            left: '-80px'\n                        },\n                        pouch: {\n                            width: '150px',\n                            height: '150px',\n                            left: '70px',\n                            top: '300px'\n                        },\n                        pointer: {\n                            left: '100px',\n                            top: '400px'\n                        },\n                        pageThreeData: {\n                            \"code\": \"zoomable-image\",\n                            \"id\": 11,\n                            \"sequence\": -1,\n                            \"description\": \"kangaroo jumps off screen\",\n                            \"start\": {\n                                \"x\": -50,\n                                \"y\": 250,\n                                \"w\": 400,\n                                \"h\": 400\n                            },\n                            \"transition\": {\n                                \"x\": 1900,\n                                \"y\": 800,\n                                \"scale\": 1,\n                                \"duration\": 4\n                            },\n                            \"opacity\": 1,\n                            \"visible_before\": true,\n                            \"visible_after\": true,\n                            \"auto_start\": true,\n                            \"auto_return\": false,\n                            \"allow_return\": false,\n                            \"type\": \"png\"\n                        }\n                    },\n                    {\n                        body: {\n                            width: '500px',\n                            bottom: '100px',\n                            left: '-100px'\n                        },\n                        pouch: {\n                            width: '150px',\n                            height: '150px',\n                            left: '65px',\n                            top: '350px'\n                        },\n                        pointer: {\n                            left: '350px',\n                            top: '500px'\n                        },\n                        pageThreeData: {\n                            \"code\": \"zoomable-image\",\n                            \"id\": 12,\n                            \"sequence\": -1,\n                            \"description\": \"kangaroo jumps off screen\",\n                            \"start\": {\n                                \"x\": 250,\n                                \"y\": 380,\n                                \"w\": 300,\n                                \"h\": 300\n                            },\n                            \"transition\": {\n                                \"x\": -1900,\n                                \"y\": -400,\n                                \"scale\": 1,\n                                \"duration\": 5\n                            },\n                            \"opacity\": 1,\n                            \"visible_before\": true,\n                            \"visible_after\": true,\n                            \"auto_start\": true,\n                            \"auto_return\": false,\n                            \"allow_return\": false,\n                            \"type\": \"png\"\n                        }\n                    },\n                    {\n                        body: {\n                            width: '500px',\n                            bottom: '100px',\n                            left: '-100px'\n                        },\n                        pouch: {\n                            width: '100px',\n                            height: '100px',\n                            left: '140px',\n                            top: '400px'\n                        },\n                        pointer: {\n                            left: '550px',\n                            top: '450px'\n                        },\n                        pageThreeData: {\n                            \"code\": \"zoomable-image\",\n                            \"id\": 13,\n                            \"sequence\": -1,\n                            \"description\": \"kangaroo jumps off screen\",\n                            \"start\": {\n                                \"x\": 450,\n                                \"y\": 300,\n                                \"w\": 250,\n                                \"h\": 250\n                            },\n                            \"transition\": {\n                                \"x\": -1000,\n                                \"y\": -1000,\n                                \"scale\": 1,\n                                \"duration\": 3\n                            },\n                            \"opacity\": 1,\n                            \"visible_before\": true,\n                            \"visible_after\": true,\n                            \"auto_start\": true,\n                            \"auto_return\": false,\n                            \"allow_return\": false,\n                            \"type\": \"png\"\n                        }\n                    }\n                ];\n                var correctToShuffle = [];\n                var incorrectToShuffle = [];\n                for (var i = 1; i < 25; i++) {\n                    var item = {\n                        image: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.jpg',\n                        audio: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.mp3',\n                        correct: true,\n                        style: {\n                            'top': 0,\n                            'left': 0,\n                            'width': 0,\n                            'height': 0\n                        },\n                        highlighted: false,\n                        draggable: true,\n                        transition: true,\n                        position: 0\n                    };\n                    correctToShuffle.push(item);\n                }\n                for (var i = 1; i < 7; i++) {\n                    var item = {\n                        image: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.jpg',\n                        audio: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.mp3',\n                        correct: false,\n                        style: {\n                            'top': 0,\n                            'left': 0,\n                            'width': 0,\n                            'height': 0\n                        },\n                        highlighted: false,\n                        draggable: true,\n                        transition: true,\n                        position: 0\n                    };\n                    incorrectToShuffle.push(item);\n                }\n                var correctShuffled = dataService.shuffleArray(correctToShuffle);\n                var incorrectShuffled = dataService.shuffleArray(incorrectToShuffle);\n                this.draggableObjects1 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n                this.draggableObjects2 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n                this.draggableObjects3 = dataService.shuffleArray(correctShuffled.concat(incorrectShuffled));\n                //this.itemSource = dataService.shuffleArray(correctToShuffle.concat(incorrectToShuffle));\n                this.dataService.setupAudioIntroduction('content/common/audio/consolidation/task5/introduction.mp3');\n                this.dataService.playAudioIntroduction(2000);\n                this.$timeout(function () {\n                    _this.playMainIntro();\n                }, 11000);\n            }\n            Task3Controller.prototype.playMainIntro = function () {\n                var _this = this;\n                this.dataService.setupAudioIntroduction('content/common/audio/consolidation/task5/introround' + (this.round + 1) + '.mp3');\n                this.dataService.playAudioIntroduction(2000);\n                this.$timeout(function () {\n                    _this.activatePointer = true;\n                }, 3000);\n            };\n            Task3Controller.prototype.clickKangaroo = function (index) {\n                var _this = this;\n                this.activatePointer = false;\n                if (index === this.round + 1) {\n                    this.bounce = true;\n                    this.$timeout(function () {\n                        _this.round = index;\n                        _this.page = 2;\n                        _this.bounce = false;\n                        _this.introduction();\n                    }, 2000);\n                }\n            };\n            Task3Controller.prototype.introduction = function () {\n                var _this = this;\n                this.setupImages();\n                this.dataService.setupAudioIntroduction('content/' + this.word + '/task5/' + this.dayWord + '.mp3');\n                this.dataService.playAudioIntroduction(2000);\n                this.$timeout(function () {\n                    _this.enlargeImages();\n                }, 1500);\n            };\n            Task3Controller.prototype.setupImages = function () {\n                var vGap = 30, hGap = 30;\n                for (var n = 1; n < 4; n++) {\n                    var list = this['draggableObjects' + n];\n                    for (var position = 0; position < list.length; position++) {\n                        // Prepare the images for popping up from their center points\n                        list[position]['style'] = {\n                            'position': 'absolute',\n                            'top': (this.iHeight + vGap) * Math.floor(position / 2) + Math.floor(this.iHeight / 2) + 'px',\n                            'left': (this.iWidth + hGap) * (position % 2) + Math.floor(this.iWidth / 2) + 'px',\n                            'width': '0',\n                            'height': '0'\n                        };\n                    }\n                }\n            };\n            Task3Controller.prototype.enlargeImages = function () {\n                var vGap = 30, hGap = 30;\n                var items = this['draggableObjects' + this.round];\n                for (var position = 0; position < items.length; position++) {\n                    items[position]['style'] = {\n                        'position': 'absolute',\n                        'top': (this.iHeight + vGap) * Math.floor(position / 2) + 'px',\n                        'left': (this.iWidth + hGap) * (position % 2) + 'px',\n                        'width': this.iWidth + 'px',\n                        'height': this.iHeight + 'px'\n                    };\n                }\n                this.$timeout(function () {\n                    for (var position = 0; position < items.length; position++) {\n                        items[position]['transition'] = false; // Transition effects dragging, so turn it off now\n                    }\n                }, 1000);\n            };\n            Task3Controller.prototype.jumpOffPageThreeCompleted = function () {\n                this.$scope['wpC'].taskFinished();\n            };\n            Task3Controller.clickImage = function (filename) {\n                new Audio(filename).play();\n            };\n            Task3Controller.$inject = ['$scope', '$timeout', 'DataService'];\n            return Task3Controller;\n        }());\n        Controllers.Task3Controller = Task3Controller;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var Task5Controller = (function () {\n            function Task5Controller($scope, $timeout, dataService) {\n                var _this = this;\n                this.$scope = $scope;\n                this.$timeout = $timeout;\n                this.dataService = dataService;\n                this.iHeight = 111;\n                this.iWidth = 148;\n                this.onDropComplete = function (item) {\n                    new Audio(item['audio']).play();\n                    if (item['correct']) {\n                        var iWidth = 80, iHeight = 60, leftOffset = 90, topOffset = 122, shiftFactor = 1.5;\n                        this.droppedObjects.push(item);\n                        var itemIndex = this['draggableObjects' + this.round].indexOf(item);\n                        this['draggableObjects' + this.round].splice(itemIndex, 1);\n                        var i = this.droppedObjects.length - 1;\n                        item['style'] = {\n                            'position': 'absolute',\n                            'top': topOffset + i * shiftFactor + 'px',\n                            'left': leftOffset - i * shiftFactor + 'px',\n                            'width': iWidth + (2 * i * shiftFactor) + 'px',\n                            'height': iHeight + (2 * i * shiftFactor) + 'px',\n                            'transform': 'none'\n                        };\n                        if (this.droppedObjects.length === 24) {\n                            this.opacity = 0;\n                            this.closeVan();\n                        }\n                        else if (this.droppedObjects.length === 8 || this.droppedObjects.length === 16) {\n                            this.opacity = 0;\n                            this.introduction();\n                        }\n                    }\n                };\n                this.word = dataService.getWord();\n                this.dayWord = dataService.getWordForConsolidationDay();\n                this.dayIndex = dataService.getDay();\n                this.page = 1;\n                this.round = 0;\n                this.familyCharacter = '';\n                this.droppedObjects = [];\n                this.draggableObjects1 = [];\n                this.draggableObjects2 = [];\n                this.draggableObjects3 = [];\n                this.vanIsClosed = false;\n                this.opacity = 0;\n                this.pageOneImageData = {\n                    \"code\": \"zoomable-image\",\n                    \"id\": 11,\n                    \"sequence\": -1,\n                    \"description\": \"car drives on to screen\",\n                    \"start\": {\n                        \"x\": -900,\n                        \"y\": 100,\n                        \"w\": 800,\n                        \"h\": 600\n                    },\n                    \"transition\": {\n                        \"x\": 900,\n                        \"y\": 0,\n                        \"scale\": 1,\n                        \"duration\": 5\n                    },\n                    \"opacity\": 1,\n                    \"visible_before\": true,\n                    \"visible_after\": true,\n                    \"auto_start\": true,\n                    \"auto_return\": false,\n                    \"allow_return\": false,\n                    \"type\": \"png\"\n                };\n                this.pageThreeImageData = {\n                    \"code\": \"zoomable-image\",\n                    \"id\": 11,\n                    \"sequence\": -1,\n                    \"description\": \"car drives off screen\",\n                    \"start\": {\n                        \"x\": -900,\n                        \"y\": 100,\n                        \"w\": 800,\n                        \"h\": 600\n                    },\n                    \"transition\": {\n                        \"x\": 1900,\n                        \"y\": 0,\n                        \"scale\": 1,\n                        \"duration\": 6\n                    },\n                    \"opacity\": 1,\n                    \"visible_before\": true,\n                    \"visible_after\": true,\n                    \"auto_start\": true,\n                    \"auto_return\": false,\n                    \"allow_return\": false,\n                    \"type\": \"png\"\n                };\n                var correctToShuffle = [];\n                var incorrectToShuffle = [];\n                for (var i = 1; i < 25; i++) {\n                    var item = {\n                        image: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.jpg',\n                        audio: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.mp3',\n                        correct: true,\n                        style: {\n                            'top': 0,\n                            'left': 0,\n                            'width': 0,\n                            'height': 0\n                        },\n                        highlighted: false,\n                        draggable: true,\n                        transition: true,\n                        position: 0\n                    };\n                    correctToShuffle.push(item);\n                }\n                for (var i = 1; i < 7; i++) {\n                    var item = {\n                        image: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.jpg',\n                        audio: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.mp3',\n                        correct: false,\n                        style: {\n                            'top': 0,\n                            'left': 0,\n                            'width': 0,\n                            'height': 0\n                        },\n                        highlighted: false,\n                        draggable: true,\n                        transition: true,\n                        position: 0\n                    };\n                    incorrectToShuffle.push(item);\n                }\n                var correctShuffled = dataService.shuffleArray(correctToShuffle);\n                var incorrectShuffled = dataService.shuffleArray(incorrectToShuffle);\n                this.draggableObjects1 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n                this.draggableObjects2 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n                this.draggableObjects3 = dataService.shuffleArray(correctShuffled.concat(incorrectShuffled));\n                this.dataService.setInteractionEndActivateTaskCallback(function () {\n                    _this.dataService.clearInteractionEndActivateTaskCallback();\n                    _this.dataService.setupAudioIntroduction('content/common/audio/consolidation/task3/instruction.mp3');\n                    _this.dataService.playAudioIntroduction(1000);\n                });\n                this.dataService.setupAudioIntroduction('content/common/audio/consolidation/task3/van-stopping.mp3');\n                this.dataService.playAudioIntroduction(1000);\n            }\n            Task5Controller.prototype.introduction = function () {\n                var _this = this;\n                var audioFile = '';\n                this.round++;\n                this.setupImages();\n                this.$timeout(function () {\n                    if (_this.round === 1) {\n                        _this.familyCharacter = 'mother.png';\n                        audioFile = 'content/' + _this.word + '/task3/' + _this.dayWord + '/mother.mp3';\n                    }\n                    else if (_this.round === 2) {\n                        _this.familyCharacter = 'father.png';\n                        audioFile = 'content/' + _this.word + '/task3/' + _this.dayWord + '/father.mp3';\n                    }\n                    else {\n                        _this.familyCharacter = 'daughter.png';\n                        audioFile = 'content/' + _this.word + '/task3/' + _this.dayWord + '/daughter.mp3';\n                    }\n                    _this.dataService.setupAudioIntroduction(audioFile);\n                }, 1000);\n                this.$timeout(function () {\n                    _this.opacity = 1;\n                    _this.dataService.playAudioIntroduction(0);\n                }, 2000);\n                this.$timeout(function () {\n                    _this.enlargeImages();\n                }, 4000);\n            };\n            Task5Controller.prototype.setupImages = function () {\n                var vGap = 10, hGap = 10;\n                for (var n = 1; n < 4; n++) {\n                    var list = this['draggableObjects' + n];\n                    for (var position = 0; position < list.length; position++) {\n                        // Prepare the images for popping up from their center points\n                        list[position]['style'] = {\n                            'position': 'absolute',\n                            'top': (this.iHeight + vGap) * Math.floor(position / 5) + Math.floor(this.iHeight / 2) + 'px',\n                            'left': (this.iWidth + hGap) * (position % 5) + Math.floor(this.iWidth / 2) + 'px',\n                            'width': '0',\n                            'height': '0'\n                        };\n                    }\n                }\n            };\n            Task5Controller.prototype.enlargeImages = function () {\n                var vGap = 10, hGap = 10;\n                var items = this['draggableObjects' + this.round];\n                for (var position = 0; position < items.length; position++) {\n                    items[position]['style'] = {\n                        'position': 'absolute',\n                        'top': (this.iHeight + vGap) * Math.floor(position / 5) + 'px',\n                        'left': (this.iWidth + hGap) * (position % 5) + 'px',\n                        'width': this.iWidth + 'px',\n                        'height': this.iHeight + 'px'\n                    };\n                }\n                this.$timeout(function () {\n                    for (var position = 0; position < items.length; position++) {\n                        items[position]['transition'] = false; // Transition effects dragging, so turn it off now\n                    }\n                }, 1000);\n            };\n            Task5Controller.prototype.driveOnPageOneCompleted = function () {\n                var _this = this;\n                this.$scope['wpC'].setAndShowOnetimeInternalForwardArrowCallback(function () {\n                    _this.page = 2;\n                    _this.introduction();\n                });\n            };\n            Task5Controller.prototype.driveOffPageThreeCompleted = function () {\n                this.$scope['wpC'].taskFinished();\n            };\n            Task5Controller.clickImage = function (filename) {\n                new Audio(filename).play();\n            };\n            Task5Controller.prototype.closeVan = function () {\n                var _this = this;\n                this.$timeout(function () {\n                    _this.vanIsClosed = true;\n                    new Audio('content/common/audio/consolidation/task3/van-door.mp3').play();\n                    _this.$timeout(function () {\n                        _this.page = 3;\n                        new Audio('content/common/audio/consolidation/task3/van-driving.mp3').play();\n                    }, 500);\n                }, 1500);\n            };\n            Task5Controller.$inject = ['$scope', '$timeout', 'DataService'];\n            return Task5Controller;\n        }());\n        Controllers.Task5Controller = Task5Controller;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../_references\"/>\n/// <reference path=\"../../models/models\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var MainPanelController = (function () {\n            function MainPanelController($http, $location, $scope) {\n                this.$http = $http;\n                this.$location = $location;\n                this.$scope = $scope;\n                this.language = \"\";\n                this.initialise();\n            }\n            MainPanelController.prototype.initialise = function () {\n                // this.language = this.dataService.getLanguage();\n            };\n            MainPanelController.$inject = ['$http', '$location', '$scope'];\n            return MainPanelController;\n        }());\n        Controllers.MainPanelController = MainPanelController;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../_references\"/>\n/// <reference path=\"../../models/models\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var TestPanelController = (function () {\n            function TestPanelController($http, $location, $scope) {\n                this.$http = $http;\n                this.$location = $location;\n                this.$scope = $scope;\n                this.language = \"\";\n                this.initialise();\n            }\n            TestPanelController.prototype.initialise = function () {\n                // this.language = this.dataService.getLanguage();\n            };\n            TestPanelController.$inject = ['$http', '$location', '$scope'];\n            return TestPanelController;\n        }());\n        Controllers.TestPanelController = TestPanelController;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n","/// <reference path=\"_references.ts\"/>\n\nmodule MorfologiApp {\n    import ILocationService = angular.ILocationService;\n    import IWindowService = angular.IWindowService;\n    'use strict';\n\n    /**\n     * Application-wide overall run function\n     * @param $window  Used for configuring cordova plugins options.\n     * @param $location  Re-route if storage is reloaded\n     * @param $state  Used to reload the state\n     * @param dataService Call to storage loading check\n     */\n    export function runApp($window: IWindowService, $location: ILocationService) {\n\n    }\n\n    runApp.$inject = [\"$window\", \"$location\", 'DataService'];\n\n}\n","/// <reference path=\"../_references.ts\"/>\n\nmodule MorfologiApp {\n\n    \"use strict\";\n    import MomentDuration = moment.Duration;\n\n    interface Serializable<T> {\n        deserialise(input: Object): T;\n    }\n\n\n    class Audio {\n        task_guidance_100: string;\n\n        deserialise(input) {\n            for (var key in input) {\n                if (input.hasOwnProperty(key)) {\n                    this[key] = input[key];\n                }\n            }\n            return this;\n        }\n\n        getKey(key) {\n            if (this.hasOwnProperty(key)) {\n                return this[key];\n            }\n        }\n\n    }\n\n    class Video {\n\n        deserialise(input) {\n            for (var key in input) {\n                if (input.hasOwnProperty(key)) {\n                    this[key] = input[key];\n                }\n            }\n            return this;\n        }\n\n        getKey(key) {\n            if (this.hasOwnProperty(key)) {\n                return this[key];\n            }\n        }\n    }\n\n    class Image {\n        move_forward: string;\n        move_backward: string;\n        exit_to_menu: string;\n\n        deserialise(input) {\n            for (var key in input) {\n                if (input.hasOwnProperty(key)) {\n                    this[key] = input[key];\n                }\n            }\n            return this;\n        }\n\n        getKey(key) {\n            if (this.hasOwnProperty(key)) {\n                return this[key];\n            }\n        }\n    }\n\n    export class Common {\n        revision: number;\n        audio: Audio;\n        video: Video;\n        image: Image;\n\n        constructor() {\n            this.audio = new Audio();\n            this.video = new Video();\n            this.image = new Image();\n        }\n    }\n\n    export class Reward {\n        weekIndex: number;        // Used to reference the file name. Equates to the 'current day' index.  *COMPULSORY*\n        dayIndex: number;\n        type: string;\n        xpos: number;\n        ypos: number;\n        width: number;\n        height: number;\n\n        constructor(week: number, day: number, type: string) {\n            this.type = type;\n            this.dayIndex = day;\n            this.weekIndex = week;\n            this.width = 50;\n            this.height = 50;\n        }\n    }\n\n    export class Achievement {  // As the weeks are completed linearly, we only keep track of the highest\n        avatar: number;\n        weekIndex: number;        // Index of the most recent week completed\n        dayIndex: number;         // Index of the most recent day completed\n        taskIndex: number;        // Index of the most recent task completed\n        rewards: Reward[];        // Each reward 'src' should be created to match the week and day indexes\n                                  // e.g. found in the form /common/images/rewards/week-<weekIndex>/<dayIndex>.gif\n\n        constructor() {\n            this.avatar = -1;\n            this.weekIndex = -1;\n            this.dayIndex = -1;\n            this.taskIndex = -1;\n            this.rewards = [];\n        }\n\n//  Old completion functions\n/*\n        completeCurrentWeek() {\n            this.weekIndex++;\n            this.dayIndex = this.taskIndex = -1;\n        }\n\n        completeCurrentDay() {\n            if (this.dayIndex < 2) {\n                this.dayIndex++;\n            } else {\n                this.dayIndex = -1;\n            }\n            this.taskIndex = -1;\n        }\n\n        completeCurrentTask() {\n            this.taskIndex++;\n            if (this.taskIndex > 6) {\n                this.taskIndex = -1;\n            }\n        }\n*/\n        hasCollectedReward(week, day): boolean {\n            for (var r = 0; r < this.rewards.length; r++) {\n                if (this.rewards[r].weekIndex === week && this.rewards[r].dayIndex === day) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        completeTask(weekIndex, dayIndex, taskIndex) {\n            if (weekIndex > this.weekIndex && dayIndex > this.dayIndex && taskIndex > this.taskIndex) {\n                this.taskIndex = taskIndex;\n            }\n        }\n\n        completeDay(weekIndex, dayIndex) {\n            if (weekIndex > this.weekIndex && dayIndex > this.dayIndex) {\n                this.dayIndex = dayIndex;\n                this.taskIndex = -1;\n            }\n        }\n\n        completeWeek(weekIndex) {\n            if (weekIndex > this.weekIndex) {\n                this.weekIndex = weekIndex;\n                this.dayIndex = this.taskIndex = -1;\n            }\n        }\n\n    }\n\n    export class Overlay {\n        id: number;               // Used to reference the file name.   *COMPULSORY*\n        type: string;             // File type. matches file extension  *COMPULSORY*\n        sequence: number;         // This image is part of a sequence that must be viewed in order.\n        description: string;\n        start: {\n            x: number,\n            y: number,\n            w: number,\n            h: number\n        };\n        transition: {\n            x: number,\n            y: number,\n            scale: number,\n            duration: number\n        };\n        map: {                   // Defines clickable area (used for Focus Image)\n            x: number,\n            y: number,\n            w: number,\n            h: number\n        };\n        pointer: {\n            x: number,\n            y: number,\n            retain: boolean\n        };\n        opacity: number;\n        visible_before: boolean;  // Zoomable images. Show the image before zooming up.\n        visible_after: boolean;   // Zoomable images. Continue to show the image after zooming down\n        auto_return: boolean;     // Zoomable images.  Zoom back down again\n        allow_return: boolean;    // Zoomable images. Allow zoom back down.\n        auto_start: boolean;      // Activate this Overlay automatically\n        timeout: number;          // in seconds.  Time before hiding\n        delay: number;            // in seconds.  Delay time before showing\n        active: boolean;          // Currently clickable. Shows bouncing arrow.\n        completed: boolean;       // The function of this Overlay is deemed 'complete'\n\n        constructor() {\n            this.id = -1;\n            this.type = 'png';\n            this.sequence = -1;\n            this.start = { x: 0, y: 0, w: 0, h: 0 };\n            this.transition = { x: 0, y: 0, scale: 1, duration: 1 };\n            this.map = { x: 0, y: 0, w: 0, h: 0 };\n            this.pointer = { x: 0, y: 0, retain: true };\n            this.opacity = 1;\n            this.visible_before = false;\n            this.visible_after = false;\n            this.auto_start = false;\n            this.auto_return = false;\n            this.allow_return = true;\n            this.timeout = 0;\n            this.delay = 0;\n            this.active = false;\n            this.completed = false;\n        }\n\n        setItem(key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined') {\n                this[key] = value;\n            }\n        }\n    }\n\n    export class Overlays {\n        display_delay: number;              // How long the overlay for this page delays before activating\n        zoomable_images: Overlay[];\n        appearing_images: Overlay[];\n        playable_audio: Overlay[];\n        focus_images: Overlay[];           // Focus is using the background image, so only one Overlay in this array\n\n        constructor() {\n            this.display_delay = 0;\n            this.zoomable_images = [];\n            this.appearing_images = [];\n            this.playable_audio = [];\n            this.focus_images = [];\n        }\n    }\n\n    export class Book {\n        reference: string;\n        label_en: string;\n        thumbnail: number;\n        record_audio: boolean;\n        backgrounds: number[];\n        completed: boolean;\n        overlays: { [id: string]: Overlays };       // 'id' references the page number in 'backgrounds'\n\n        constructor() {\n            this.reference = '';\n            this.label_en = '';\n            this.thumbnail = -1;\n            this.record_audio = false;\n            this.backgrounds= [];\n            this.completed = false;\n            this.overlays = {};\n        }\n\n        setItem(key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined') {\n                this[key] = value;\n            }\n        }\n    }\n\n    export class Task {\n        type: string;\n        record_audio: boolean;\n        completed: boolean;\n        structure: {};\n        play_introduction: boolean;\n\n        constructor() {\n            this.type = '100';\n            this.record_audio = false;\n            this.completed = false;\n            this.play_introduction = true;\n        }\n    }\n\n    class Day {\n        completed: boolean;\n        tasks: Task[];\n\n        constructor() {\n            this.completed = false;\n            this.tasks = [];\n        }\n    }\n\n    export class Week {\n        word_en: string;\n        word_no: string;\n        book_index: number;\n        completed: boolean;\n        days: Day[];\n\n        constructor() {\n            this.completed = false;\n            this.days = [];\n        }\n    }\n\n    export class Setup {\n        common: Common;\n        books: Book[];\n        weeks: Week[];\n\n        constructor() {\n            this.books = [];\n            this.weeks = [];\n        }\n\n        deserialise(input) {\n            let commonKey = 'common', imageKey = 'image', audioKey = 'audio', videoKey = 'video';\n\n            let booksKey = 'books', referenceKey = 'reference', backgroundKey = 'backgrounds', overlaysKey = 'overlays';\n            let labelEnKey = 'label_en', labelNoKey = 'label_no', thumbnailKey = 'thumbnail', revisionKey = 'revision';\n            let idKey = 'id', sequenceKey = 'sequence', descriptionKey = 'description', delayKey = 'delay';\n            let startKey = 'start', transitionKey = 'transition', xKey = 'x', yKey = 'y', wKey = 'w', hKey = 'h';\n            let opacityKey = 'opacity', visibleBeforeKey = 'visible_before', visibleAfterKey = 'visible_after';\n            let autoReturnKey = 'auto_return', typeKey = 'type', timeoutKey = 'timeout', autoStartKey = 'auto_start';\n            let allowReturnKey = 'allow_return', scaleKey = 'scale', durationKey = 'duration', mapKey = 'map';\n\n            let weeksKey = 'weeks', wordEnKey = 'word_en', wordNoKey = 'word_no', bookIndexKey = 'book_index';\n            let daysKey = 'days', tasksKey = 'tasks', recordAudioKey = 'record_audio', focusKey = 'focus';\n            let playIntroKey = 'play_introduction', activeKey = 'active', structureKey = 'structure';\n            let pointerKey = 'pointer', retainKey = 'retain', displayDelayKey = 'display_delay';\n\n            this.common = new Common();\n            this.common.image.deserialise(input[commonKey][imageKey]);\n            this.common.audio.deserialise(input[commonKey][audioKey]);\n            this.common.video.deserialise(input[commonKey][videoKey]);\n            this.common.revision = input[commonKey][revisionKey];\n\n            for (var b = 0; b < input[booksKey].length; b++) {\n                var book = new Book();\n                book.setItem(referenceKey, input[booksKey][b][referenceKey]);\n                book.setItem(labelEnKey, input[booksKey][b][labelEnKey]);\n                book.setItem(labelNoKey, input[booksKey][b][labelNoKey]);\n                book.setItem(thumbnailKey, input[booksKey][b][thumbnailKey]);\n                book.setItem(recordAudioKey, input[booksKey][b][recordAudioKey]);\n                book.setItem(backgroundKey, input[booksKey][b][backgroundKey]);\n                for (var o in input[booksKey][b][overlaysKey]) {\n                    if (input[booksKey][b][overlaysKey].hasOwnProperty(o)) {\n                        var newOverlays = new Overlays();\n                        for (var oType in input[booksKey][b][overlaysKey][o]) {\n                            if (input[booksKey][b][overlaysKey][o].hasOwnProperty(oType) && newOverlays.hasOwnProperty(oType)) {\n                                if (oType === displayDelayKey) {\n                                    newOverlays[displayDelayKey] = input[booksKey][b][overlaysKey][o][oType];\n                                } else {\n                                    for (var oi = 0; oi < input[booksKey][b][overlaysKey][o][oType].length; oi++) {\n                                        var inputRef = input[booksKey][b][overlaysKey][o][oType][oi];\n                                        var overlay_item = new Overlay();\n                                        overlay_item.setItem(idKey, inputRef[idKey]);\n                                        overlay_item.setItem(typeKey, inputRef[typeKey]);\n                                        overlay_item.setItem(sequenceKey, inputRef[sequenceKey]);\n                                        overlay_item.setItem(descriptionKey, inputRef[descriptionKey]);\n\n                                        if (typeof inputRef[startKey] !== 'undefined') {\n                                            overlay_item.setItem(startKey, {\n                                                x: inputRef[startKey][xKey],\n                                                y: inputRef[startKey][yKey],\n                                                w: inputRef[startKey][wKey],\n                                                h: inputRef[startKey][hKey]\n                                            });\n                                        }\n\n                                        if (typeof inputRef[transitionKey] !== 'undefined') {\n                                            overlay_item.setItem(transitionKey, {\n                                                x: inputRef[transitionKey][xKey],\n                                                y: inputRef[transitionKey][yKey],\n                                                scale: inputRef[transitionKey][scaleKey],\n                                                duration: inputRef[transitionKey][durationKey]\n                                            });\n                                        }\n\n                                        if (typeof inputRef[mapKey] !== 'undefined') {\n                                            overlay_item.setItem(mapKey, {\n                                                x: inputRef[mapKey][xKey],\n                                                y: inputRef[mapKey][yKey],\n                                                w: inputRef[mapKey][wKey],\n                                                h: inputRef[mapKey][hKey]\n                                            });\n                                        }\n\n                                        if (typeof inputRef[pointerKey] !== 'undefined') {\n                                            overlay_item.setItem(pointerKey, {\n                                                x: inputRef[pointerKey][xKey],\n                                                y: inputRef[pointerKey][yKey],\n                                                retain: inputRef[pointerKey][retainKey]\n                                            });\n                                        }\n\n                                        overlay_item.setItem(opacityKey, inputRef[opacityKey]);\n                                        overlay_item.setItem(visibleBeforeKey, inputRef[visibleBeforeKey]);\n                                        overlay_item.setItem(visibleAfterKey, inputRef[visibleAfterKey]);\n                                        overlay_item.setItem(autoReturnKey, inputRef[autoReturnKey]);\n                                        overlay_item.setItem(autoStartKey, inputRef[autoStartKey]);\n                                        overlay_item.setItem(allowReturnKey, inputRef[allowReturnKey]);\n                                        overlay_item.setItem(delayKey, inputRef[delayKey]);\n                                        overlay_item.setItem(timeoutKey, inputRef[timeoutKey]);\n\n                                        // 'active' and 'completed' attribute are for internal use only\n\n                                        newOverlays[oType].push(overlay_item);\n                                    }\n                                }\n                            }\n                        }\n                        book[overlaysKey][o] = newOverlays;\n                    }\n                }\n                this.books.push(book);\n            }\n\n            for (var w = 0; w < input[weeksKey].length; w++) {\n                var week = new Week();\n                week[wordEnKey] = input[weeksKey][w][wordEnKey];\n                week[wordNoKey] = input[weeksKey][w][wordNoKey];\n                week[bookIndexKey] = input[weeksKey][w][bookIndexKey];\n                for (var d = 0; d < input[weeksKey][w][daysKey].length; d++) {\n                    var day = new Day();\n                    for (var t = 0; t < input[weeksKey][w][daysKey][d][tasksKey].length; t++) {\n                        var task = new Task();\n                        task[typeKey] = input[weeksKey][w][daysKey][d][tasksKey][t][typeKey];\n                        task[recordAudioKey] = input[weeksKey][w][daysKey][d][tasksKey][t][recordAudioKey];\n                        task[playIntroKey] = input[weeksKey][w][daysKey][d][tasksKey][t][playIntroKey];\n\n                        // Defines a task specific structure for the layout, 'Image Focus' and file names / types etc.\n                        if (typeof input[weeksKey][w][daysKey][d][tasksKey][t][structureKey] !== 'undefined') {\n                            task[structureKey] = input[weeksKey][w][daysKey][d][tasksKey][t][structureKey];\n                        }\n\n                        day[tasksKey].push(task);\n                    }\n                    week[daysKey].push(day);\n                }\n                this.weeks.push(week);\n            }\n            return this;\n        }\n\n\n        /**\n         * Mark the specified Task as complete\n         *\n         * @param w\n         * @param d\n         * @param t\n         */\n        markTaskAsCompleted(w: number, d: number, t: number) {\n            this.weeks[w].days[d].tasks[t].completed = true;\n        }\n\n        /**\n         * Mark the specified Day as complete\n         *\n         * @param w\n         * @param d\n         */\n        markDayAsCompleted(w: number, d: number) {\n            this.weeks[w].days[d].completed = true;\n        }\n\n        /**\n         * Mark the specified Week as complete\n         *\n         * @param w\n         */\n        markWeekAsCompleted(w: number) {\n            this.weeks[w].completed = true;\n        }\n\n        /**\n         * Mark the specified Book as complete\n         *\n         * @param book_index\n         */\n        markBookAsCompleted(week: number) {\n            // Not all weeks have books\n            if (this.weeks[week].book_index !== -1) {\n                this.books[this.weeks[week].book_index].completed = true;\n            }\n        }\n\n    }\n\n\n    export class UsagePostData {\n        user: string;\n        word_en: string;\n        word_no: string;\n        week: number;\n        day: number;\n        task: number;\n        book: string;\n        completed_on: Date;\n        day_skipped: boolean;\n        accessed: Date;\n        duration: number;\n        audio_file: string;\n        usage_record: UsageStorage;\n\n        constructor(user: string, week_index: number, word_en: string, word_no: string, day_index: number,\n                    task_index: number, book_reference: string, completed_on: Date, skipped: boolean, accessed: Date,\n                    duration: number, audio_file: string, usage_record: UsageStorage) {\n            this.user = user;\n            this.word_en = word_en;\n            this.word_no = word_no;\n            this.week = week_index;\n            this.day = day_index;\n            this.task = task_index;\n            this.book = book_reference;\n            this.completed_on = completed_on;\n            this.day_skipped = skipped;\n            this.accessed = accessed;\n            this.duration = duration;\n            this.audio_file = audio_file;\n            this.usage_record = usage_record;\n        }\n\n        asFormDataWithAttachment(file: File, UUID: string): FormData {\n            var fd = new FormData();\n            fd.append('answersAsMap[557095].textAnswer', this.user);\n            fd.append('answersAsMap[558089].textAnswer', this.week);\n            fd.append('answersAsMap[558090].textAnswer', this.word_en);\n            fd.append('answersAsMap[558093].textAnswer', this.word_no);\n            fd.append('answersAsMap[558091].textAnswer', this.day);\n            fd.append('answersAsMap[558092].textAnswer', this.task);\n            fd.append('answersAsMap[559630].textAnswer', this.book);\n            if (this.completed_on !== null) {\n                fd.append('answersAsMap[560777].textAnswer', this.asNettskjemaDateFormat(this.completed_on));\n            } else {\n                fd.append('answersAsMap[560777].textAnswer', '');\n            }\n            fd.append('answersAsMap[559416].textAnswer', this.day_skipped);\n            fd.append('answersAsMap[557046].textAnswer', this.asNettskjemaDateFormat(this.accessed));\n            fd.append('answersAsMap[557047].textAnswer', this.duration);\n            if (file !== null) {\n                var blob = new Blob([file], { type: \"audio/x-m4a\"});\n                fd.append('answersAsMap[559418].attachment.upload', blob, this.audio_file);\n            }\n            fd.append('answersAsMap[576155].textAnswer', UUID);\n            return fd;\n        }\n\n        markAsSynced() {\n            this.usage_record.synced = true;\n        }\n\n        asNettskjemaDateFormat(d: Date): string {\n            return d.getDate() + '.' + (d.getMonth() + 1) + '.' + d.getFullYear() + ' ' +\n                d.getHours() + ':' + d.getMinutes();\n        }\n    }\n\n    export class UsageStorage implements Serializable<UsageStorage> {\n        accessed: Date;\n        duration: number;     // in seconds\n        audio_file: string;\n        synced: boolean;\n\n        constructor() {\n            this.duration = 0;\n            this.synced = false;\n            this.audio_file = '';\n        }\n\n        deserialise(input: any) {\n            let accessedKey = 'accessed', durationKey = 'duration', syncedKey = 'synced', audioKey = 'audio_file';\n            this.accessed = new Date(input[accessedKey]);\n            this.duration = input[durationKey];\n            this.audio_file = input[audioKey];\n            this.synced = input[syncedKey];\n            return this;\n        }\n\n    }\n\n    class BookStorage {\n        reference: string;\n        completed_on: Date;\n        usage: UsageStorage[];\n        currentUsage: UsageStorage;\n\n        constructor() {\n            this.completed_on = null;\n            this.usage = [];\n            this.currentUsage = null;\n        }\n\n        setItem(key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined' && value !== null) {\n                this[key] = value;\n            }\n        }\n    }\n\n    class TaskStorage {\n        completed_on: Date;\n        usage: UsageStorage[];\n        currentUsage: UsageStorage;\n\n        constructor() {\n            this.completed_on = null;\n            this.usage = [];\n            this.currentUsage = null;\n        }\n\n        setItem(key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined' && value !== null) {\n                this[key] = value;\n            }\n        }\n    }\n\n    class DayStorage {\n        completed_on: Date;\n        skipped: boolean;\n        tasks: TaskStorage[];\n        book_read: boolean;\n\n        constructor() {\n            this.completed_on = null;\n            this.skipped = false;\n            this.tasks = [];\n            this.book_read = false;\n        }\n\n        setItem(key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined' && value !== null) {\n                this[key] = value;\n            }\n        }\n    }\n\n    export class WeekStorage {\n        word_en: string;\n        word_no: string;\n        completed_on: Date;\n        book: BookStorage;\n        days: DayStorage[];\n\n        constructor() {\n            this.completed_on = null;\n            this.days = [];\n        }\n\n        setItem(key, value) {\n            if (this.hasOwnProperty(key) && typeof value !== 'undefined' && value !== null) {\n                this[key] = value;\n            }\n        }\n    }\n\n    export class Storage implements Serializable<Storage> {\n        username: string;\n        revision: number;\n        achievement: Achievement;\n        weeks: WeekStorage[];\n\n        constructor() {\n            this.weeks = [];\n            this.achievement = new Achievement();\n        }\n\n        /**\n         * Create tracking objects to match the current Setup\n         *\n         * @param setup\n         * @param username\n         */\n        initialise(setup: Setup, username: string) {\n            let commonKey = 'common', revisionKey = 'revision';\n            let weeksKey = 'weeks', wordEnKey = 'word_en', wordNoKey = 'word_no', bookKey = 'book', booksKey = 'books';\n            let daysKey = 'days', tasksKey = 'tasks', bookIndexKey = 'book_index', referenceKey = 'reference';\n\n            this.username = username;\n            this.revision = setup[commonKey][revisionKey];\n\n            setup[weeksKey].forEach((w) => {\n                var newWeek = new WeekStorage();\n                newWeek[wordEnKey] = w[wordEnKey];\n                newWeek[wordNoKey] = w[wordNoKey];\n                var bookIndex = w[bookIndexKey];\n                newWeek[bookKey] = new BookStorage();\n                if (bookIndex !== -1) {\n                    newWeek[bookKey][referenceKey] = setup[booksKey][bookIndex][referenceKey];\n                } else {\n                    newWeek[bookKey][referenceKey] = 'consolidation';\n                }\n                w[daysKey].forEach((d) => {\n                    var newDay = new DayStorage();\n                    d[tasksKey].forEach((t) => {\n                        var newTask = new TaskStorage();\n                        newDay[tasksKey].push(newTask);\n                    });\n                    newWeek[daysKey].push(newDay);\n                });\n                this.weeks.push(newWeek);\n            });\n            return this;\n        }\n\n\n        deserialise(input) {\n            let usageKey = 'usage', usernameKey = 'username', completedOnKey = 'completed_on', revisionKey = 'revision';\n            let achievementKey = 'achievement', avatarKey = 'avatar', taskIndexKey = 'taskIndex', dayIndexKey = 'dayIndex', weekIndexKey = 'weekIndex';\n            let weeksKey = 'weeks', wordEnKey = 'word_en', wordNoKey = 'word_no', bookKey = 'book', labelKey = 'label_en';\n            let daysKey = 'days', tasksKey = 'tasks', referenceKey = 'reference', bookReadKey = 'book_read';\n            let rewardsKey = 'rewards', rewardIdKey = 'id', rewardTypeKey = 'type', rewardXKey = 'xpos', rewardYKey = 'ypos';\n\n            this.username = input[usernameKey];\n            this.revision = input[revisionKey];\n\n            this.achievement = new Achievement();\n            this.achievement[avatarKey] = input[achievementKey][avatarKey];\n            this.achievement[taskIndexKey] =  input[achievementKey][taskIndexKey];\n            this.achievement[dayIndexKey] = input[achievementKey][dayIndexKey];\n            this.achievement[weekIndexKey] = input[achievementKey][weekIndexKey];\n\n            // Bug fix one time only..\n\n            if (this.achievement[weekIndexKey] === 0 && this.achievement[dayIndexKey] >= 2) {\n                this.achievement[dayIndexKey] = 1;\n            } else if (this.achievement[weekIndexKey] === 1 && this.achievement[dayIndexKey] >= 2) {\n                this.achievement[dayIndexKey] = 0;\n            }\n\n            //\n\n            for ( var r = 0; r < input[achievementKey][rewardsKey].length; r++) {\n                var reward = new Reward(input[achievementKey][rewardsKey][r][weekIndexKey],\n                    input[achievementKey][rewardsKey][r][dayIndexKey],\n                    input[achievementKey][rewardsKey][r][rewardTypeKey]);\n                reward[rewardXKey] = input[achievementKey][rewardsKey][r][rewardXKey];\n                reward[rewardYKey] = input[achievementKey][rewardsKey][r][rewardYKey];\n                this.achievement[rewardsKey].push(reward);\n            }\n\n            for (var w = 0; w < input[weeksKey].length; w++) {\n\n                var week = new WeekStorage();\n                if (input[weeksKey][w][completedOnKey] !== null) {\n                    week[completedOnKey] = new Date(input[weeksKey][w][completedOnKey]);\n                }\n                week[wordEnKey] = input[weeksKey][w][wordEnKey];\n                week[wordNoKey] = input[weeksKey][w][wordNoKey];\n\n                var book = new BookStorage();\n                if (input[weeksKey][w][bookKey][completedOnKey] !== null) {\n                    book[completedOnKey] = new Date(input[weeksKey][w][bookKey][completedOnKey]);\n                }\n                for (var bu = 0; bu < input[weeksKey][w][bookKey][usageKey].length; bu++) {\n                    book[usageKey].push(new UsageStorage()\n                        .deserialise(input[weeksKey][w][bookKey][usageKey][bu]));\n                }\n                book[referenceKey] = input[weeksKey][w][bookKey][referenceKey];\n                week[bookKey] = book;\n\n                for (var d = 0; d < input[weeksKey][w][daysKey].length; d++) {\n                    var day = new DayStorage();\n                    if (input[weeksKey][w][daysKey][d][completedOnKey] !== null) {\n                        day[completedOnKey] = new Date(input[weeksKey][w][daysKey][d][completedOnKey]);\n                    }\n                    day[bookReadKey] = input[weeksKey][w][daysKey][d][bookReadKey];\n\n                    for (var t = 0; t < input[weeksKey][w][daysKey][d][tasksKey].length; t++) {\n                        var task = new TaskStorage();\n                        if (input[weeksKey][w][daysKey][d][tasksKey][t][completedOnKey] !== null) {\n                            task[completedOnKey] = new Date(input[weeksKey][w][daysKey][d][tasksKey][t][completedOnKey]);\n                        }\n                        for (var u = 0; u < input[weeksKey][w][daysKey][d][tasksKey][t][usageKey].length; u++) {\n                            task[usageKey].push(new UsageStorage()\n                                .deserialise(input[weeksKey][w][daysKey][d][tasksKey][t][usageKey][u]));\n                        }\n                        day[tasksKey].push(task);\n                    }\n                    week[daysKey].push(day);\n                }\n                this.weeks.push(week);\n            }\n            return this;\n        }\n\n        /**\n         * get a list of all tracking files previously created\n         */\n        getTrackingFileList(): string[] {\n            var list: string[] = [];\n            this.weeks.forEach((week: WeekStorage) => {\n                week.days.forEach((day: DayStorage) => {\n                    day.tasks.forEach((task: TaskStorage) => {\n                        task.usage.forEach((usage: UsageStorage) => {\n                            if(usage.audio_file !== '') {\n                                list.push(usage.audio_file);\n                            }\n                        })\n                    })\n                })\n            });\n            return list;\n        }\n\n        /**\n         * Flattens the data structure appropriate for posting to Nettskjema\n         */\n        asPostableUsageData() {\n            var postArray = [];\n            for (var w = 0; w < this.weeks.length; w++) {\n                // Task usage\n                for (var d = 0; d < this.weeks[w].days.length; d++) {\n                    for (var t = 0; t < this.weeks[w].days[d].tasks.length; t++) {\n                        for (var u = 0; u < this.weeks[w].days[d].tasks[t].usage.length; u++) {\n                            if(!this.weeks[w].days[d].tasks[t].usage[u].synced) {\n                                postArray.push(new UsagePostData(\n                                    this.username, w, this.weeks[w].word_en, this.weeks[w].word_no, d, t, '-',\n                                    this.weeks[w].days[d].tasks[t].completed_on,\n                                    this.weeks[w].days[d].skipped,\n                                    this.weeks[w].days[d].tasks[t].usage[u].accessed,\n                                    this.weeks[w].days[d].tasks[t].usage[u].duration,\n                                    this.weeks[w].days[d].tasks[t].usage[u].audio_file,\n                                    this.weeks[w].days[d].tasks[t].usage[u]));\n                            }\n                        }\n                    }\n                }\n                // Book usage\n                for (var bu = 0; bu < this.weeks[w].book.usage.length; bu++) {\n                    if(!this.weeks[w].book.usage[bu].synced) {\n                        postArray.push(new UsagePostData(\n                            this.username, w, this.weeks[w].word_en, this.weeks[w].word_no, -1, -1, this.weeks[w].book.reference,\n                            this.weeks[w].book.completed_on, false,\n                            this.weeks[w].book.usage[bu].accessed,\n                            this.weeks[w].book.usage[bu].duration,\n                            this.weeks[w].book.usage[bu].audio_file,\n                            this.weeks[w].book.usage[bu]));\n                    }\n                }\n            }\n            return postArray;\n        }\n\n        /**\n         * Add a new Usage to a Task with access datestamp and duration\n         *\n         * @param w\n         * @param d\n         * @param t\n         * @param accessed\n         * @param duration\n         * @param audio_file\n         */\n        addTaskUsage(w: number, d: number, t: number, accessed: Date, duration: number, audio_file: string ) {\n            var usageStorage = new UsageStorage();\n            usageStorage.accessed = accessed;\n            usageStorage.duration = duration;\n            usageStorage.audio_file = audio_file;\n            this.weeks[w].days[d].tasks[t].usage.push(usageStorage);\n            this.weeks[w].days[d].tasks[t].currentUsage = usageStorage;\n        }\n\n        /**\n         * Add a new Usage to a Book with access datestamp and duration\n         *\n         * @param w\n         * @param accessed\n         * @param duration\n         * @param audio_file\n         */\n        addBookUsage(w: number, accessed: Date, duration: number, audio_file: string ) {\n            var usageStorage = new UsageStorage();\n            usageStorage.accessed = accessed;\n            usageStorage.duration = duration;\n            usageStorage.audio_file = audio_file;\n            this.weeks[w].book.usage.push(usageStorage);\n            this.weeks[w].book.currentUsage = usageStorage;\n        }\n\n        /**\n         * Mark the specified TaskStorage as complete\n         *\n         * @param w\n         * @param d\n         * @param t\n         */\n        markTaskAsCompleted(w: number, d: number, t: number) {\n            if (this.weeks[w].days[d].tasks[t].completed_on == null) {\n                this.weeks[w].days[d].tasks[t].completed_on = new Date();\n            }\n        }\n\n        /**\n         * Mark the specified Day as complete\n         *\n         * @param w\n         * @param d\n         */\n        markDayAsCompleted(w: number, d: number) {\n            if (this.weeks[w].days[d].completed_on == null) {\n                this.weeks[w].days[d].completed_on = new Date();\n            }\n        }\n\n        /**\n         * Mark the specified Week as complete\n         *\n         * @param w\n         */\n        markWeekAsCompleted(w: number) {\n            if (this.weeks[w].completed_on == null) {\n                this.weeks[w].completed_on = new Date();\n            }\n        }\n\n        /**\n         * Mark the specified BookStorage as complete\n         *\n         * @param w\n         */\n        markBookAsCompleted(w: number) {\n            if (this.weeks[w].book.completed_on == null) {\n                this.weeks[w].book.completed_on = new Date();\n            }\n        }\n\n        /**\n         * Mark the specified day as 'skipped'\n         *\n         * @param w\n         * @param d\n         */\n        markDayAsSkipped(w: number, d: number) {\n            this.weeks[w].days[d].skipped = true;\n        }\n\n        /**\n         * Mark all of the current set as 'synced' after a successful POST to Nettskjema\n         */\n        markAllAsSynced() {\n            for (var w = 0; w < this.weeks.length; w++) {\n                for (var d = 0; d < this.weeks[w].days.length; d++) {\n                    for (var t = 0; t < this.weeks[w].days[d].tasks.length; t++) {\n                        for (var u = 0; u < this.weeks[w].days[d].tasks[t].usage.length; u++) {\n                            this.weeks[w].days[d].tasks[t].usage[u].synced = true;\n                        }\n                    }\n                }\n                for (var bu = 0; bu < this.weeks[w].book.usage.length; bu++) {\n                    this.weeks[w].book.usage[bu].synced = true;\n                }\n            }\n        }\n\n\n    }\n\n}\n","/// <reference path=\"../_references.ts\"/>\n/// <reference path=\"../models/models.ts\"/>\n\nmodule MorfologiApp.Services {\n\n    import ITimeoutService = angular.ITimeoutService;\n    \"use strict\";\n    export interface ICordovaService {\n        /**\n         * get the device ID\n         * @return string\n         */\n        getUUID(): string;\n        setStorageFilename(name: string): void;\n        storageExists(setupModel: Setup, username: string, sFunc: () => void, eFunc: (error: {}) => void): void;\n        getStorage(sFunc: (success: Storage) => void, eFunc: (error: {}) => void): void;\n        writeStorage(storageModel: {}, sFunc: (success: {}) => void, eFunc: (error: {}) => void, backup: boolean): void;\n        writeStorageBackup(storageJson: {}, sFunc: (success: {}) => void, eFunc: (error: {}) => void): void;\n\n        getFreeDiskSpace(sFunc: (success: string) => void, eFunc: (error) => void): void;\n        clearStorage(): void;\n\n        startTrackingRecording(filename): void;\n        stopTrackingRecording(filename): void;\n        getTrackingAudioFile(filename: string, sFunc: (file: File) => void, eFunc: (message: string) => void): void;\n        deleteOldAudioFiles(mediaFiles: string[], trackingFiles: string[], lifespan: number): void;\n\n        captureVideo(sFunc: (videoData) => void, eFunc: (error) => void, filename: string): void;\n        // getVideoFile(source: string): Media;\n        checkFile(filename: string, sFunc: (videoData) => void, eFunc: (error) => void): void;\n\n        startCaptureAudio(taskFilename: string, sFunc: (videoData) => void, eFunc: (error) => void): void;\n        stopCaptureAudio(taskFilename: string, usageFilename: UsageStorage, newTrackingAudioFilename: string, sFunc: (videoData) => void, eFunc: (error) => void): void;\n\n        removeFile(path: string, filename: string, sFunc: (videoData) => void, eFunc: (error) => void);\n\n        getDeviceID(): string;\n        getAppVersion(callback: (version) => void): void;\n    }\n\n    export class CordovaService implements ICordovaService {\n        static $inject = ['$window', '$timeout'];\n\n        private storageFileName: string;\n        private audioFile: Media;\n        private day3AudioFile: Media;\n        private desktopBrowserTesting: boolean;\n        private desktopBrowserStorage: Storage;\n        private recordingAttempts: number = 0;\n        private recordingTimer: number;\n        private day3RecordingTimer: number;\n\n        constructor(private $window: ng.IWindowService, private $timeout: ITimeoutService) {\n\n            // If using a desktop browser, we will set up storage in memory for testing purposes\n            this.desktopBrowserTesting = !$window.cordova;\n            this.desktopBrowserStorage = null;\n            this.recordingTimer = 0;\n\n            if (!this.desktopBrowserTesting) {\n                this.createTrackingDirectory();\n            }\n        }\n\n        getUUID(): string {\n            return '';\n        }\n\n        setStorageFilename(name: string) {\n\n        }\n\n        /**\n         * Check for the existance of the Storage, if not initialise it and call writeStorage\n         *\n         * @param setupModel\n         * @param username\n         * @param sFunc\n         * @param eFunc\n         */\n        storageExists(setupModel, username, sFunc, eFunc): void {\n\n        }\n\n        getStorage(sFunc, eFunc): void {\n\n        }\n\n        writeStorage(storageModel, sFunc, eFunc, backup): void {\n\n        }\n\n        writeStorageBackup(jsonifiedStorage, sFunc, eFunc): void {\n\n        }\n\n        getFreeDiskSpace(sFunc, eFunc): void {\n\n        }\n\n        clearStorage(): void {\n\n        }\n\n        captureVideo(sFunc, eFunc, filename) {\n\n        }\n\n        startTrackingRecording(filename: string) {\n\n        }\n\n        stopTrackingRecording(filename: string): void {\n\n        }\n\n        // Retrieve a Tracking audio file for use as 'blob' to send to Nettskjema\n        getTrackingAudioFile(filename, sFunc, eFunc): void {\n\n        }\n\n        checkFile(filename: string, sFunc, eFunc) {\n\n        }\n\n        deleteOldAudioFiles(mediaList: string[], trackingList: string[], lifespan: number): void {\n\n        }\n\n        removeFile(path, filename, sFunc, eFunc): void {\n\n        }\n\n        createTrackingDirectory() {\n\n        }\n\n        startCaptureAudio(taskFilename: string, sFunc, eFunc) {\n\n        }\n\n        stopCaptureAudio(taskFilename: string, currentUsage: UsageStorage, newTrackingAudioFilename: string, sFunc, eFunc): void {\n\n        }\n\n        getDeviceID(): string {\n          return '';\n        }\n\n        getAppVersion(callback): void {\n\n        }\n\n    }\n\n}\n","/// <reference path=\"../_references.ts\"/>\n/// <reference path=\"../app.constants.ts\"/>\n/// <reference path=\"../models/models.ts\"/>\n/// <reference path=\"./cordovaService\"/>\n\nmodule MorfologiApp.Services {\n    \"use strict\";\n\n    export interface INettskjemaService {\n        setNettskjemaToken(token: string): void\n        postTrackingDataItem(item: UsagePostData, sFunc: (videoData) => void, eFunc: (error) => void): void;\n    }\n\n    export class NettskjemaService implements INettskjemaService {\n        static $inject = ['$http', 'CordovaService'];\n\n        private token: string;\n        private UUID: string;\n\n        constructor(private $http: ng.IHttpService, private cordovaService: ICordovaService) {\n            this.token = '';\n            this.UUID = cordovaService.getDeviceID();\n        }\n\n        setNettskjemaToken(token) {\n            this.token = token;\n        }\n\n\n        postTrackingDataItem(item: UsagePostData, sFunc, eFunc) {\n            var postItem = (item, audio_file) => {\n                var form_data = item.asFormDataWithAttachment(audio_file, this.UUID);\n\n                this.$http.post('https://nettskjema.uio.no/answer/deliver.json?formId=74195', form_data, {\n                    transformRequest: angular.identity,\n                    headers: {\n                        'Content-Type': undefined,\n                        'NETTSKJEMA_CSRF_PREVENTION': this.token\n                    }\n                }).then( (success) => {\n                    var data = success.data as string;\n                    if (success.status !== 200 || data.indexOf('success') === -1 || data.indexOf('failure') > -1) {\n                        eFunc(data);\n                    } else {\n                        item.markAsSynced();\n                        sFunc(data);\n                    }\n                }, () => {\n                    eFunc('Error sending usage data to server - no status response');\n                });\n            };\n\n            if (item.audio_file !== '') {\n                this.cordovaService.getTrackingAudioFile(item.audio_file, (audio_file) => {\n                    postItem(item, audio_file);\n                }, (error) => {\n                    console.log(error);\n                });\n            } else {\n                postItem(item, null);\n            }\n        }\n\n\n    }\n\n}\n","/// <reference path=\"../_references\"/>\n/// <reference path=\"../app.constants.ts\"/>\n/// <reference path=\"../models/models\"/>\n/// <reference path=\"./nettskjemaService\"/>\n/// <reference path=\"./cordovaService\"/>\n\n\nmodule MorfologiApp.Services {\n    import Moment = moment.Moment;\n    \"use strict\";\n\n    export interface IDataService {\n        /**\n         * Return the current status object\n         */\n        getStatus(): {};\n        /**\n         * Return the current settings object\n         */\n        getSettings(): {};\n        /**\n         * get the current language\n         * @return string\n         */\n        getLanguage(): string;\n        /**\n         * set the current language\n         * @param type The language code\n         */\n        setLanguage(type: string): void;\n        /**\n         * get the book list\n         * @return object\n         */\n        getBookList(sFunc: (bookList: Array<Book>) => void, eFunc: (error: {}) => void): void;\n        /**\n         * skip the current day if password is correct\n         * @param password\n         */\n        skipToday(password: string): void;\n        /**\n         * get the selected book\n         * @return Book\n         */\n        getBook(): Book;\n        /**\n         * get the task list\n         * @return Task[]\n         */\n        getTasks(): Task[];\n        /**\n         * get the week list\n         * @return Week[]\n         */\n        getWeeks(): Week[];\n        /**\n         * get the selected word\n         * @return word\n         */\n        getWord(): string;\n        /**\n         * for the current Consolidation day, get the word we need to use\n         */\n        getWordForConsolidationDay(): string;\n        /**\n         * get the selected week index\n         */\n        getWeek(): number;\n        /**\n         * get the selected day index\n         */\n        getDay(): number;\n        /**\n         * Get the current Task index\n         */\n        getTaskIndex(): number;\n        /**\n         * Get the current Task details\n         */\n        getTask(): Task;\n        /**\n         * Get the achievement status of the user\n         */\n        getAchievement(): Achievement;\n        /**\n         * select a week\n         * @param weekIndex The week index starting from 0\n         */\n        setWeek(weekIndex: number): void;\n        /**\n         * select a day\n         * @param dayIndex The day index starting from 0\n         */\n        setDay(dayIndex: number): void;\n        /**\n         * select a task\n         * @param taskIndex The task index starting from 0\n         */\n        setTask(taskIndex: number): void;\n        /**\n         * Begin reading the selected book\n         */\n        startBook(): void;\n        /**\n         * Return that the book was read on the selected day\n         */\n        getBookReadToday(): boolean;\n        /**\n         * Set that the book was read on the selected day\n         */\n        setBookReadToday(): void;\n        /**\n         * get the common resources object\n         * @return object\n         */\n        getCommon(): Common;\n\n        /**\n         * Return the Username property\n         */\n        getUsername(): string;\n        /**\n         * Set yhe Username property\n         */\n        setUsername(username: string): void;\n\n        /**\n         * Given an array, return a new array containing shuffled values\n         * @param array\n         */\n        shuffleArray(array: Array<any>): Array<any>;\n\n        /* Window resize */\n        getResizableDivSize(): {};\n        setResizableDivSize(any): void;\n\n        getDesktopBrowserTesting(): boolean;\n\n        /*  Callback setup that disables interaction with an invisible overlay\n            intended for use during task introduction audio */\n        setDisableInteractionCallback(callback: (setMe: boolean, showSpeaker: boolean) => void): void;\n        setInteractionEndActivateTaskCallback(callback: (setMe: boolean) => void): void;\n        setInteractionStartActivateTaskCallback(callback: (setMe: boolean) => void): void;\n        clearInteractionEndActivateTaskCallback(): void;\n        externalCallDisableInteractionCallback(setMe: boolean, showSpeaker: boolean): void;\n\n        /* Completion */\n        completeSelectedTask(): void;\n        completeSelectedDay(): void;\n        completeSelectedWeek(): void;\n        completeSelectedBook(): void;\n        completeCurrentUsageRecord(type: string): void;\n\n        setAvatar(avatarIndex: number): void;\n\n        /* Tracking (audio recording) */\n        startTrackingRecording(type: string): void;\n        getTaskUsage(): UsageStorage[];\n        automaticallySendData(): void;\n\n        getStorageMode(): string;\n        checkStorageAndSetup(sFunc: (return_to_home: boolean) => void): void;\n        writeStorage(sFunc: () => void, eFunc: () => void, backup: boolean): void;\n        removeStorage(): void;\n\n        playAudioIntroduction(delay: number): void;\n        setupAudioIntroduction(url: string): void;\n\n        /*  Video and Audio recording  */\n        captureVideo(sFunc: () => void, eFunc: () => void): void;\n        //getVideoMedia(source: string): Media;\n        checkFile(filename: string, sFunc: (videoData) => void, eFunc: (error) => void): void;\n        startCaptureAudio();\n        stopCaptureAudio(sFunc: (videoData) => void, eFunc: (error) => void);\n\n        getFormalStartDate(): Date;\n        getAppVersion(callback: (version) => void): void;\n        getShowCheats(): boolean;\n\n        getDeviceReady(): boolean;\n        setDeviceReady(setMe: boolean): void;\n    }\n\n    export class DataService implements IDataService {\n        static $inject = ['$http', '$window', '$timeout', 'CordovaService', 'NettskjemaService', 'MorfologiConstants'];\n\n        private currentLanguage: string = \"en\";\n        private username: string = '';\n\n        private status: {\n            online: boolean;\n            posting_data: boolean;\n            unsynced_data: boolean;\n            disk_space: number;\n        };\n\n        private settings: {\n            // Attempt to send data to Nettskjema automatically\n            automatic_send_data: boolean;\n\n            // Switch that determines 'sample' or 'formal' modes for data storage\n            storage_mode: string;\n        };\n\n        private selectedWeekIndex: number = 0;\n        private selectedBookIndex: number = 0;\n        private selectedDayIndex: number = 0;\n        private selectedTaskIndex: number = 0;\n\n        private setupModel: Setup;             // data structure representing entire Task set\n        private storageModel: Storage;  // structure representing Task tracked data set\n        private setupComplete: boolean = false;\n\n        private resizableDivSize: {};\n        private disableInteractionCallback: (setMe: boolean, showSpeaker: boolean) => void;   // callback function\n        private activateTaskStartCallback: () => void;   // callback function\n        private activateTaskEndCallback: () => void;   // callback function\n\n        private introductionAudio;\n        private desktopBrowserTesting;\n\n        private deviceReady: boolean;\n\n        constructor(private $http:ng.IHttpService, private $window: ng.IWindowService, private $timeout: ng.ITimeoutService,\n                    private nettsckjemaService: INettskjemaService, private cordovaService: ICordovaService, private constants: IMorfologiConstants) {\n\n            this.deviceReady = false;\n\n            this.status = {\n                online : navigator.onLine || false,\n                posting_data: false,\n                unsynced_data: false,\n                disk_space: NaN\n            };\n\n            // *** AUTO SENDING IS INTENDED TO BE SET TO true IN PRODUCTION\n            this.settings = {\n                automatic_send_data: true,\n                storage_mode: 'sample'\n            };\n\n            this.$window.addEventListener(\"offline\", () => {\n                this.status.online = false;\n            }, false);\n\n            this.$window.addEventListener(\"online\", () => {\n                if (!this.status.online) {\n                    this.status.online = true;\n                    this.automaticallySendData();\n                }\n            }, false);\n\n            this.desktopBrowserTesting = !$window.cordova;\n            this.activateTaskStartCallback = null;\n            this.activateTaskEndCallback = null;\n\n        }\n\n        getDeviceReady() {\n            return this.deviceReady;\n        }\n\n        setDeviceReady(setMe: boolean) {\n            this.deviceReady = setMe;\n        }\n\n        getFormalStartDate(): Date {\n            return this.constants.constants['FORMAL_TEST_DATE'];\n        }\n\n        getShowCheats(): boolean {\n            return this.constants.constants['SHOW_CHEATS'];\n        }\n\n        getStatus(): {} {\n            return this.status;\n        }\n\n        getDesktopBrowserTesting(): boolean {\n            return this.desktopBrowserTesting;\n        }\n\n\n        // Takes the 'achievement' to the next day, but marks day as skipped.\n        // The day to skip is considered as the avatar's current location\n        skipToday(password: string) {\n            let passKey = 'SKIP_DAY_PASSWORD';\n            if (this.constants.constants[passKey] === password) {\n                var uncompletedWeekIndex = this.storageModel.achievement.weekIndex + 1;\n                var uncompletedDayIndex = this.storageModel.achievement.dayIndex + 1;\n                this.storageModel.markDayAsSkipped(uncompletedWeekIndex, uncompletedDayIndex);\n                if (uncompletedDayIndex === 2) {\n                    this.setupModel.markWeekAsCompleted(uncompletedWeekIndex);\n                    this.storageModel.markWeekAsCompleted(uncompletedWeekIndex);\n                    this.storageModel.achievement.completeWeek(uncompletedWeekIndex);\n                } else {\n                    this.storageModel.achievement.completeDay(uncompletedWeekIndex, uncompletedDayIndex);\n                }\n            }\n\n        }\n\n        getSettings(): {} {\n            return this.settings;\n        }\n\n        automaticallySendData() {\n            if (this.settings.automatic_send_data) {\n                this.attemptToPostUsageData();\n            }\n        }\n\n        // Make an attempt to post any new usage data to Nettskjema\n        attemptToPostUsageData(): void {\n            // If we receive a token, and are running on tablet, it is safe to assume we can then post to Nettskjema\n            if (this.desktopBrowserTesting) {\n                return;\n            }\n            this.$http.get('http://nettskjema.uio.no/ping.html')\n                .then((success) => {\n                    console.log('Connected to Nettskjema');\n                    this.nettsckjemaService.setNettskjemaToken(success.data.toString());\n                    if (this.status.unsynced_data && !this.status.posting_data) {\n                        this.postUsageData();\n                    }\n                }, (error) => {\n                    this.status.online = false;\n                    console.log('Unable to connect to Nettskjema');\n                })\n        }\n\n        // Load in the setup file to manage tasks and picturebooks\n        requestSetupModel(successCallback) {\n            let setupPathKey = 'SETUP_FILE_PATH', setupFilenameKey = 'SETUP_FILE_NAME', setupRevisionKey = 'RELEASE_NUMBER';\n            return this.$http.get(this.constants.constants[setupPathKey] + this.constants.constants[setupFilenameKey] +\n                    this.constants.constants[setupRevisionKey] + '.json')\n                .then((res) => {\n                    this.setupModel = new Setup().deserialise(res.data);\n                    if(successCallback !== null) {\n                        successCallback(res.data);\n                    }\n                });\n        }\n\n        // Load in the current saved status from local tablet storage\n        requestSavedState(sFunc) {\n            this.cordovaService.storageExists(this.setupModel, this.username, () => {\n                this.cordovaService.getStorage((model) => {\n                    this.storageModel = model;\n                    if (sFunc !== null) {\n                        sFunc(model);\n                    }\n                }, (error) => {\n                    // If there was a terminal error reading from the storage file, try to create a new one\n                    if (typeof error !== 'undefined' && error !== null && error === 'create_new_storage') {\n                        this.cordovaService.writeStorage(new Storage().initialise(this.setupModel, this.username), () => {\n                            console.log('Created fresh storage after read fail');\n                            this.cordovaService.getStorage((model) => {\n                                this.storageModel = model;\n                                if (sFunc !== null) {\n                                    sFunc(model);\n                                }\n                            }, null);\n                        }, null, false);\n                    }\n                    console.log('Error getting storage');\n                })\n            }, () => {\n                console.log('Error checking storage exists');\n            })\n        }\n\n        getStorageMode(): string {\n            return this.settings.storage_mode;\n        }\n\n        // If before the 'formal date' set in Constants we use 'sample' storage. After this date, we use 'formal' storage\n        checkStorageAndSetup(successCallback) {\n            console.log('Checking storage...');\n            let storageFilenameKey = 'STORAGE_FILE_NAME', revisionKey = 'RELEASE_NUMBER';\n            let formalNameKey = 'FORMAL_TEST_NAME', sampleNameKey = 'SAMPLE_TEST_NAME', formalDateKey = 'FORMAL_TEST_DATE';\n            var formalDate: Date = this.constants.constants[formalDateKey];\n            var dateNow = new Date();\n            var newMode = this.constants.constants[sampleNameKey];\n\n            if (dateNow.getTime() > formalDate.getTime()) {\n                newMode = this.constants.constants[formalNameKey];\n            }\n            console.log('Using storage: ' + newMode);\n\n\n            // Called from a 'resume' and storage state has changed, or this is the first launch\n            if ((this.setupComplete && this.settings.storage_mode !== newMode) || !this.setupComplete) {\n                this.setupComplete = false;\n                this.settings.storage_mode = newMode;\n\n                // If switching from 'sample' to 'formal' we must copy the same identifier\n                var identifier = '';\n                if (typeof this.storageModel !== 'undefined' && this.storageModel !== null) {\n                    identifier = this.storageModel.username;\n                }\n                var filename = this.constants.constants[storageFilenameKey] + '_' +\n                    this.constants.constants[revisionKey] + '_' + newMode + '.json';\n                this.cordovaService.setStorageFilename(filename);\n                this.setup((return_to_home) => {\n                    // Due to teachers entering student names during training period (this is not allowed)\n                    // we are not copying the identifier across. Instead it must be asked for again.\n                    /*\n                    if (identifier !== '') {\n                        this.storageModel.username = identifier;\n                    }\n                    */\n                    successCallback(return_to_home);\n                });\n            } else {\n                successCallback(false);\n            }\n        }\n\n        // Save the current status to local tablet storage\n        writeStorage(sFunc, eFunc, backup) {\n            if (this.deviceReady) {\n                this.cordovaService.writeStorage(this.storageModel, () => {\n                    console.log('Saved to storage file');\n                    if (sFunc !== null) {\n                        sFunc();\n                    }\n                }, () => {\n                    console.log('Error writing storage');\n                }, backup);\n            } else {\n                eFunc('Device not ready');\n            }\n        }\n\n        setup(successCallback) {\n            if (!this.setupComplete) {\n                console.log('Loading setup...');\n                this.requestSetupModel(() => {\n                    console.log('Loading storage...');\n                    this.requestSavedState(() => {\n                        console.log('Marking completions...');\n                        this.markSetupCompletions();\n                        // console.log('Deleting old recordings...');\n                       // this.deleteOldRecordings();\n                        this.setupComplete = true;\n                        if(successCallback !== null) {\n                            successCallback(true);\n                        }\n                    })\n                })\n            } else if (successCallback !== null) {\n                successCallback(false);\n            }\n        }\n\n        /**\n         * For each setup task, if completed in the storage, mark them in memory\n         */\n        markSetupCompletions() {\n            this.storageModel.weeks.forEach((week, weekIndex) => {\n                if (week.completed_on !== null) {\n                    this.setupModel.weeks[weekIndex].completed = true;\n                    //this.storageModel.achievement.weekIndex = weekIndex;\n                }\n                week.days.forEach((day, dayIndex) => {\n                    if (day.completed_on !== null) {\n                        this.setupModel.weeks[weekIndex].days[dayIndex].completed = true;\n                        //this.storageModel.achievement.dayIndex = dayIndex;\n                    }\n                    day.tasks.forEach((task, taskIndex) => {\n                        if (task.completed_on !== null) {\n                            this.setupModel.weeks[weekIndex].days[dayIndex].tasks[taskIndex].completed = true;\n                            //this.storageModel.achievement.taskIndex = taskIndex;\n                        }\n                    })\n                })\n            })\n        }\n\n        setAvatar(avatarIndex: number): void {\n            this.storageModel.achievement.avatar = avatarIndex;\n        }\n\n        getUsername(): string {\n            return this.storageModel.username;\n        }\n\n        setUsername(username: string): void {\n            this.storageModel.username = username;\n        }\n\n        getResizableDivSize() {\n            return this.resizableDivSize;\n        }\n        setResizableDivSize(newSize: any): void {\n            this.resizableDivSize = newSize;\n        }\n\n        getLanguage(){\n            return this.currentLanguage;\n        };\n        setLanguage(type){\n            this.currentLanguage = type;\n        };\n\n\n        // Books\n\n        getBookList(successCallback, errorCallback) {\n            let booklistKey = 'books';\n            if (typeof this.setupModel === 'undefined') {\n                this.requestSetupModel(function(data) {\n                    successCallback(data[booklistKey]);\n                })\n            } else {\n                successCallback(this.setupModel[booklistKey]);\n            }\n        }\n\n        getBook(): Book {\n            return this.setupModel.books[this.setupModel.weeks[this.selectedWeekIndex].book_index];\n        }\n\n        // Tasks\n\n        getWeeks() {\n            let weeksKey = 'weeks';\n            return this.setupModel[weeksKey];\n        }\n\n        getWeek(): number {\n            return this.selectedWeekIndex;\n        }\n\n        getDay(): number {\n            return this.selectedDayIndex;\n        }\n\n        getTaskIndex(): number {\n            return this.selectedTaskIndex;\n        }\n        getTasks(): Task[] {\n            return this.setupModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex]\n                .tasks;\n        }\n        getTask(): Task {\n            return this.setupModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex]\n                .tasks[this.selectedTaskIndex];\n        }\n        getWord(): string {\n            let wordKey = 'word_en';\n            return this.setupModel.weeks[this.selectedWeekIndex][wordKey];\n        }\n        getWordForConsolidationDay(): string {\n            let wordKey = 'word_en', dayKey = 'days', tasksKey = 'tasks', structureKey = 'structure', weeksKey = 'weeks', weekKey = 'week';\n            var weekIndex = this.setupModel[weeksKey][this.selectedWeekIndex][dayKey][this.selectedDayIndex][tasksKey][this.selectedTaskIndex][structureKey][weekKey];\n            return this.setupModel.weeks[weekIndex][wordKey];\n        }\n\n        getAchievement(): Achievement {\n            return this.storageModel.achievement;\n        }\n\n        setWeek(weekIndex) {\n            this.selectedWeekIndex = weekIndex;\n            this.selectedBookIndex = this.setupModel.weeks[weekIndex].book_index;\n        }\n\n        setDay(dateIndex) {\n            this.selectedDayIndex = dateIndex;\n        }\n\n        startBook() {\n            this.storageModel.addBookUsage(this.selectedWeekIndex, new Date(), 0, '');\n            this.status.unsynced_data = true;\n            if (this.setupModel.books[this.selectedBookIndex].record_audio) {\n                this.startTrackingRecording('book');\n            }\n        }\n\n        setTask(taskIndex) {\n            this.activateTaskStartCallback = null;\n            this.activateTaskEndCallback = null;\n            this.selectedTaskIndex = taskIndex;\n            this.storageModel.addTaskUsage(this.selectedWeekIndex, this.selectedDayIndex, this.selectedTaskIndex, new Date(), 0, '');\n            this.status.unsynced_data = true;\n            if (this.setupModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].record_audio) {\n                this.startTrackingRecording('task');\n            }\n        }\n\n        getBookReadToday(): boolean {\n            return this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].book_read;\n        }\n\n        setBookReadToday(): void {\n            this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].book_read = true;\n        }\n\n        // Do not set record_audio for Day 3 Task 5 or 6, as those tasks record the child's voice instead\n        completeCurrentUsageRecord(type: string): void {\n            var currentUsage;\n\n            // Complete recording if running\n            if (type === 'task') {\n                currentUsage = this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].currentUsage;\n                if (currentUsage !== null) {\n                    var startedOn:Moment = moment(currentUsage.accessed);\n                    var finishedOn:Moment = moment();\n                    currentUsage.duration = moment.duration(finishedOn.diff(startedOn)).asSeconds();\n                    if (this.setupModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].record_audio) {\n                        this.cordovaService.stopTrackingRecording(currentUsage.audio_file);\n                    }\n                    this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].currentUsage = null;\n                }\n            } else if (type === 'book') {\n                currentUsage = this.storageModel.weeks[this.selectedWeekIndex].book.currentUsage;\n                if (currentUsage !== null) {\n                    var startedOn:Moment = moment(currentUsage.accessed);\n                    var finishedOn:Moment = moment();\n                    currentUsage.duration = moment.duration(finishedOn.diff(startedOn)).asSeconds();\n                    if (this.setupModel.books[this.selectedBookIndex].record_audio) {\n                        this.cordovaService.stopTrackingRecording(currentUsage.audio_file);\n                    }\n                    this.storageModel.weeks[this.selectedWeekIndex].book.currentUsage = null;\n                }\n            }\n        }\n\n        completeSelectedBook(): void {\n            var book = this.selectedBookIndex, week = this.selectedWeekIndex;\n            this.setBookReadToday();\n\n            // save state to Setup and Storage\n            if (typeof this.setupModel.books[book] !== 'undefined' && !this.setupModel.books[book].completed) {\n                this.setupModel.markBookAsCompleted(week);\n                this.storageModel.markBookAsCompleted(week);\n            }\n\n            // Complete the outstanding usage record\n            this.completeCurrentUsageRecord('book');\n        }\n\n        completeSelectedTask(): void {\n            var week = this.selectedWeekIndex, day = this.selectedDayIndex, task = this.selectedTaskIndex;\n\n            // save state to Setup and Storage\n            this.setupModel.markTaskAsCompleted(week, day, task);\n            this.storageModel.markTaskAsCompleted(week, day, task);\n            this.storageModel.achievement.completeTask(week, day, task);\n        }\n\n        completeSelectedDay(): void {\n            var week = this.selectedWeekIndex, day = this.selectedDayIndex;\n\n            if (this.setupModel.weeks[this.selectedWeekIndex].book_index !== -1) {\n                this.setupModel.markBookAsCompleted(week);\n                this.storageModel.markBookAsCompleted(week);\n            }\n            this.setupModel.markDayAsCompleted(week, day);\n            this.storageModel.markDayAsCompleted(week, day);\n            this.storageModel.achievement.completeDay(week, day);\n\n            if (day === 2) {\n                this.completeSelectedWeek();\n            }\n        }\n\n        completeSelectedWeek(): void {\n            this.setupModel.markWeekAsCompleted(this.selectedWeekIndex);\n            this.storageModel.markWeekAsCompleted(this.selectedWeekIndex);\n            this.storageModel.achievement.completeWeek(this.selectedWeekIndex);\n        }\n\n        /*\n        getUUID(): string {\n            return this.cordovaService.getUUID();\n        }\n        */\n\n        getCommon(): Common {\n            let commonKey = 'common';\n            return this.setupModel[commonKey];\n        }\n\n        removeStorage(): void {\n            this.cordovaService.clearStorage();\n        }\n\n        /*\n        getVideoMedia(source): Media {\n            return this.cordovaService.getVideoFile(source);\n        }\n        */\n\n        // Audio recording for tracking purposes\n        // Do not set record_audio for Day 3 Task 5 or 6, as those tasks record the child's voice instead\n        startTrackingRecording(type: string): void {\n            if (this.desktopBrowserTesting) {\n                return;\n            }\n            var currentUsage;\n\n            // Check disk space first\n            if (this.status.disk_space < 100 ) {  // Mb\n                return;\n            }  else if (type === 'task') {\n                currentUsage = this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].currentUsage;\n                var d = currentUsage.accessed;\n                currentUsage.audio_file = 'w' + (this.selectedWeekIndex+1) + '_d' + (this.selectedDayIndex+1) +\n                    '_t' + (this.selectedTaskIndex+1) + '-' + d.getFullYear() + '_' + (d.getMonth() + 1) + '_' + d.getDate() +\n                    '-' + d.getHours() + '_' + d.getMinutes() + '_' + d.getSeconds() + '.m4a';\n            } else if (type === 'book') {\n                currentUsage = this.storageModel.weeks[this.selectedWeekIndex].book.currentUsage;\n                var d = currentUsage.accessed;\n                currentUsage.audio_file = 'w' + (this.selectedWeekIndex+1) + '_b' + (this.selectedBookIndex+1) +\n                    '-' + d.getFullYear() + '_' + (d.getMonth() + 1) + '_' + d.getDate() +\n                    '-' + d.getHours() + '_' + d.getMinutes() + '_' + d.getSeconds() + '.m4a';\n            }\n            this.cordovaService.startTrackingRecording(currentUsage.audio_file);\n        }\n\n        getTaskUsage(): UsageStorage[] {\n            return this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex]\n                .tasks[this.selectedTaskIndex].usage;\n        }\n\n        postUsageData(): void {\n            this.status.posting_data = true;\n            var postData = this.storageModel.asPostableUsageData();\n\n            var postRemainingData = () => {\n                if (postData.length > 0) {\n                    this.nettsckjemaService.postTrackingDataItem(postData.pop(), (data) => {\n                        console.log('Successful Nettskjema submission: ' + data);\n                        postRemainingData();\n                    }, (data) => {\n                        console.log('Error during Nettskjema submission: ' + data);\n                    });\n                } else {\n                    this.status.posting_data = false;\n                    this.status.unsynced_data = false;\n                }\n            };\n            postRemainingData();\n        }\n\n        setupAudioIntroduction(url: string): void {\n            if (typeof this.introductionAudio !== 'undefined') {\n                this.introductionAudio.pause();\n            }\n            this.$timeout(() => {\n                this.introductionAudio = new Audio(url);\n                this.introductionAudio.load();\n                this.introductionAudio.addEventListener('ended', () => {\n                    this.disableInteractionCallback(false, true);\n                    if (this.activateTaskEndCallback !== null) {\n                        this.activateTaskEndCallback();\n                    }\n                })\n            }, 0);\n        }\n\n        playAudioIntroduction(delay: number): void {\n            if (this.desktopBrowserTesting) {\n                delay = 10;\n            }\n            if (delay > 0) {\n                this.disableInteractionCallback(true, true);\n            }\n            this.$timeout(() => {\n                if (this.activateTaskStartCallback !== null) {\n                    this.activateTaskStartCallback();\n                }\n                try {\n                    this.introductionAudio.play();\n                } catch (error) {     // In case no source is found, enable interaction\n                    console.log('No introduction audio source found');\n                    this.disableInteractionCallback(false, true);\n                    if (this.activateTaskEndCallback !== null) {\n                        this.activateTaskEndCallback();\n                    }\n                }\n            }, delay);\n        }\n\n        deleteOldRecordings(): void {\n            var mediaFiles = [];\n            var weekTotal = this.setupModel.weeks.length;\n            var w = 0;\n            while(w < weekTotal) {\n                // Each week has thre 'user made' recordings - two audio and one video\n                mediaFiles.push('week' + (w+1) + '-task6-' + this.constants.constants['FORMAL_TEST_NAME'] + '-audio.m4a');\n                mediaFiles.push('week' + (w+1) + '-task5-' + this.constants.constants['FORMAL_TEST_NAME'] + '-audio.m4a');\n                mediaFiles.push('week' + w + '-' + this.constants.constants['FORMAL_TEST_NAME'] + '-video.MOV');\n            }\n            this.cordovaService.deleteOldAudioFiles(mediaFiles, this.storageModel.getTrackingFileList(), this.constants.constants['RECORDING_LIFESPAN']);\n        }\n\n        setDisableInteractionCallback(callback): void {\n            this.disableInteractionCallback = callback;\n        }\n\n        setInteractionEndActivateTaskCallback(callback): void {\n            this.activateTaskEndCallback = callback;\n        }\n        clearInteractionEndActivateTaskCallback(): void {\n            this.activateTaskEndCallback = null;\n        }\n        setInteractionStartActivateTaskCallback(callback): void {\n            this.activateTaskStartCallback = callback;\n        }\n        externalCallDisableInteractionCallback(setMe: boolean, showSpeaker: boolean): void {\n            if (this.disableInteractionCallback !== null) {\n                this.disableInteractionCallback(setMe, showSpeaker);\n            }\n        }\n\n        shuffleArray(array: Array<any>) {\n            var newArray = angular.copy(array);\n            var currentIndex = newArray.length, temporaryValue, randomIndex;\n\n            // While there remain elements to shuffle...\n            while (0 !== currentIndex) {\n\n                // Pick a remaining element...\n                randomIndex = Math.floor(Math.random() * currentIndex);\n                currentIndex -= 1;\n\n                // And swap it with the current element.\n                temporaryValue = newArray[currentIndex];\n                newArray[currentIndex] = newArray[randomIndex];\n                newArray[randomIndex] = temporaryValue;\n            }\n\n            return newArray;\n        }\n\n        captureVideo(sFunc, eFunc) {\n            var filename = 'week' + this.selectedWeekIndex + '-' + this.settings.storage_mode + '-video.MOV';\n            this.cordovaService.captureVideo(sFunc, eFunc, filename);\n        }\n\n        // Day 3 task 5 & 6 audio recording of the child's voice\n        startCaptureAudio() {\n            var taskFilename = 'week' + (this.selectedWeekIndex+1) + '-task' + (this.selectedTaskIndex+1) + '-' + this.settings.storage_mode + '-audio.m4a';\n            this.cordovaService.startCaptureAudio(taskFilename, () => {\n                console.log('Begin recording voice..');\n            }, (error) => {\n                console.log('Error recording voice..' + error);\n            })\n        }\n\n        // For Day 3 Task 5 & 6 a new recording always overwrites previous for this week, but one audio for each UsageStorage is copied.\n        stopCaptureAudio(sFunc, eFunc) {\n            var currentUsage = this.storageModel.weeks[this.selectedWeekIndex].days[this.selectedDayIndex].tasks[this.selectedTaskIndex].currentUsage;\n            var d = currentUsage.accessed;\n            var newTrackingAudioFilename = 'w' + (this.selectedWeekIndex+1) + '_d' + (this.selectedDayIndex+1) +\n                '_t' + (this.selectedTaskIndex+1) + '-' + d.getFullYear() + '_' + (d.getMonth() + 1) + '_' + d.getDate() +\n                '-' + d.getHours() + '_' + d.getMinutes() + '_' + d.getSeconds() + '.m4a';\n            var taskFilename = 'week' + (this.selectedWeekIndex+1) + '-task' + (this.selectedTaskIndex+1) + '-' + this.settings.storage_mode + '-audio.m4a';\n            this.cordovaService.stopCaptureAudio(taskFilename, currentUsage, newTrackingAudioFilename, (success) => {\n                console.log('Finished recording voice..');\n                sFunc(success);\n            }, (error) => {\n                eFunc(error);\n            })\n        }\n\n        checkFile(filename, sFunc, eFunc) {\n            if (this.desktopBrowserTesting) {\n                eFunc('');\n            } else {\n                this.cordovaService.checkFile(filename, sFunc, eFunc);\n            }\n        }\n\n        getAppVersion(callback): void {\n            this.cordovaService.getAppVersion(callback);\n        }\n\n    }\n\n}\n","/// <reference path=\"../../_references.ts\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nmodule MorfologiApp.Directives {\n    import DataService = MorfologiApp.Services.DataService;\n    import IWindowService = angular.IWindowService;\n    \"use strict\";\n\n    // Custom scope interface must include any vars defined on the scope\n    export interface IISPFeatureDirectiveScope extends ng.IScope {\n        getWindowDimensions(): {};\n    }\n\n    class ResizeController {\n        static $inject: string[] = ['DataService', '$window'];\n        constructor(public dataService: DataService, public $window: IWindowService) {\n        };\n    }\n\n    function linker(scope: IISPFeatureDirectiveScope, element: ng.IAugmentedJQuery, ctrl: ResizeController) {\n        var w = angular.element(ctrl.$window);\n        scope.getWindowDimensions = function () {\n            return {\n                'VIEW_HEIGHT': element.prop('offsetHeight'),\n                'VIEW_WIDTH': element.prop('offsetWidth')\n            };\n        };\n        scope.$watch(scope.getWindowDimensions, function (newValue) {\n            ctrl.dataService.setResizableDivSize(newValue);\n        }, true);\n\n        w.bind('resize', function () {\n            scope.$apply();\n        });\n\n        ctrl.dataService.setResizableDivSize(scope.getWindowDimensions());\n    }\n\n    export function ispResize(): ng.IDirective {\n        return {\n            restrict: 'A',\n            controller: ResizeController,\n            link: linker\n        };\n    }\n}\n","/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nmodule MorfologiApp.Controllers {\n    \"use strict\";\n    import IScope = angular.IScope;\n    import ITimeoutService = angular.ITimeoutService;\n    import IDataService = MorfologiApp.Services.DataService;\n\n    export class Task1Controller {\n        static $inject = ['$scope', '$timeout', 'DataService'];\n\n        private word: string;\n        private task: Task;\n        private showingPanel: string;\n        private showForwardArrow: boolean;\n        private playingSequence: boolean;\n        private itemA;\n        private itemB;\n        private round: number;\n        private repeats: number;\n        private opacity: number;\n\n        constructor(private $scope: IScope, private $timeout: ITimeoutService, private dataService: IDataService) {\n            this.word = $scope['wpC'].word;\n            this.task = dataService.getTask();\n            this.showingPanel = 'choice';\n            this.showForwardArrow = false;\n            this.playingSequence = false;\n            this.round = 0;\n            this.repeats = 1;\n            this.opacity = 0;\n\n            this.itemA = { file: '', audio: '', correct: true, highlight: false };\n            this.itemB = { file: '', audio: '', correct: false, highlight: false };\n\n            this.randomiseItems();\n            $timeout(() => {\n                this.opacity = 1;\n            }, 1000);\n\n            // This should be run at the end of the constructor\n            var handle = this;\n            dataService.setInteractionEndActivateTaskCallback(() => {\n                this.activateTask(handle);\n            });\n            dataService.setupAudioIntroduction('content/' + this.word + '/articulation/day2/instruction.mp3');\n            dataService.playAudioIntroduction(3000);\n        }\n\n        randomiseItems() {\n            var firstItem = Math.random() > 0.5 ? 'itemA' : 'itemB';\n            var secondItem = firstItem === 'itemA' ? 'itemB' : 'itemA';\n            var firstImage = Math.random() > 0.5 ? 'correct.jpg' : 'incorrect.jpg';\n            var secondImage = firstImage === 'correct.jpg' ? 'incorrect.jpg' : 'correct.jpg';\n            var firstAudio = firstImage === 'correct.jpg' ? 'correct.mp3' : 'incorrect.mp3';\n            var secondAudio = firstImage === 'correct.jpg' ? 'incorrect.mp3' : 'correct.mp3';\n            var firstCorrect = firstAudio === 'correct.mp3';\n            var secondCorrect = !firstCorrect;\n\n            this[firstItem] = {\n                file: 'content/' + this.word + '/articulation/day2/' + firstImage,\n                audio: 'content/' + this.word + '/articulation/day2/' + firstAudio,\n                correct: firstCorrect,\n                highlight: false\n            };\n            this[secondItem] = {\n                file: 'content/' + this.word + '/articulation/day2/' + secondImage,\n                audio: 'content/' + this.word + '/articulation/day2/' + secondAudio,\n                correct: secondCorrect,\n                highlight: false\n            };\n        }\n\n        activateTask(handle) {\n            this.dataService.externalCallDisableInteractionCallback(true, false);\n            this.playingSequence = true;\n            this.opacity = 1;\n            handle.$timeout(() => {\n                var audio = new Audio(handle.itemA['audio']);\n                audio.play();\n                handle.itemA['highlight'] = true;\n                handle.$timeout(() => {\n                    handle.itemA['highlight'] = false;\n                }, 1000);\n                handle.$timeout(() => {\n                    var audio = new Audio(handle.itemB['audio']);\n                    audio.play();\n                    handle.itemB['highlight'] = true;\n                    handle.$timeout(() => {\n                        handle.itemB['highlight'] = false;\n                        this.playingSequence = false;\n                        this.dataService.externalCallDisableInteractionCallback(false, false);\n                    }, 1000);\n                }, 2000)\n            }, 1500);\n        }\n\n        clickEarA() {\n            var audio = new Audio(this.itemA['audio']);\n            audio.play();\n        }\n\n        clickEarB() {\n            var audio = new Audio(this.itemB['audio']);\n            audio.play();\n        }\n\n        clickItemA() {\n            this.itemA.highlight = true;\n            this.itemB.highlight = false;\n            if (this.itemA['correct']) {\n                if (this.round === this.repeats) {\n                    this.$scope['wpC'].taskFinished();\n                } else {\n                    this.$scope['wpC'].setAndShowOnetimeInternalForwardArrowCallback( () => {\n                        this.clickForwardArrow();\n                    })\n                }\n            } else {\n                var rand = Math.floor(Math.random() * 4);\n                var audio = new Audio('content/common/audio/tryagain' + rand + '.mp3');\n                audio.play();\n                this.$timeout(() => {\n                    this.itemA.highlight = false;\n                }, 2000)\n            }\n        }\n\n        clickItemB() {\n            this.itemB.highlight = true;\n            this.itemA.highlight = false;\n            if (this.itemB['correct']) {\n                if (this.round === this.repeats) {\n                    this.$scope['wpC'].taskFinished();\n                } else {\n                    this.$scope['wpC'].setAndShowOnetimeInternalForwardArrowCallback( () => {\n                        this.clickForwardArrow();\n                    })\n                }\n            } else {\n                var rand = Math.floor(Math.random() * 4);\n                var audio = new Audio('content/common/audio/tryagain' + rand + '.mp3');\n                audio.play();\n                this.$timeout(() => {\n                    this.itemB.highlight = false;\n                }, 2000)\n            }\n        }\n\n        clickForwardArrow() {\n            this.opacity = 0;\n            this.round++;\n            this.itemA.highlight = false;\n            this.itemB.highlight = false;\n            this.showForwardArrow = false;\n            this.$timeout(() => {\n                this.randomiseItems();\n                this.activateTask(this);\n            }, 1000);\n        }\n\n\n    }\n}\n","/// <reference path=\"_references\"/>\n/// <reference path=\"./app.config.ts\"/>\n/// <reference path=\"./app.constants.ts\"/>\n/// <reference path=\"./app.run.ts\"/>\n/// <reference path=\"components/resizewindow/resize\"/>\n/// <reference path=\"tasks/task1/controller\"/>\n\n/**\n * Morfologi core application module.\n * @preferred\n */\nmodule MorfologiApp {\n    'use strict';\n\n    /**\n     * Array of dependencies to be injected in the application \"dependencies\".\n     */\n    var dependencies = [\n        'ui.router',\n        'pascalprecht.translate',\n        'ngDraggable',\n        'angular-flippy'\n    ];\n\n    angular.module('MorfologiApp', dependencies)\n        .constant('MorfologiConstants', MorfologiConstants)\n        .service(MorfologiApp.Services)\n        .directive(MorfologiApp.Directives)\n        .controller(MorfologiApp.Controllers)\n        .config(configApp)\n        .run(runApp)\n}","/// <reference path=\"../_references.ts\"/>\n\nmodule MorfologiApp {\n\n    \"use strict\";\n    import MomentDuration = moment.Duration;\n\n    interface Serializable<T> {\n        deserialise(input: Object): T;\n    }\n\n\n\n}","/// <reference path=\"../_references.ts\"/>\n/// <reference path=\"../models/models\"/>\n\nmodule MorfologiApp.Services {\n\n    import ITimeoutService = angular.ITimeoutService;\n    \"use strict\";\n    export interface IServerService {\n\n    }\n\n    export class ServerService implements IServerService {\n        static $inject = ['$window', '$timeout'];\n\n        private storageFileName: string;\n        private audioFile: Media;\n        private day3AudioFile: Media;\n        private desktopBrowserTesting: boolean;\n        private desktopBrowserStorage: Storage;\n        private recordingAttempts: number = 0;\n        private recordingTimer: number;\n        private day3RecordingTimer: number;\n\n        constructor(private $window: ng.IWindowService,\n                    private $cordovaDevice: any,\n                    private $cordovaFile: any,\n                    private $cordovaCapture: any,\n                    private $cordovaMedia: any,\n                    private $cordovaAppVersion: any,\n                    private $timeout: ITimeoutService) {\n\n            // If using a desktop browser, we will set up storage in memory for testing purposes\n            this.desktopBrowserTesting = !$window.cordova;\n            this.desktopBrowserStorage = null;\n            this.recordingTimer = 0;\n\n            if (!this.desktopBrowserTesting) {\n                this.createTrackingDirectory();\n            }\n        }\n\n        getUUID(): string {\n            if (this.$window.cordova !== undefined) {\n                return this.$cordovaDevice.getUUID();\n            } else {\n                return 'No mobile device';\n            }\n        }\n\n        setStorageFilename(name: string) {\n            this.storageFileName = name;\n        }\n\n        /**\n         * Check for the existance of the Storage, if not initialise it and call writeStorage\n         *\n         * @param setupModel\n         * @param username\n         * @param sFunc\n         * @param eFunc\n         */\n        storageExists(setupModel, username, sFunc, eFunc): void {\n            if (this.desktopBrowserTesting) {\n                if (this.desktopBrowserStorage === null || (this.desktopBrowserStorage.hasOwnProperty('pseudoFilename')\n                    && this.desktopBrowserStorage['pseudoFilename'] !== this.storageFileName)) {     // Storage does not exist yet, create it\n                        var newStorage = new Storage().initialise(setupModel, username);\n                        this.writeStorage(newStorage, sFunc, eFunc, false);\n                } else {\n                    if(sFunc !== null) {\n                        sFunc();\n                    }\n                }\n            } else {\n                this.$cordovaFile.checkFile(cordova.file.documentsDirectory, this.storageFileName)\n                    .then(() => {\n                        if(sFunc !== null) {\n                            sFunc();\n                        }\n                    }, () => {        // Storage does not exist yet, create it\n                        this.writeStorage(new Storage().initialise(setupModel, username), sFunc, eFunc, false);\n                    });\n            }\n        }\n\n        getStorage(sFunc, eFunc): void {\n            if (this.desktopBrowserTesting) {\n                sFunc(this.desktopBrowserStorage);\n            } else {\n                this.$cordovaFile.readAsText(cordova.file.documentsDirectory, this.storageFileName)\n                    .then((success) => {\n\n                        // Sometimes the cordova writefile routine appends rather than overwites, need to check for this problem..\n                        var cleanedData, endIndex, deJson, newStorage;\n                        endIndex = success.lastIndexOf('\\{\"weeks\"\\:\\[');\n                        if (endIndex !== 0) {\n                            console.log('Data was corrupted - index was: ' + endIndex);\n                            cleanedData = success.substr(0, endIndex);\n                        } else {\n                            console.log('Data is clean to read');\n                            cleanedData = success;\n                        }\n\n                        // Attempt to deserialise the data.  JSON.parse() used by angular.fromJson throwds a syntax error on failure\n                        try {\n                            deJson = angular.fromJson(cleanedData);\n                        } catch (e) {\n\n                            // If read fails, attempt to read the backup file instead\n                            console.log('Regular storage could not be read, trying backup file..');\n                            this.$cordovaFile.readAsText(cordova.file.documentsDirectory, 'storageBackup.json')\n                                .then((success) => {\n\n                                    // Sometimes the cordova writefile routine appends rather than overwites, need to check for this problem..\n                                    var cleanedData, endIndex, deJson, newStorage;\n                                    endIndex = success.lastIndexOf('\\{\"weeks\"\\:\\[');\n                                    if (endIndex !== 0) {\n                                        console.log('Data was corrupted - index was: ' + endIndex);\n                                        cleanedData = success.substr(0, endIndex);\n                                    } else {\n                                        console.log('Data is clean to read');\n                                        cleanedData = success;\n                                    }\n                                    try {\n                                        deJson = angular.fromJson(cleanedData);\n                                    } catch(e) {\n\n                                        // If we arrive here, the read of data file failed completely. Create a new one.\n                                        console.log('Backup storage could not be read. Renaming old storage..');\n                                        this.$cordovaFile.moveFile( cordova.file.documentsDirectory,\n                                            this.storageFileName,\n                                            cordova.file.documentsDirectory,\n                                                this.storageFileName.slice(0, -5) + '-stashed-' + Date.now() + '.json')\n                                            .then(() => {\n\n                                                // The return to DataService with this error will cause a new data file to be created\n                                                eFunc('create_new_storage');\n                                            }, () => {\n                                                console.log('Rename old storage file error!');\n                                            })\n                                    } finally {\n                                        if (typeof deJson !== 'undefined' && deJson != null) {\n                                            newStorage = new Storage().deserialise(deJson);\n                                            console.log('Storage recovered from backup');\n                                            if (sFunc !== null) {\n                                                sFunc(newStorage);\n                                            }\n                                        }\n                                    }\n                                    if(sFunc !== null) {\n                                        sFunc(newStorage);\n                                    }\n                                }, () => {\n                                    console.log('Error reading backup storage file using readAsText');\n                                });\n                        } finally {\n                            if (typeof deJson !== 'undefined' && deJson != null) {\n                                newStorage = new Storage().deserialise(deJson);\n                                console.log('Storage loaded');\n                                if (sFunc !== null) {\n                                    sFunc(newStorage);\n                                }\n                            }\n                        }\n                    }, () => {\n                        console.log('Error reading main storage file using readAsText');\n                    });\n            }\n        }\n\n        writeStorage(storageModel, sFunc, eFunc, backup): void {\n            if (this.desktopBrowserTesting) {\n                this.desktopBrowserStorage = storageModel;\n                this.desktopBrowserStorage['pseudoFilename'] = this.storageFileName;\n                if(sFunc !== null) {\n                    sFunc();\n                }\n            } else {\n                var jsonified = angular.toJson(storageModel);\n                this.$cordovaFile.createFile(cordova.file.documentsDirectory, this.storageFileName, true)\n                    .then(() => {\n\n                        // TESTING!\n                        //var jsonifiedBad = jsonified + 'blah blah' + '\\{\"weeks\"\\:\\[';\n\n                        this.$cordovaFile.writeFile(cordova.file.documentsDirectory, this.storageFileName, jsonified, true)\n                            .then(() => {\n                                if (backup) {\n                                    this.writeStorageBackup(jsonified, sFunc, eFunc);\n                                } else if (sFunc !== null) {\n                                    sFunc();\n                                }\n                            }, () => {\n                                console.log('Unable to write storage file');\n                                eFunc();\n                            });\n                    }, () => {\n                        console.log('Unable to create storage file');\n                    });\n            }\n        }\n\n        writeStorageBackup(jsonifiedStorage, sFunc, eFunc): void {\n            if (this.desktopBrowserTesting) {\n                if(sFunc !== null) {\n                    sFunc();\n                }\n            } else {\n                this.$cordovaFile.createFile(cordova.file.documentsDirectory, 'storageBackup.json', true)\n                    .then(() => {\n                        this.$cordovaFile.writeFile(cordova.file.documentsDirectory, 'storageBackup.json', jsonifiedStorage, true)\n                            .then(() => {\n                                console.log('Wrote storage backup file');\n                                if (sFunc !== null) {\n                                    sFunc();\n                                }\n                            }, () => {\n                                console.log('Unable to write backup storage file');\n                                eFunc();\n                            });\n                    }, () => {\n                        console.log('Unable to create backup storage file');\n                    });\n            }\n        }\n\n        getFreeDiskSpace(sFunc, eFunc): void {\n            if (this.desktopBrowserTesting) {\n                sFunc('no tablet device!');\n            } else {\n                this.$cordovaFile.getFreeDiskSpace()\n                    .then((success) => {\n                        sFunc(success);\n                    }, (error) => {\n                        eFunc(error);\n                    })\n            }\n        }\n\n        clearStorage(): void {\n            this.$cordovaFile.removeFile(cordova.file.documentsDirectory, this.storageFileName)\n                .then(() => {\n                    console.log('Storage file deleted');\n                }, () => {\n                    console.log('Unable to write storage file');\n                });\n        }\n\n        captureVideo(sFunc, eFunc, filename) {\n            var options = {limit: 1, duration: 60};\n            console.log('Capturing video...');\n            this.$cordovaCapture.captureVideo(options).then((videoData) => {\n\n                    var tmpFileDir = 'file:///' + videoData[0].fullPath.substring(0, videoData[0].fullPath.lastIndexOf('/'));\n\n                    this.$cordovaFile.moveFile(tmpFileDir, videoData[0].name, cordova.file.documentsDirectory, filename)\n                        .then( (success) => {\n                            console.log('Finished capturing video. Moved video.');\n                            sFunc(success['nativeURL']);\n                    });\n            }, (error) => {\n                console.log('Video capture error: ' + error);\n                eFunc(error);\n            });\n        }\n\n        startTrackingRecording(filename: string) {\n            if (this.desktopBrowserTesting) {\n                return;\n            }\n            if (this.recordingTimer === 0) {\n                this.recordingAttempts = 0;\n                // https://github.com/remoorejr/cordova-plugin-media-with-compression\n                var options = {\n                    SampleRate: 16000,\n                    NumberOfChannels: 1,\n                    duration: 60\n                };\n                this.audioFile = new Media(\"documents://tracking/\" + filename, () => {\n                    console.log('Recording tracking audio...');\n                }, (error) => {\n                    console.log('Record tracking audio error: ' + error.code);\n                });\n                this.recordingTimer = Date.now();\n                this.audioFile.startRecordWithCompression(options);\n            } else if (this.recordingAttempts < 3) {\n                this.recordingAttempts++;\n                this.$timeout(() => {\n                    this.startTrackingRecording(filename);\n                }, 1000);\n            } else {\n                this.recordingAttempts = 0;\n                console.log('Attempted record failed 3 times. Stopping.');\n            }\n        }\n\n        stopTrackingRecording(filename: string): void {\n            if (this.desktopBrowserTesting) {\n                return;\n            }\n            if (typeof this.audioFile !== 'undefined' && this.audioFile !== null) {\n                this.audioFile.stopRecord();\n                this.audioFile.release();\n                console.log('Finished recording tracking audio.');\n                if (Date.now() - this.recordingTimer < 3000) {\n                    this.removeFile(cordova.file.documentsDirectory + 'tracking/', filename, () => {\n                        console.log('Too short tracking audio file removed');\n                    }, () => {\n                        console.log('Error removing short tracking audio file');\n                    });\n                }\n                this.recordingTimer = 0;\n            }\n            //this.audioFile = null;\n        }\n\n        // Retrieve a Tracking audio file for use as 'blob' to send to Nettskjema\n        getTrackingAudioFile(filename, sFunc, eFunc): void {\n            if (this.desktopBrowserTesting) {\n                eFunc();\n            } else {\n                this.$cordovaFile.readAsArrayBuffer(cordova.file.documentsDirectory + 'tracking/', filename)\n                    .then((success) => {\n                        if(sFunc !== null) {\n                            sFunc(success);\n                        }\n                    }, () => {\n                        if(eFunc !== null) {\n                            eFunc('Error reading MP3 file: ' + filename);\n                        }\n                    });\n            }\n        }\n\n        /*\n        getVideoFile(source: string): Media {\n            return this.$cordovaMedia.newMedia(source);\n        }\n        */\n\n        checkFile(filename: string, sFunc, eFunc) {\n            this.$cordovaFile.checkFile(cordova.file.documentsDirectory, filename)\n                .then((file) => {\n                        sFunc(file);\n                    }, (error) => {\n                        eFunc(error);\n                    }\n                )\n        }\n\n        deleteOldAudioFiles(mediaList: string[], trackingList: string[], lifespan: number): void {\n            var index = 0;\n/*\n            function checkAndRemove() {\n                this.$window.resolveLocalFileSystemURL(cordova.file.documentsDirectory + mediaList[index], (fileEntry) => {\n                    var fileModificationDate = new Date(file.lastModifiedDate);\n                }, (error) => {\n                    console.log('Filesystem error: ' + error);\n                });\n            }\n\n            mediaList.forEach((media) => {\n                this.$window.resolveLocalFileSystemURL(cordova.file.documentsDirectory + media, gotFile, fail);\n            });\n            this.$window.resolveLocalFileSystemURL(cordova.file.documentsDirectory + '/tracking/' + \"www/index.html\", gotFile, fail);\n*/\n        }\n\n        removeFile(path, filename, sFunc, eFunc): void {\n            this.$cordovaFile.removeFile(path, filename)\n                .then(function () {\n                    sFunc();\n                }, function () {\n                    eFunc();\n                });\n        }\n\n        createTrackingDirectory() {\n            this.$cordovaFile.createDir(cordova.file.documentsDirectory, \"tracking\", false)\n                .then(function () {\n                    console.log('Created new tracking directory');\n                }, function (error) {\n                    // Directory already exists\n                    console.log('Tracking directory exists' + error);\n                });\n        }\n\n        startCaptureAudio(taskFilename: string, sFunc, eFunc) {\n            if (this.desktopBrowserTesting) {\n                return;\n            }\n            else {\n                // https://github.com/remoorejr/cordova-plugin-media-with-compression\n                var options = {\n                    SampleRate: 32000,\n                    NumberOfChannels: 1,\n                    duration: 60\n                };\n                this.day3AudioFile = new Media(\"documents://\" + taskFilename, () => {\n                    console.log('Recording Task audio...');\n                    sFunc();\n                }, (error) => {\n                    console.log('Record Task audio error: ' + error.code);\n                    eFunc();\n                });\n                this.day3RecordingTimer = Date.now();\n                this.day3AudioFile.startRecordWithCompression(options);\n            }\n        }\n\n        stopCaptureAudio(taskFilename: string, currentUsage: UsageStorage, newTrackingAudioFilename: string, sFunc, eFunc): void {\n            if (this.desktopBrowserTesting) {\n                return;\n            }\n            if (typeof this.day3AudioFile !== 'undefined' && this.day3AudioFile !== null) {\n                this.day3AudioFile.stopRecord();\n                this.day3AudioFile.release();\n                if (currentUsage.audio_file !== '') {\n                    this.removeFile(cordova.file.documentsDirectory + 'tracking/', currentUsage.audio_file , () => {\n                        console.log('Older audio recording removed for this Tracking');\n                        currentUsage.audio_file = '';\n                    }, (error) => {\n                        eFunc(error);\n                    });\n                }\n                if (Date.now() - this.day3RecordingTimer < 1000) {\n                    this.removeFile(cordova.file.documentsDirectory , taskFilename, () => {\n                        console.log('Too short Tracking audio file removed');\n                        sFunc(null);\n                    }, (error) => {\n                        eFunc(error);\n                    });\n                } else {\n                    this.$cordovaFile.copyFile(cordova.file.documentsDirectory, taskFilename, cordova.file.documentsDirectory + 'tracking/', newTrackingAudioFilename)\n                        .then( () => {\n                            currentUsage.audio_file = newTrackingAudioFilename;\n                            this.checkFile(taskFilename, sFunc, eFunc);\n                        }, (error) => {\n                            console.log('Copy Tracking audio error' + error);\n                        });\n                }\n            } else {\n                currentUsage.audio_file = '';\n                this.checkFile(taskFilename, sFunc, eFunc);\n            }\n        }\n\n        getDeviceID(): string {\n            if(this.desktopBrowserTesting) {\n                return 'desktop device';\n            } else {\n                return this.$cordovaDevice.getUUID();\n            }\n        }\n\n        getAppVersion(callback): void {\n            if(this.desktopBrowserTesting) {\n                callback('desktop');\n            } else {\n                this.$cordovaAppVersion.getVersionNumber()\n                    .then((version) => {\n                            callback(version);\n                        }\n                    );\n            }\n        }\n\n    }\n\n}\n","/// <reference path=\"../../_references.ts\"/>\n/// <reference path=\"../../services/dataService\"/>\n\n/**\n * On click, plays a video\n * On end, activates the next task\n *\n * Use this directive in the form:\n * <div isp-video-player></div>\n */\nmodule MorfologiApp.Directives {\n    import ISCEService = angular.ISCEService;\n    \"use strict\";\n\n    //isolated scope interface\n    export interface IISPVideoPlayerDirectiveScope extends ng.IScope {\n        ispVideoUrl: string;\n        ispPosterUrl: string;\n        ispActive: {};\n        ispType: string;\n        ispOnPlay(): void;\n        ispOnCompleted(): void;\n    }\n\n    class VideoPlayerController {\n        static $inject: string[] = ['$scope', '$sce'];\n\n        private posterUrl: string = \"\";\n        private videoUrl: string = \"\";\n        public video: HTMLVideoElement;\n        public playing: boolean;\n        public playImage: string;\n\n        constructor(private isolatedScope: IISPVideoPlayerDirectiveScope, private $sce: ISCEService) {\n            this.playing = false;\n            this.playImage = '1';\n            this.videoUrl = this.$sce.getTrustedResourceUrl(this.isolatedScope.ispVideoUrl);\n            this.posterUrl = this.isolatedScope.ispPosterUrl;\n            if (typeof this.isolatedScope.ispType !== 'undefined' && this.isolatedScope.ispType != null) {\n                if (this.isolatedScope.ispType === 'task8') {\n                    this.playImage = '2';\n                } else if (this.isolatedScope.ispType === 'none') {\n                    this.playImage = '';\n                } else {\n                    this.playImage = '1';\n                }\n            }\n\n            isolatedScope.$watch(() => { return isolatedScope.ispActive['playing'] }, (newValue) => {\n                if (newValue === true) {\n                   if (isolatedScope.ispActive['playing'] === true ) {\n                       this.playVideo();\n                   }\n                }\n            });\n        };\n\n        playVideo() {\n            if (this.isolatedScope.ispActive['active']) {\n                this.playing = true;\n                this.video.load();\n                this.video.play();\n                this.isolatedScope.ispOnPlay();\n            }\n        }\n\n    }\n\n    function linker(isolatedScope: IISPVideoPlayerDirectiveScope , element: ng.IAugmentedJQuery,\n                    attributes: ng.IAttributes, ctrl: VideoPlayerController) {\n\n        var c = element.children();\n        ctrl.video = <HTMLVideoElement> c[0];\n        ctrl.video.autoplay = false;\n\n        ctrl.video.addEventListener('ended', () => {\n            ctrl.playing = false;\n            isolatedScope.ispActive['playing'] = false;\n            isolatedScope.ispOnCompleted();\n            isolatedScope.$digest();\n        });\n    }\n\n    //directive declaration\n    export function ispVideoPlayer(): ng.IDirective {\n        return {\n            restrict: 'A',\n            controller: VideoPlayerController,\n            controllerAs: 'vpC',\n            replace: true,\n            templateUrl: 'js/components/videoplayer/videoplayer.html',\n            scope: {\n                ispVideoUrl: '@',\n                ispPosterUrl: '@',\n                ispOnCompleted: '&',\n                ispActive: '=',\n                ispOnPlay: '&',\n                ispType: '@'\n            },\n            link: linker\n        };\n    }\n\n    //Html5 video fix\n    export function html5videofix(): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function(isolatedScope: IISPVideoPlayerDirectiveScope, element, attr) {\n                attr.$set('src', attr['vsrc']);\n                attr.$set('poster', attr['psrc']);\n                attr.$set('autoplay', false);\n                attr.$set('webkit-playsinline', '');\n                attr.$set('playsinline', '');\n            }\n        };\n    }\n}\n","/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nmodule MorfologiApp.Controllers {\n    \"use strict\";\n    import IScope = angular.IScope;\n    import ITimeoutService = angular.ITimeoutService;\n    import IDataService = MorfologiApp.Services.DataService;\n\n    export class Task2Controller {\n        static $inject = ['$scope', '$timeout', 'DataService'];\n\n        private word: string;\n        private dayWord: string;\n        private dayIndex: number;\n        private stage: string;\n        private correctCounter: number;\n        private stageOne: {}[];\n        private stageTwo: {}[];\n\n        constructor(private $scope: IScope, private $timeout: ITimeoutService, private dataService: IDataService) {\n            this.word = dataService.getWord();\n            this.dayWord = dataService.getWordForConsolidationDay();\n            this.dayIndex = dataService.getDay();\n            this.stage = 'stageOne';\n            this.correctCounter = 0;\n\n            var correctToShuffle = [];\n            var incorrectToShuffle = [];\n\n            for(var i=1; i < 25; i++) {\n                var item = {\n                    image: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.jpg',\n                    audio: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.mp3',\n                    correct: true,\n                    highlighted: false\n                };\n                correctToShuffle.push(item);\n            }\n\n            for(var i=1; i < 7; i++) {\n                var item = {\n                    image: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.jpg',\n                    audio: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.mp3',\n                    correct: false,\n                    highlighted: false\n                };\n                incorrectToShuffle.push(item);\n            }\n\n            var stageTwoCorrect = correctToShuffle.splice(12, 12);\n            var stageTwoIncorrect = incorrectToShuffle.splice(3, 3);\n\n            this.stageOne = dataService.shuffleArray(correctToShuffle.concat(incorrectToShuffle));\n            this.stageTwo = dataService.shuffleArray(stageTwoCorrect.concat(stageTwoIncorrect));\n\n            // This should be run at the end of the constructor\n            /*\n            var handle = this;\n            dataService.setInteractionEndActivateTaskCallback(() => {\n                this.activateTask(handle);\n            });\n            */\n            dataService.setupAudioIntroduction('content/' + this.word + '/task1/instruction-' + this.dayWord + '.mp3');\n            dataService.playAudioIntroduction(3000);\n        }\n\n        activateTask(handle) {\n\n        }\n\n        clickItem(item) {\n            this.$timeout(() => {\n                new Audio(item['audio']).play();\n            }, 250);\n            if (item['highlighted']) {\n                return;\n            }\n            item['highlighted'] = true;\n            if (!item.correct) {\n                this.$timeout(() => {\n                    item['highlighted'] = false;\n                }, 2000)\n            } else {\n                this.correctCounter++;\n            }\n            if (this.correctCounter === 12) {\n                if(this.stage === 'stageOne') {\n                    this.$scope['wpC'].setAndShowOnetimeInternalForwardArrowCallback( () => {\n                        this.startStageTwo();\n                    })\n                } else {\n                    this.$scope['wpC'].taskFinished();\n                }\n            }\n        }\n\n        startStageTwo() {\n            this.stage = 'stageTwo';\n            this.correctCounter = 0;\n            new Audio('content/' + this.word + '/task1/instruction-' + this.dayWord + '.mp3').play();\n        }\n\n\n    }\n}\n","/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nmodule MorfologiApp.Controllers {\n    \"use strict\";\n    import IScope = angular.IScope;\n    import ITimeoutService = angular.ITimeoutService;\n    import IDataService = MorfologiApp.Services.DataService;\n\n    export class Task3Controller {\n        static $inject = ['$scope', '$timeout', 'DataService'];\n\n        private word: string;\n        private dayWord: string;\n        private dayIndex: number;\n        private page: number;\n        private round: number;\n        private bounce: boolean;\n        private pointerStyle: {};\n        private familyCharacter: string;\n        private kangarooData: {};\n        private draggableObjects1: {}[];\n        private draggableObjects2: {}[];\n        private draggableObjects3: {}[];\n        private droppedObjects: {}[];\n\n        private iHeight: number = 111;\n        private iWidth: number = 148;\n\n        private vanIsClosed: boolean;\n        private activatePointer: boolean;\n\n        constructor(private $scope: IScope, private $timeout: ITimeoutService, private dataService: IDataService) {\n            this.word = dataService.getWord();\n            this.dayWord = dataService.getWordForConsolidationDay();\n            this.dayIndex = dataService.getDay();\n            this.page = 1;\n            this.round = 0;\n            this.bounce = false;\n            this.familyCharacter = '';\n            this.droppedObjects = [];\n            this.draggableObjects1 = [];\n            this.draggableObjects2 = [];\n            this.draggableObjects3 = [];\n            this.vanIsClosed = false;\n            this.activatePointer = false;\n\n            this.kangarooData = [\n                {\n                    body: {\n                        width: '500px',\n                        bottom: '100px',\n                        left: '-80px'\n                    },\n                    pouch: {\n                        width: '150px',\n                        height: '150px',\n                        left: '70px',\n                        top: '300px'\n                    },\n                    pointer: {\n                        left: '100px',\n                        top: '400px'\n                    },\n                    pageThreeData: {\n                        \"code\": \"zoomable-image\",\n                        \"id\": 11,\n                        \"sequence\": -1,\n                        \"description\": \"kangaroo jumps off screen\",\n                        \"start\": {\n                            \"x\": -50,\n                            \"y\": 250,\n                            \"w\": 400,\n                            \"h\": 400\n                        },\n                        \"transition\": {\n                            \"x\": 1900,\n                            \"y\": 800,\n                            \"scale\": 1,\n                            \"duration\": 4\n                        },\n                        \"opacity\": 1,\n                        \"visible_before\": true,\n                        \"visible_after\": true,\n                        \"auto_start\": true,\n                        \"auto_return\": false,\n                        \"allow_return\": false,\n                        \"type\": \"png\"\n                    }\n                },\n                {\n                    body: {\n                        width: '500px',\n                        bottom: '100px',\n                        left: '-100px'\n                    },\n                    pouch: {\n                        width: '150px',\n                        height: '150px',\n                        left: '65px',\n                        top: '350px'\n                    },\n                    pointer: {\n                        left: '350px',\n                        top: '500px'\n                    },\n                    pageThreeData: {\n                        \"code\": \"zoomable-image\",\n                        \"id\": 12,\n                        \"sequence\": -1,\n                        \"description\": \"kangaroo jumps off screen\",\n                        \"start\": {\n                            \"x\": 250,\n                            \"y\": 380,\n                            \"w\": 300,\n                            \"h\": 300\n                        },\n                        \"transition\": {\n                            \"x\": -1900,\n                            \"y\": -400,\n                            \"scale\": 1,\n                            \"duration\": 5\n                        },\n                        \"opacity\": 1,\n                        \"visible_before\": true,\n                        \"visible_after\": true,\n                        \"auto_start\": true,\n                        \"auto_return\": false,\n                        \"allow_return\": false,\n                        \"type\": \"png\"\n                    }\n                },\n                {\n                    body: {\n                        width: '500px',\n                        bottom: '100px',\n                        left: '-100px'\n                    },\n                    pouch: {\n                        width: '100px',\n                        height: '100px',\n                        left: '140px',\n                        top: '400px'\n                    },\n                    pointer: {\n                        left: '550px',\n                        top: '450px'\n                    },\n                    pageThreeData: {\n                        \"code\": \"zoomable-image\",\n                        \"id\": 13,\n                        \"sequence\": -1,\n                        \"description\": \"kangaroo jumps off screen\",\n                        \"start\": {\n                            \"x\": 450,\n                            \"y\": 300,\n                            \"w\": 250,\n                            \"h\": 250\n                        },\n                        \"transition\": {\n                            \"x\": -1000,\n                            \"y\": -1000,\n                            \"scale\": 1,\n                            \"duration\": 3\n                        },\n                        \"opacity\": 1,\n                        \"visible_before\": true,\n                        \"visible_after\": true,\n                        \"auto_start\": true,\n                        \"auto_return\": false,\n                        \"allow_return\": false,\n                        \"type\": \"png\"\n                    }\n                }\n            ];\n\n\n            var correctToShuffle = [];\n            var incorrectToShuffle = [];\n\n            for (var i = 1; i < 25; i++) {\n                var item = {\n                    image: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.jpg',\n                    audio: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.mp3',\n                    correct: true,\n                    style: {\n                        'top': 0,\n                        'left': 0,\n                        'width': 0,\n                        'height': 0\n                    },\n                    highlighted: false,\n                    draggable: true,\n                    transition: true,\n                    position: 0\n                };\n                correctToShuffle.push(item);\n            }\n\n            for (var i = 1; i < 7; i++) {\n                var item = {\n                    image: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.jpg',\n                    audio: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.mp3',\n                    correct: false,\n                    style: {\n                        'top': 0,\n                        'left': 0,\n                        'width': 0,\n                        'height': 0\n                    },\n                    highlighted: false,\n                    draggable: true,\n                    transition: true,\n                    position: 0\n                };\n                incorrectToShuffle.push(item);\n            }\n\n            var correctShuffled = dataService.shuffleArray(correctToShuffle);\n            var incorrectShuffled = dataService.shuffleArray(incorrectToShuffle);\n\n            this.draggableObjects1 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n            this.draggableObjects2 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n            this.draggableObjects3 = dataService.shuffleArray(correctShuffled.concat(incorrectShuffled));\n\n            //this.itemSource = dataService.shuffleArray(correctToShuffle.concat(incorrectToShuffle));\n\n            this.dataService.setupAudioIntroduction('content/common/audio/consolidation/task5/introduction.mp3');\n            this.dataService.playAudioIntroduction(2000);\n            this.$timeout(() => {\n                this.playMainIntro();\n            }, 11000)\n        }\n\n        playMainIntro() {\n            this.dataService.setupAudioIntroduction('content/common/audio/consolidation/task5/introround' + (this.round + 1) + '.mp3');\n            this.dataService.playAudioIntroduction(2000);\n            this.$timeout(() => {\n                this.activatePointer = true;\n            }, 3000)\n        }\n\n        clickKangaroo(index: number) {\n            this.activatePointer = false;\n            if(index === this.round + 1) {\n                this.bounce = true;\n                this.$timeout(() => {\n                    this.round = index;\n                    this.page = 2;\n                    this.bounce = false;\n                    this.introduction();\n                }, 2000);\n            }\n        }\n\n\n        introduction() {\n            this.setupImages();\n            this.dataService.setupAudioIntroduction('content/' + this.word + '/task5/' + this.dayWord + '.mp3');\n            this.dataService.playAudioIntroduction(2000);\n            this.$timeout(() => {\n                this.enlargeImages();\n            }, 1500);\n        }\n\n        setupImages() {\n            var vGap = 30, hGap = 30;\n\n            for (var n = 1; n < 4 ; n++) {\n                var list = this['draggableObjects' + n];\n\n                    for (var position = 0; position < list.length; position++) {\n\n                        // Prepare the images for popping up from their center points\n                        list[position]['style'] = {\n                            'position': 'absolute',\n                            'top': (this.iHeight + vGap) * Math.floor(position / 2) + Math.floor(this.iHeight / 2) + 'px',\n                            'left': (this.iWidth + hGap) * (position % 2) + Math.floor(this.iWidth / 2) + 'px',\n                            'width': '0',\n                            'height': '0'\n                        };\n                }\n            }\n        }\n\n        enlargeImages() {     // After a timeout to allow digest of the previous style, set the style to 'enlarge' the images\n            var vGap = 30, hGap = 30;\n            var items = this['draggableObjects' + this.round];\n            for (var position = 0; position < items.length; position++) {\n                items[position]['style'] = {\n                    'position': 'absolute',\n                    'top': (this.iHeight + vGap) * Math.floor(position / 2) + 'px',\n                    'left': (this.iWidth + hGap) * (position % 2) + 'px',\n                    'width': this.iWidth + 'px',\n                    'height': this.iHeight + 'px'\n                };\n            }\n            this.$timeout(() => {\n                for (var position = 0; position < items.length; position++) {\n                    items[position]['transition'] = false;      // Transition effects dragging, so turn it off now\n                }\n            }, 1000);\n        }\n\n        jumpOffPageThreeCompleted() {\n            this.$scope['wpC'].taskFinished();\n        }\n\n        static clickImage(filename) {\n            new Audio(filename).play();\n        }\n\n        onDropComplete = function(item: {}) {\n            new Audio(item['audio']).play();\n            if (item['correct']) {\n                var iWidth = 80, iHeight = 60, leftOffset = 90, topOffset = 122, shiftFactor = 1.5;\n                this.droppedObjects.push(item);\n                var itemIndex = this['draggableObjects' + this.round].indexOf(item);\n                this['draggableObjects' + this.round].splice(itemIndex, 1);\n                var i = this.droppedObjects.length - 1;\n                item['style'] = {\n                    'position' : 'absolute',\n                    'top' : topOffset + i * shiftFactor + 'px',\n                    'left' : leftOffset - i * shiftFactor + 'px',\n                    'width' : iWidth + (2 * i * shiftFactor) + 'px',\n                    'height' : iHeight + (2 * i * shiftFactor) + 'px',\n                    'transform': 'none'\n                };\n                if (this.droppedObjects.length === 24) {\n                    this.bounce = true;\n                    this.$timeout(() => {\n                        this.page = 3;\n                    }, 2000);\n                } else if (this.droppedObjects.length === 8 || this.droppedObjects.length === 16) {\n                    this.bounce = true;\n                    this.$timeout(() => {\n                        this.bounce = false;\n                        this.page = 1;\n                        this.playMainIntro();\n                    }, 2000);\n                }\n\n            }\n\n        };\n\n    }\n}\n","/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nmodule MorfologiApp.Controllers {\n    \"use strict\";\n    import IScope = angular.IScope;\n    import ITimeoutService = angular.ITimeoutService;\n    import IDataService = MorfologiApp.Services.DataService;\n\n    export class Task5Controller {\n        static $inject = ['$scope', '$timeout', 'DataService'];\n\n        private word: string;\n        private dayWord: string;\n        private dayIndex: number;\n        private page: number;\n        private round: number;\n        private familyCharacter: string;\n        private pageOneImageData: {};\n        private pageThreeImageData: {};\n        private draggableObjects1: {}[];\n        private draggableObjects2: {}[];\n        private draggableObjects3: {}[];\n        private droppedObjects: {}[];\n\n        private iHeight: number = 111;\n        private iWidth: number = 148;\n\n        private vanIsClosed: boolean;\n        private opacity: number;\n\n        constructor(private $scope: IScope, private $timeout: ITimeoutService, private dataService: IDataService) {\n            this.word = dataService.getWord();\n            this.dayWord = dataService.getWordForConsolidationDay();\n            this.dayIndex = dataService.getDay();\n            this.page = 1;\n            this.round = 0;\n            this.familyCharacter = '';\n            this.droppedObjects = [];\n            this.draggableObjects1 = [];\n            this.draggableObjects2 = [];\n            this.draggableObjects3 = [];\n            this.vanIsClosed = false;\n            this.opacity = 0;\n\n            this.pageOneImageData = {\n                \"code\": \"zoomable-image\",\n                \"id\": 11,\n                \"sequence\": -1,\n                \"description\": \"car drives on to screen\",\n                \"start\": {\n                    \"x\": -900,\n                    \"y\": 100,\n                    \"w\": 800,\n                    \"h\": 600\n                },\n                \"transition\": {\n                    \"x\": 900,\n                    \"y\": 0,\n                    \"scale\": 1,\n                    \"duration\": 5\n                },\n                \"opacity\": 1,\n                \"visible_before\": true,\n                \"visible_after\": true,\n                \"auto_start\": true,\n                \"auto_return\": false,\n                \"allow_return\": false,\n                \"type\": \"png\"\n            };\n\n            this.pageThreeImageData = {\n                \"code\": \"zoomable-image\",\n                \"id\": 11,\n                \"sequence\": -1,\n                \"description\": \"car drives off screen\",\n                \"start\": {\n                    \"x\": -900,\n                    \"y\": 100,\n                    \"w\": 800,\n                    \"h\": 600\n                },\n                \"transition\": {\n                    \"x\": 1900,\n                    \"y\": 0,\n                    \"scale\": 1,\n                    \"duration\": 6\n                },\n                \"opacity\": 1,\n                \"visible_before\": true,\n                \"visible_after\": true,\n                \"auto_start\": true,\n                \"auto_return\": false,\n                \"allow_return\": false,\n                \"type\": \"png\"\n            };\n\n            var correctToShuffle = [];\n            var incorrectToShuffle = [];\n\n            for (var i = 1; i < 25; i++) {\n                var item = {\n                    image: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.jpg',\n                    audio: 'content/' + this.word + '/' + this.dayWord + '/correct/' + i + '.mp3',\n                    correct: true,\n                    style: {\n                        'top': 0,\n                        'left': 0,\n                        'width': 0,\n                        'height': 0\n                    },\n                    highlighted: false,\n                    draggable: true,\n                    transition: true,\n                    position: 0\n                };\n                correctToShuffle.push(item);\n            }\n\n            for (var i = 1; i < 7; i++) {\n                var item = {\n                    image: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.jpg',\n                    audio: 'content/' + this.word + '/' + this.dayWord + '/incorrect/' + i + '.mp3',\n                    correct: false,\n                    style: {\n                        'top': 0,\n                        'left': 0,\n                        'width': 0,\n                        'height': 0\n                    },\n                    highlighted: false,\n                    draggable: true,\n                    transition: true,\n                    position: 0\n                };\n                incorrectToShuffle.push(item);\n            }\n\n            var correctShuffled = dataService.shuffleArray(correctToShuffle);\n            var incorrectShuffled = dataService.shuffleArray(incorrectToShuffle);\n\n            this.draggableObjects1 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n            this.draggableObjects2 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n            this.draggableObjects3 = dataService.shuffleArray(correctShuffled.concat(incorrectShuffled));\n\n            this.dataService.setInteractionEndActivateTaskCallback(() => {\n                this.dataService.clearInteractionEndActivateTaskCallback();\n                this.dataService.setupAudioIntroduction('content/common/audio/consolidation/task3/instruction.mp3');\n                this.dataService.playAudioIntroduction(1000);\n            });\n            this.dataService.setupAudioIntroduction('content/common/audio/consolidation/task3/van-stopping.mp3');\n            this.dataService.playAudioIntroduction(1000);\n        }\n\n\n        introduction() {\n            var audioFile = '';\n            this.round++;\n\n            this.setupImages();\n\n            this.$timeout(() => {\n                if (this.round === 1) {\n                    this.familyCharacter = 'mother.png';\n                    audioFile = 'content/' + this.word + '/task3/' + this.dayWord + '/mother.mp3';\n                } else if (this.round === 2) {\n                    this.familyCharacter = 'father.png';\n                    audioFile = 'content/' + this.word + '/task3/' + this.dayWord + '/father.mp3';\n                } else {\n                    this.familyCharacter = 'daughter.png';\n                    audioFile = 'content/' + this.word + '/task3/' + this.dayWord + '/daughter.mp3';\n                }\n                this.dataService.setupAudioIntroduction(audioFile);\n            }, 1000);\n\n            this.$timeout(() => {\n                this.opacity = 1;\n                this.dataService.playAudioIntroduction(0);\n            }, 2000);\n\n            this.$timeout(() => {\n                this.enlargeImages();\n            }, 4000);\n\n        }\n\n        setupImages() {\n            var vGap = 10, hGap = 10;\n\n            for (var n = 1; n < 4 ; n++) {\n                var list = this['draggableObjects' + n];\n\n                    for (var position = 0; position < list.length; position++) {\n\n                        // Prepare the images for popping up from their center points\n                        list[position]['style'] = {\n                            'position': 'absolute',\n                            'top': (this.iHeight + vGap) * Math.floor(position / 5) + Math.floor(this.iHeight / 2) + 'px',\n                            'left': (this.iWidth + hGap) * (position % 5) + Math.floor(this.iWidth / 2) + 'px',\n                            'width': '0',\n                            'height': '0'\n                        };\n                }\n            }\n        }\n\n        enlargeImages() {     // After a timeout to allow digest of the previous style, set the style to 'enlarge' the images\n            var vGap = 10, hGap = 10;\n            var items = this['draggableObjects' + this.round];\n            for (var position = 0; position < items.length; position++) {\n                items[position]['style'] = {\n                    'position': 'absolute',\n                    'top': (this.iHeight + vGap) * Math.floor(position / 5) + 'px',\n                    'left': (this.iWidth + hGap) * (position % 5) + 'px',\n                    'width': this.iWidth + 'px',\n                    'height': this.iHeight + 'px'\n                };\n            }\n            this.$timeout(() => {\n                for (var position = 0; position < items.length; position++) {\n                    items[position]['transition'] = false;      // Transition effects dragging, so turn it off now\n                }\n            }, 1000);\n        }\n\n        driveOnPageOneCompleted() {\n            this.$scope['wpC'].setAndShowOnetimeInternalForwardArrowCallback( () => {\n                this.page = 2;\n                this.introduction();\n            })\n        }\n\n        driveOffPageThreeCompleted() {\n            this.$scope['wpC'].taskFinished();\n        }\n\n        static clickImage(filename) {\n            new Audio(filename).play();\n        }\n\n        closeVan() {\n            this.$timeout(() => {\n                this.vanIsClosed = true;\n                new Audio('content/common/audio/consolidation/task3/van-door.mp3').play();\n                this.$timeout(() => {\n                    this.page = 3;\n                    new Audio('content/common/audio/consolidation/task3/van-driving.mp3').play();\n                }, 500)\n            }, 1500);\n        }\n\n        onDropComplete = function(item: {}) {\n            new Audio(item['audio']).play();\n            if (item['correct']) {\n                var iWidth = 80, iHeight = 60, leftOffset = 90, topOffset = 122, shiftFactor = 1.5;\n                this.droppedObjects.push(item);\n                var itemIndex = this['draggableObjects' + this.round].indexOf(item);\n                this['draggableObjects' + this.round].splice(itemIndex, 1);\n                var i = this.droppedObjects.length - 1;\n                item['style'] = {\n                    'position' : 'absolute',\n                    'top' : topOffset + i * shiftFactor + 'px',\n                    'left' : leftOffset - i * shiftFactor + 'px',\n                    'width' : iWidth + (2 * i * shiftFactor) + 'px',\n                    'height' : iHeight + (2 * i * shiftFactor) + 'px',\n                    'transform': 'none'\n                };\n                if (this.droppedObjects.length === 24) {\n                    this.opacity = 0;\n                    this.closeVan();\n                } else if (this.droppedObjects.length === 8 || this.droppedObjects.length === 16) {\n                    this.opacity = 0;\n                    this.introduction();\n                }\n            }\n\n        };\n\n    }\n}\n","/// <reference path=\"../../_references\"/>\n/// <reference path=\"../../models/models\"/>\n\nmodule MorfologiApp.Controllers {\n    import ILocationService = angular.ILocationService;\n    import IScope = angular.IScope;\n\n    \"use strict\";\n\n    export class MainPanelController {\n        static $inject = ['$http', '$location', '$scope'];\n\n        private language = \"\";\n        private taskTemplateUrl: string;\n\n        constructor( private $http:ng.IHttpService,\n                     private $location: ILocationService,\n                     private $scope: IScope) {\n\n            this.initialise();\n        }\n\n        initialise() {\n           // this.language = this.dataService.getLanguage();\n        }\n\n    }\n}\n","/// <reference path=\"../../_references\"/>\n/// <reference path=\"../../models/models\"/>\n\nmodule MorfologiApp.Controllers {\n    import ILocationService = angular.ILocationService;\n    import IScope = angular.IScope;\n\n    \"use strict\";\n\n    export class TestPanelController {\n        static $inject = ['$http', '$location', '$scope'];\n\n        private language = \"\";\n\n        constructor( private $http:ng.IHttpService,\n                     private $location: ILocationService,\n                     private $scope: IScope) {\n\n            this.initialise();\n        }\n\n        initialise() {\n           // this.language = this.dataService.getLanguage();\n        }\n\n    }\n}\n"],"sourceRoot":"/source/"}